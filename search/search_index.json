{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"xc1de/","title":"Data Types","text":"<ul> <li>MsTextId: String id, points to <code>bdat/&lt;locale&gt;/&lt;table_name&gt;_ms.bdat</code> for fetching a localized string</li> </ul>"},{"location":"xc1de/#glossary","title":"Glossary","text":"<ul> <li>Ene - Enemy</li> <li>EXC - Exchange</li> <li>FLD - Field</li> <li>Grow - Level Up</li> <li>JNL - Journal</li> <li>Kizunagram - Name of the affinity chart menu</li> <li>Kb - Knockback</li> <li>Kp - File resources</li> <li>Kzn - Kizuna (bond in Japanese)</li> <li>ITM - Item</li> <li>Lnd - Landmark</li> <li>MNU - Menu</li> <li>Mes - Message</li> <li>MS - Monolith Soft or for Bdats, localization</li> <li>MsTextId - Localized text entry ID</li> <li>MSProj - Monolith Soft Font Projects - Sets up font icons &amp; other properties?</li> <li>NPC - Non-Playable Character</li> <li>PS - Passive</li> <li>PC - Playable Character</li> <li>RLT - Relate/Relation</li> <li>Scn - Scene?</li> <li>Scenario Flag - Main quest progress as a number. (Refer to MNU_scenario)</li> <li>Telop - \"The term telop is used in Japan (\u30c6\u30ed\u30c3\u30d7, Teroppu) to indicate text superimposed on a screen, such as captions, subtitles, or scrolling tickers.\"</li> <li>Sys - System</li> <li>Tbox - Treasure Box/Chest</li> <li>Uio - UI Object</li> <li>Val - Valuable</li> <li>Vib - Vibration</li> <li>Wpn - Weapon</li> </ul>"},{"location":"xc1de/hardcoded_notes/","title":"Hardcoded notes","text":"<p>List of weird functions to investigate or do excessive hardcoding</p> <ul> <li><code>game::MenuGameDataMapUtil::GetMapAreaIdFromMapId</code> hardcodes map id to region.</li> <li><code>game::DataMenuUtil::isEquipStyleViewSys</code> is weird</li> <li>Check <code>evu::EvtResName::getResType</code></li> <li>Check <code>game::MenuGameQuestAcc::isTaskCompleted</code></li> <li>Check <code>game::MenuGameBattleStateUtil::getType</code></li> <li>Check <code>game::EffUtil::getStatusEffectToCndEffId</code></li> <li>Check <code>game::MenuGameDataMap::getLandmarkLockReason</code></li> <li>Check <code>game::SeqMapJump::onInitialize</code></li> <li>Check <code>game::DataPassiveSkill::isLinkLocked</code></li> <li>Check <code>game::DataUtil::isNebula</code> hardcoded to en070101</li> <li>Check <code>game::DataUtil::isMonadoShulk</code></li> <li>Check <code>game::DataUtil::calcExpApSpForBattle</code></li> <li>Check <code>game::MenuPartsReviveColony6Util::incrementRevivalLevel</code> - hardcoded levels</li> <li>Check <code>game::DataUtil::isRevivalCol6Enabled</code></li> <li>Check <code>game::GimmickQstMarker::updateGimmicklist</code> - if ( (unsigned __int16)v44 == 636 &amp;&amp; State == 121 )</li> <li><code>game::SeqMapJump::resoterTreasureBox</code> 32 boxes</li> </ul> <p>game::DataBdat::setupFp</p>"},{"location":"xc1de/table_ids/","title":"Table ids","text":"<p>pc_arts = 0, pc_arts_ms = 1, pc_atk = 2, pctalk_01 = 3, pctalk_01_ms = 4, pctalk_02 = 5, pctalk_02_ms = 6, FLD_maplist = 7, FLD_maplist_ms = 8, FLD_npclist = 9, FLD_npclist_ms = 10, FLD_pointlist = 11, FLD_pointlist_ms = 12, FLD_tboxlist = 13, BTL_pclist = 14, BTL_pclist_ms = 15, BTL_enelist = 16, BTL_enelist_ms = 17, BTL_bufflist = 18, BTL_bufflist_ms = 19, BTL_skilllist = 20, BTL_skilllist_ms = 21, BTL_PSVskill = 22, BTL_PSVskill_ms = 23, BTL_PSVlink = 24, BTL_PSSlist = 25, BTL_PSSlist_ms = 26, BTL_crystalnamelist = 27, BTL_crystalnamelist_ms = 28, BTL_growlist = 29, BTL_camlist = 30, BTL_camdatalist = 31, BTL_kiriEnemyList = 32, BTL_meliaScenarioParam = 33, BTL_meliaScenarioKiriEnemy = 34, BTL_noponHighTension = 35, BTL_noponBaseData = 36, BTL_noponAllAtk = 37, BTL_GimmckBossRescue = 38, BTL_GimmckBossRescue_ms = 39, ene_arts = 40, ene_arts_ms = 41, ene_atk = 42, nopon_arts_param = 43, nopon_arts = 44, nopon_arts_ms = 45, ITM_itemlist = 46, ITM_wpnlist = 47, ITM_wpnlist_ms = 48, ITM_equiplist = 49, ITM_equiplist_ms = 50, ITM_headlist = 51, ITM_bodylist = 52, ITM_armlist = 53, ITM_waistlist = 54, ITM_legglist = 55, ITM_materiallist = 56, ITM_materiallist_ms = 57, ITM_artslist = 58, ITM_artslist_ms = 59, ITM_collectlist = 60, ITM_collectlist_ms = 61, ITM_valuablelist = 62, ITM_valuablelist_ms = 63, ITM_crystallist = 64, ITM_dropcrystallist = 65, ITM_fashionlist_ms = 66, MNU_main = 67, MNU_main_ms = 68, MNU_sysmes = 69, MNU_sysmes_ms = 70, MNU_name = 71, MNU_name_ms = 72, MNU_quest = 73, MNU_quest_ms = 74, MNU_kyeassign = 75, MNU_kyeassign_ms = 76, MNU_passive = 77, MNU_passive_ms = 78, MNU_arts = 79, MNU_arts_ms = 80, MNU_battle = 81, MNU_battle_ms = 82, MNU_item = 83, MNU_item_ms = 84, MNU_shop = 85, MNU_shop_ms = 86, MNU_map = 87, MNU_map_ms = 88, MNU_party = 89, MNU_party_ms = 90, MNU_relate = 91, MNU_relate_ms = 92, shoplist = 93, MNU_artsshop = 94, MNU_collect = 95, MNU_collect_ms = 96, MNU_update = 97, MNU_update_ms = 98, MNU_crystal = 99, MNU_crystal_ms = 100, SYS_filelist = 101, SYS_filelist_ex = 102, SYS_viblist = 103, grow_arts_base = 104, grow_arts_rate = 105, MNU_arts_tag = 106, MNU_arts_tag_ms = 107, MNU_event_telop = 108, MNU_event_telop_ms = 109, MNU_event_location = 110, MNU_event_logo = 111, MNU_title = 112, MNU_title_ms = 113, MNU_playaward = 114, MNU_playaward_ms = 115, MNU_col6 = 116, MNU_col6_ms = 117, MNU_saveload_scenario = 118, MNU_saveload_ms = 119, MNU_dialog = 120, scmarkerlist = 121, MNU_item_mes_a = 122, MNU_item_mes_a_ms = 123, MNU_item_mes_b = 124, MNU_item_mes_b_ms = 125, MNU_skill = 126, MNU_skill_ms = 127, MNU_buff = 128, MNU_buff_ms = 129, MNU_PSskil = 130, MNU_PSskil_ms = 131, MNU_PSlink = 132, MNU_PSlink_ms = 133, MNU_PSset = 134, MNU_PSset_ms = 135, MNU_col = 136, MNU_col_pic = 137, MNU_mappoint = 138, MNU_map_layout_parts = 139, MNU_minimap_list_hud = 140, MNU_minimap_list_hud_ms = 141, MNU_minimap_list_fs = 142, MNU_minimap_list_fs_ms = 143, MNU_exchangelist = 144, MMU_questeve = 145, MNU_filter = 146, MNU_filter_ms = 147, MNU_sort = 148, MNU_sort_ms = 149, MNU_operation_guide = 150, MNU_operation_guide_ms = 151, MNU_header_text = 152, MNU_header_info = 153, MNU_header_text_ms = 154, MNU_game_option_category = 155, MNU_game_option_item = 156, MNU_scenario = 157, MNU_scenario_ms = 158, MNU_style_weapon = 159, MNU_style_armor = 160, MNU_bonus_exp = 161, MNU_bonus_exp_ms = 162, MNU_event_theater_txt = 163, MNU_event_theater_ms = 164, MNU_nopon = 165, MNU_nopon_ms = 166, MNU_ttrl = 167, MNU_ttrl_ms = 168, MNU_ttrl_page = 169, MNU_EventTheater_scn = 170, MNU_EventTheater_kzn = 171, MNU_EventTheater_col6 = 172, MNU_EventTheater_equip = 173, MNU_event_name_ms = 174, MNU_quest_task_message = 175, MNU_quest_task_message_ms = 176, MNU_noponger_table = 177, FLD_lndchglist = 178, MNU_personally_name_ms = 179, opt_camlist = 180, KP_list = 181, landmarklist = 182, EVT_sev = 183, EVT_cs = 184, EVT_cs_off = 185, EVT_facepreset = 186, landmarklist_ms = 187, bgmlist = 188, FLD_effparam = 189, FLD_effpriset = 190, FLD_dmobjlist = 191, JNL_quest0101 = 192, JNL_quest0201 = 193, JNL_quest0301 = 194, JNL_quest0401 = 195, JNL_quest0402 = 196, JNL_quest0501 = 197, JNL_quest0601 = 198, JNL_quest0701 = 199, JNL_quest0801 = 200, JNL_quest0901 = 201, JNL_quest1001 = 202, JNL_quest1101 = 203, JNL_quest1201 = 204, JNL_quest1202 = 205, JNL_quest1301 = 206, JNL_quest1401 = 207, JNL_quest1501 = 208, JNL_quest1601 = 209, JNL_quest1701 = 210, JNL_quest1801 = 211, JNL_quest1901 = 212, JNL_quest2001 = 213, JNL_quest2101 = 214, JNL_quest2201 = 215, JNL_quest2301 = 216, JNL_quest2401 = 217, JNL_quest2501 = 218, JNL_quest2601 = 219, JNL_quest0101_ms = 220, JNL_quest0201_ms = 221, JNL_quest0301_ms = 222, JNL_quest0401_ms = 223, JNL_quest0402_ms = 224, JNL_quest0501_ms = 225, JNL_quest0601_ms = 226, JNL_quest0701_ms = 227, JNL_quest0801_ms = 228, JNL_quest0901_ms = 229, JNL_quest1001_ms = 230, JNL_quest1101_ms = 231, JNL_quest1201_ms = 232, JNL_quest1202_ms = 233, JNL_quest1301_ms = 234, JNL_quest1401_ms = 235, JNL_quest1501_ms = 236, JNL_quest1601_ms = 237, JNL_quest1701_ms = 238, JNL_quest1801_ms = 239, JNL_quest1901_ms = 240, JNL_quest2001_ms = 241, JNL_quest2101_ms = 242, JNL_quest2201_ms = 243, JNL_quest2301_ms = 244, JNL_quest2401_ms = 245, JNL_quest2501_ms = 246, JNL_quest2601_ms = 247, JNL_playaward = 248, JNL_playaward_ms = 249, JNL_kizunalist = 250, JNL_kizunalist_ms = 251, JNL_relatelist = 252, JNL_relatelist_ms = 253, JNL_PCrelatelist = 254, JNL_relatepoint = 255, JNL_trustup = 256, BTL_enelist0101 = 257, BTL_enelist0201 = 258, BTL_enelist0301 = 259, BTL_enelist0401 = 260, BTL_enelist0402 = 261, BTL_enelist0501 = 262, BTL_enelist0601 = 263, BTL_enelist0701 = 264, BTL_enelist0801 = 265, BTL_enelist0901 = 266, BTL_enelist1001 = 267, BTL_enelist1101 = 268, BTL_enelist1201 = 269, BTL_enelist1202 = 270, BTL_enelist1301 = 271, BTL_enelist1401 = 272, BTL_enelist1501 = 273, BTL_enelist1601 = 274, BTL_enelist1701 = 275, BTL_enelist1801 = 276, BTL_enelist1901 = 277, BTL_enelist2001 = 278, BTL_enelist2101 = 279, BTL_enelist2201 = 280, BTL_enelist2301 = 281, BTL_enelist2401 = 282, BTL_enelist2501 = 283, BTL_enelist2601 = 284, mapobjlistSys = 285, mapobjlist0101 = 286, mapobjlist0201 = 287, mapobjlist0301 = 288, mapobjlist0401 = 289, mapobjlist0402 = 290, mapobjlist0501 = 291, mapobjlist0601 = 292, mapobjlist0701 = 293, mapobjlist0801 = 294, mapobjlist0901 = 295, mapobjlist1001 = 296, mapobjlist1101 = 297, mapobjlist1201 = 298, mapobjlist1202 = 299, mapobjlist1301 = 300, mapobjlist1401 = 301, mapobjlist1501 = 302, mapobjlist1601 = 303, mapobjlist1701 = 304, mapobjlist1801 = 305, mapobjlist1901 = 306, mapobjlist2001 = 307, mapobjlist2101 = 308, mapobjlist2201 = 309, mapobjlist2301 = 310, mapobjlist2401 = 311, mapobjlist2501 = 312, mapobjlist2601 = 313, mapobjfileSys = 314, mapobjfile0101 = 315, mapobjfile0201 = 316, mapobjfile0301 = 317, mapobjfile0401 = 318, mapobjfile0402 = 319, mapobjfile0501 = 320, mapobjfile0601 = 321, mapobjfile0701 = 322, mapobjfile0801 = 323, mapobjfile0901 = 324, mapobjfile1001 = 325, mapobjfile1101 = 326, mapobjfile1201 = 327, mapobjfile1202 = 328, mapobjfile1301 = 329, mapobjfile1401 = 330, mapobjfile1501 = 331, mapobjfile1601 = 332, mapobjfile1701 = 333, mapobjfile1801 = 334, mapobjfile1901 = 335, mapobjfile2001 = 336, mapobjfile2101 = 337, mapobjfile2201 = 338, mapobjfile2301 = 339, mapobjfile2401 = 340, mapobjfile2501 = 341, mapobjfile2601 = 342, mapobjfile = 343, mapobjlist = 344, maplodlist = 345, mapselist = 346, mapefflist = 347, mapminelist = 348, mapgemminelist = 349, autotalklist = 350, autotalklist_ms = 351, extalklist = 352, extalklist_ms = 353, gimmicklist = 354, gimmickCamlist = 355, gimmickElvlist = 356, gimmickWarplist = 357, gimmickItemlist = 358, gimmickJumplist = 359, gimmickSaveOfflist = 360, gimmickEneArts = 361, gimmickMsglist = 362, gimmickMsglist_ms = 363, Litemlist = 364, mapPoplist = 365, mapEnelist = 366, mapRoutelist = 367, FLD_valpoplist = 368, FieldLock = 369, markerlist = 370, JNL_quest = 371, qst_poplist = 372, drop_nmllist = 373, drop_rarlist = 374, drop_sprlist = 375, CL6_rwdlist = 376, CL6_hintlist = 377, CL6_hintlist_ms = 378, CL6_materiallist = 379, CL6_uplist = 380, CL6_invitelist = 381, MNU_qt0101 = 382, MNU_qt0201 = 383, MNU_qt0301 = 384, MNU_qt0401 = 385, MNU_qt0402 = 386, MNU_qt0501 = 387, MNU_qt0601 = 388, MNU_qt0701 = 389, MNU_qt0901 = 390, MNU_qt1001 = 391, MNU_qt1101 = 392, MNU_qt1201 = 393, MNU_qt1202 = 394, MNU_qt1301 = 395, MNU_qt1401 = 396, MNU_qt1501 = 397, MNU_qt1601 = 398, MNU_qt1701 = 399, MNU_qt1901 = 400, MNU_qt2001 = 401, MNU_qt2101 = 402, MNU_qt2201 = 403, MNU_qt2501 = 404, MNU_qt2601 = 405, MNU_qt0101_ms = 406, MNU_qt0201_ms = 407, MNU_qt0301_ms = 408, MNU_qt0401_ms = 409, MNU_qt0402_ms = 410, MNU_qt0501_ms = 411, MNU_qt0601_ms = 412, MNU_qt0701_ms = 413, MNU_qt0901_ms = 414, MNU_qt1001_ms = 415, MNU_qt1101_ms = 416, MNU_qt1201_ms = 417, MNU_qt1202_ms = 418, MNU_qt1301_ms = 419, MNU_qt1401_ms = 420, MNU_qt1501_ms = 421, MNU_qt1601_ms = 422, MNU_qt1701_ms = 423, MNU_qt1901_ms = 424, MNU_qt2001_ms = 425, MNU_qt2101_ms = 426, MNU_qt2201_ms = 427, MNU_qt2501_ms = 428, MNU_qt2601_ms = 429, code_mes = 430, code_mes_ms = 431, CSEVT_caption = 432, VoBattleEndSPBook = 433, VoBattleEndSPScenario = 434, VoEnemy = 435, VoTypeAffinityChart = 436, VoType = 437, trial_root = 438, trial_root_ms = 439, trial_main = 440, trial_main_ms = 441, trial_reward = 442, trial_result = 443, trial_rank = 444, trial_portal = 445, trial_shop = 446, limited_party = 447, limited_charset = 448, limited_artsset = 449, limited_skillset = 450, limited_equip = 451, qst_enelist = 452, qst_enelistQst = 453, qst_itemlist = 454, qst_itemlistQst = 455, qst_itemlistUse = 456, qst_npclist = 457, qst_npclistQst = 458, qst_gmklist = 459, qst_gmklistQst = 460, qst_pntlist = 461, qst_pntlistQst = 462, qst_poplist0101 = 463, qst_poplist0201 = 464, qst_poplist0301 = 465, qst_poplist0401 = 466, qst_poplist0402 = 467, qst_poplist0501 = 468, qst_poplist0601 = 469, qst_poplist0701 = 470, qst_poplist0801 = 471, qst_poplist0901 = 472, qst_poplist1001 = 473, qst_poplist1101 = 474, qst_poplist1201 = 475, qst_poplist1202 = 476, qst_poplist1301 = 477, qst_poplist1401 = 478, qst_poplist1501 = 479, qst_poplist1601 = 480, qst_poplist1701 = 481, qst_poplist1901 = 482, qst_poplist2001 = 483, qst_poplist2101 = 484, qst_poplist2201 = 485, qst_poplist2301 = 486, qst_poplist2401 = 487, qst_poplist2501 = 488, qst_poplist2601 = 489, qst_poplist5101 = 490, qst_poplist5201 = 491, qst_poplist5301 = 492, qst_poplist5401 = 493, qst_poplist5501 = 494, qst_poplist5601 = 495, qst_poplist5701 = 496, qst_poplist5801 = 497, qst_poplist5901 = 498, qst_poplist6001 = 499, qst_poplistQst = 500, qst_questList = 501, qst_questLink = 502, addscmarker = 503, addnaviroot = 504,</p>"},{"location":"xc1de/script/oc/Attr/","title":"Attribute OC/Object","text":"<p>Represents a script attribute/trigger.</p>"},{"location":"xc1de/script/oc/Attr/#constructor","title":"Constructor","text":"<p><code>oc attr(string unusedName, int type)</code></p> <p>Gets a new attribute.</p>"},{"location":"xc1de/script/oc/Attr/#attributes","title":"Attributes","text":""},{"location":"xc1de/script/oc/Attr/#x","title":"x","text":"<p><code>float attr.x</code></p> <p>X position.</p>"},{"location":"xc1de/script/oc/Attr/#y","title":"y","text":"<p><code>float attr.y</code></p> <p>Y position.</p>"},{"location":"xc1de/script/oc/Attr/#y_1","title":"y","text":"<p><code>float attr.z</code></p> <p>Z position.</p>"},{"location":"xc1de/script/oc/Attr/#bdid","title":"bdid","text":"<p><code>string attr.bdid</code></p> <p>Unknown. Getter only.</p>"},{"location":"xc1de/script/oc/Attr/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/Attr/#isvalid","title":"isValid","text":"<p><code>void attr-&gt;isValid()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Attr/#setground","title":"setGround","text":"<p><code>void attr-&gt;setGround()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Attr/#dispon","title":"dispOn","text":"<p><code>void attr-&gt;dispOn(int visible = true)</code></p> <p>Set whether the attr is visible.</p>"},{"location":"xc1de/script/oc/Attr/#dispoff","title":"dispOff","text":"<p><code>void attr-&gt;dispOff(int invisible = true)</code></p> <p>Set whether the attr is invisible.</p>"},{"location":"xc1de/script/oc/Attr/#setsize","title":"setSize","text":"<p><code>void effect-&gt;setSize(float radius, float height)</code></p> <p>Sets the size as a cylinder shape.</p>"},{"location":"xc1de/script/oc/Attr/#setbox","title":"setBox","text":"<p><code>void attr-&gt;setBox(float fixX, float fixY, float fixZ, float rotY)</code></p> <p>Sets the size as a box shape.</p>"},{"location":"xc1de/script/oc/Attr/#inside","title":"inside","text":"<p><code>bool attr-&gt;inside(oc unit = nil)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Attr/#insidenormal","title":"insideNormal","text":"<p><code>bool attr-&gt;insideNormal(oc unit)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Bdat/","title":"Bdat OC/Object","text":""},{"location":"xc1de/script/oc/Bdat/#constructor","title":"Constructor","text":"<p><code>oc bdat(string name)</code></p> <p>Creates a new bdat object based on the specified file name.</p>"},{"location":"xc1de/script/oc/Bdat/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/Bdat/#getval","title":"getVal","text":"<p><code>object bdat-&gt;getVal(string columnName, int id)</code></p> <p>Gets a bdat value. Return type depends on column type.</p>"},{"location":"xc1de/script/oc/Bdat/#getarrayval","title":"getArrayVal","text":"<p><code>object bdat-&gt;getArrayVal(string columnName, int id, int arrayIndex)</code></p> <p>Gets a bdat value from array. Return type depends on column type.</p>"},{"location":"xc1de/script/oc/Bdat/#getarraycount","title":"getArrayCount","text":"<p><code>int bdat-&gt;getArrayCount(string columnName)</code></p> <p>Gets the array size for the specified column.</p>"},{"location":"xc1de/script/oc/Bdat/#getvartype","title":"getVarType","text":"<p><code>int bdat-&gt;getVarType(string columnName)</code></p> <p>Gets the type of the specified column.</p>"},{"location":"xc1de/script/oc/Bdat/#getidcount","title":"getIdCount","text":"<p><code>int bdat-&gt;getIdCount()</code></p> <p>Gets the number of ids/rows in the current bdat file.</p>"},{"location":"xc1de/script/oc/Bdat/#getidtop","title":"getIdTop","text":"<p><code>int bdat-&gt;getIdTop()</code></p> <p>Gets the first id in the current bdat file.</p>"},{"location":"xc1de/script/oc/Bdat/#getflagvalue","title":"getFlagValue","text":"<p><code>int bdat-&gt;getIdTop(string column, int id, string flagName)</code></p> <p>Gets a flag value.</p>"},{"location":"xc1de/script/oc/Builtin/","title":"Builtin OC/Object","text":"<p>Applies to ALL OCs.</p>"},{"location":"xc1de/script/oc/Builtin/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/Builtin/#isexistproperty","title":"isExistProperty","text":"<p><code>bool obj-&gt;isExistProperty(string propertyName)</code></p> <p>Returns whether the specified property for the object exists.</p>"},{"location":"xc1de/script/oc/Builtin/#isexistselector","title":"isExistSelector","text":"<p><code>bool obj-&gt;isExistSelector(string propertyName)</code></p> <p>Returns whether the specified selector for the object exists.</p>"},{"location":"xc1de/script/oc/Builtin/#getocname","title":"getOCName","text":"<p><code>bool obj-&gt;getOCName()</code></p> <p>Gets the name of the OC.</p>"},{"location":"xc1de/script/oc/Cfp/","title":"Cfp OC/Object","text":""},{"location":"xc1de/script/oc/Cfp/#constructor","title":"Constructor","text":"<p><code>oc cfp()</code></p> <p>Creates a new cfp object.</p>"},{"location":"xc1de/script/oc/Cfp/#attributes","title":"Attributes","text":""},{"location":"xc1de/script/oc/Cfp/#hour","title":"hour","text":"<p><code>int cfp.hour</code></p> <p>Current hour of the in-game day.</p>"},{"location":"xc1de/script/oc/Cfp/#minute","title":"minute","text":"<p><code>int cfp.min</code></p> <p>Current minute of the in-game day.</p>"},{"location":"xc1de/script/oc/Cfp/#timeidx","title":"timeIdx","text":"<p><code>int cfp.timeIdx</code></p> <p>Time zone index. Getter only.</p>"},{"location":"xc1de/script/oc/Cfp/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/Cfp/#gettimeidxmin","title":"getTimeIdxMin","text":"<p><code>int cfp-&gt;getTimeIdxMin(int timeIdx)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Cfp/#gettimeidxmax","title":"getTimeIdxMax","text":"<p><code>void cfp-&gt;getTimeIdxMax(int timeIdx)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Effect/","title":"Effect OC/Object","text":"<p>Represents a world/field effect.</p>"},{"location":"xc1de/script/oc/Effect/#constructor","title":"Constructor","text":"<p><code>oc effect(string effectName, int effectId, int unused = nil)</code></p> <p>Gets a new effect.</p> <p>Valid Names:</p> <ul> <li><code>map</code> or <code>em</code></li> <li><code>common</code> or <code>er</code></li> </ul>"},{"location":"xc1de/script/oc/Effect/#attributes","title":"Attributes","text":""},{"location":"xc1de/script/oc/Effect/#x","title":"x","text":"<p><code>float effect.x</code></p> <p>X position.</p>"},{"location":"xc1de/script/oc/Effect/#y","title":"y","text":"<p><code>float effect.y</code></p> <p>Y position.</p>"},{"location":"xc1de/script/oc/Effect/#y_1","title":"y","text":"<p><code>float effect.z</code></p> <p>Z position.</p>"},{"location":"xc1de/script/oc/Effect/#bdid","title":"bdid","text":"<p><code>string effect.bdid</code></p> <p>Unknown. Getter only.</p>"},{"location":"xc1de/script/oc/Effect/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/Effect/#isvalid","title":"isValid","text":"<p><code>void effect-&gt;isValid()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Effect/#setground","title":"setGround","text":"<p><code>void effect-&gt;setGround()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Effect/#dispon","title":"dispOn","text":"<p><code>void effect-&gt;dispOn(int visible = true)</code></p> <p>Set whether the effect is visible.</p>"},{"location":"xc1de/script/oc/Effect/#dispoff","title":"dispOff","text":"<p><code>void effect-&gt;dispOff(int invisible = true)</code></p> <p>Set whether the effect is invisible.</p>"},{"location":"xc1de/script/oc/Effect/#signal","title":"signal","text":"<p><code>void effect-&gt;signal(int mode)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Effect/#setcas","title":"setCas","text":"<p><code>void effect-&gt;setCas(oc unit)</code></p> <p>Sets caster.</p>"},{"location":"xc1de/script/oc/Effect/#settgt","title":"setTgt","text":"<p><code>void effect-&gt;setTgt(oc unit)</code></p> <p>Sets target.</p>"},{"location":"xc1de/script/oc/Effect/#setweaponcas","title":"setWeaponCas","text":"<p><code>void effect-&gt;setWeaponCas(oc unit)</code></p> <p>Sets weapon caster.</p>"},{"location":"xc1de/script/oc/MsgNpc/","title":"Msg Npc OC/Object","text":"<p>Debug object.</p>"},{"location":"xc1de/script/oc/MsgNpc/#constructor","title":"Constructor","text":"<p><code>oc msgNpc()</code></p>"},{"location":"xc1de/script/oc/MsgNpc/#attributes","title":"Attributes","text":""},{"location":"xc1de/script/oc/MsgNpc/#atr","title":"atr","text":"<p><code>msgNpc.atr</code></p>"},{"location":"xc1de/script/oc/MsgNpc/#get","title":"get","text":"<p><code>`msgNpc.no</code></p>"},{"location":"xc1de/script/oc/MsgNpc/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/MsgNpc/#send","title":"send","text":"<p><code>msgNpc-&gt;send()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/MsgNpc/#receive","title":"receive","text":"<p><code>msgNpc.receive()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/MsgYuka/","title":"Msg Yuka OC/Object","text":"<p>Debug object.</p>"},{"location":"xc1de/script/oc/MsgYuka/#constructor","title":"Constructor","text":"<p><code>oc msgYuka()</code></p>"},{"location":"xc1de/script/oc/MsgYuka/#attributes","title":"Attributes","text":""},{"location":"xc1de/script/oc/MsgYuka/#atr","title":"atr","text":"<p><code>msgYuka.atr</code></p>"},{"location":"xc1de/script/oc/MsgYuka/#get","title":"get","text":"<p><code>`msgYuka.no</code></p>"},{"location":"xc1de/script/oc/MsgYuka/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/MsgYuka/#send","title":"send","text":"<p><code>msgYuka-&gt;send()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/MsgYuka/#receive","title":"receive","text":"<p><code>msgYuka.receive()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/MsgYuka/#attributes_1","title":"Attributes","text":""},{"location":"xc1de/script/oc/MsgYuka/#atr_1","title":"atr","text":"<p><code>msgYuka.atr</code></p>"},{"location":"xc1de/script/oc/MsgYuka/#get_1","title":"get","text":"<p><code>`msgYuka.no</code></p>"},{"location":"xc1de/script/oc/Obj/","title":"Obj OC/Object","text":"<p>Represents a model object.</p>"},{"location":"xc1de/script/oc/Obj/#constructor","title":"Constructor","text":"<p><code>oc obj(int model, int unusedMotion = nil, int unusedUnk = nil)</code></p> <p>Gets a new object.</p>"},{"location":"xc1de/script/oc/Obj/#attributes","title":"Attributes","text":""},{"location":"xc1de/script/oc/Obj/#x","title":"x","text":"<p><code>float obj.x</code></p> <p>X position.</p>"},{"location":"xc1de/script/oc/Obj/#y","title":"y","text":"<p><code>float obj.y</code></p> <p>Y position.</p>"},{"location":"xc1de/script/oc/Obj/#y_1","title":"y","text":"<p><code>float obj.z</code></p> <p>Z position.</p>"},{"location":"xc1de/script/oc/Obj/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/Obj/#isvalid","title":"isValid","text":"<p><code>void obj-&gt;isValid()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Obj/#setground","title":"setGround","text":"<p><code>void obj-&gt;setGround()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Obj/#dispon","title":"dispOn","text":"<p><code>void obj-&gt;dispOn(int visible = true)</code></p> <p>Set whether the obj is visible.</p>"},{"location":"xc1de/script/oc/Obj/#dispoff","title":"dispOff","text":"<p><code>void obj-&gt;dispOff(int invisible = true)</code></p> <p>Set whether the obj is invisible.</p>"},{"location":"xc1de/script/oc/Obj/#movemode","title":"moveMode","text":"<p><code>void obj-&gt;moveMode(int mode)</code></p> <p>Sets the move mode.</p>"},{"location":"xc1de/script/oc/Obj/#issetdir","title":"isSetDir","text":"<p><code>int obj-&gt;isSetDir()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Obj/#setact","title":"setAct","text":"<p><code>void obj-&gt;setAct(int id, float speed = nil)</code></p> <p>Sets the current action.</p>"},{"location":"xc1de/script/oc/Obj/#setrot","title":"setRot","text":"<p><code>void obj-&gt;setRot(float x, float y, float z)</code></p> <p>Sets obj rotation.</p>"},{"location":"xc1de/script/oc/Obj/#gravity","title":"gravity","text":"<p><code>bool obj-&gt;gravity()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Point/","title":"Point OC/Object","text":"<p>Represents a world/field point.</p>"},{"location":"xc1de/script/oc/Point/#_1","title":"Point","text":"<p>Constructor</p> <p><code>oc point(string unusedName, int pointId, int unused = nil)</code></p> <p>Gets a new point from FLD_pointlist.</p>"},{"location":"xc1de/script/oc/Point/#attributes","title":"Attributes","text":""},{"location":"xc1de/script/oc/Point/#x","title":"x","text":"<p><code>float point.x</code></p> <p>X position.</p>"},{"location":"xc1de/script/oc/Point/#y","title":"y","text":"<p><code>float point.y</code></p> <p>Y position.</p>"},{"location":"xc1de/script/oc/Point/#y_1","title":"y","text":"<p><code>float point.z</code></p> <p>Z position.</p>"},{"location":"xc1de/script/oc/Point/#bdid","title":"bdid","text":"<p><code>string point.bdid</code></p> <p>Unknown. Getter only.</p>"},{"location":"xc1de/script/oc/Point/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/Point/#isvalid","title":"isValid","text":"<p><code>void point-&gt;isValid()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Point/#setground","title":"setGround","text":"<p><code>void point-&gt;setGround()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Point/#dispon","title":"dispOn","text":"<p><code>void point-&gt;dispOn(int visible = true)</code></p> <p>Set whether the point is visible.</p>"},{"location":"xc1de/script/oc/Point/#dispoff","title":"dispOff","text":"<p><code>void obj-&gt;dispOff(int invisible = true)</code></p> <p>Set whether the point is invisible.</p>"},{"location":"xc1de/script/oc/Point/#movemode","title":"moveMode","text":"<p><code>void point-&gt;moveMode(int mode)</code></p> <p>Sets the move mode.</p>"},{"location":"xc1de/script/oc/Point/#issetdir","title":"isSetDir","text":"<p><code>int point-&gt;isSetDir()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Point/#wintalk","title":"winTalk","text":"<p><code>void point-&gt;winTalk(int id)</code></p> <p>Opens a talking balloon with the specified message id.</p>"},{"location":"xc1de/script/oc/Point/#onevent","title":"onEvent","text":"<p><code>bool point-&gt;onEvent()</code></p> <p>Returns whether the point is currently on an event.</p>"},{"location":"xc1de/script/oc/Point/#wintalkselect","title":"winTalkSelect","text":"<p><code>int point-&gt;winTalkSelect()</code></p> <p>Gets the selected auto talk balloon option index.</p>"},{"location":"xc1de/script/oc/Point/#wintalktosimpleeve","title":"winTalkToSimpleEve","text":"<p><code>void point-&gt;winTalkToSimpleEve(int id)</code></p> <p>Unknown. Might summon a script.</p>"},{"location":"xc1de/script/oc/Thread/","title":"Function OC/Object","text":""},{"location":"xc1de/script/oc/Thread/#constructor","title":"Constructor","text":"<p><code>oc thread(function entrypoint, string name = \"\")</code></p> <p>Creates a new thread.</p>"},{"location":"xc1de/script/oc/Thread/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/Thread/#start","title":"start","text":"<p><code>void thread-&gt;start()</code></p> <p>Starts the thread.</p>"},{"location":"xc1de/script/oc/Thread/#end","title":"end","text":"<p><code>void thread-&gt;end()</code></p> <p>Ends the thread.</p>"},{"location":"xc1de/script/oc/Thread/#isalive","title":"isAlive","text":"<p><code>bool thread-&gt;isAlive()</code></p> <p>Returns whether the thread is alive/active.</p>"},{"location":"xc1de/script/oc/Thread/#join","title":"join","text":"<p><code>void thread-&gt;join()</code></p> <p>Waits until the thread terminates.</p>"},{"location":"xc1de/script/oc/Thread/#sleep","title":"sleep","text":"<p><code>bool thread-&gt;sleep()</code></p> <p>Puts the thread to sleep.</p>"},{"location":"xc1de/script/oc/Thread/#wakeup","title":"wakeup","text":"<p><code>bool thread-&gt;wakeup()</code></p> <p>Wakes up the thread.</p>"},{"location":"xc1de/script/oc/Unit/","title":"Unit OC/Object","text":"<p>Represents a battle unit object.</p>"},{"location":"xc1de/script/oc/Unit/#constructor","title":"Constructor","text":"<p><code>oc unit(string bdat, int id = 0, int unk = 0)</code></p> <p>Gets a bdat unit.</p> <p>Valid names:</p> <ul> <li><code>FLD_npclist</code> or <code>npc</code></li> <li><code>BTL_enelist</code> or <code>ene</code></li> <li><code>BTL_pclist</code> or <code>pc</code></li> <li><code>player</code></li> </ul>"},{"location":"xc1de/script/oc/Unit/#attributes","title":"Attributes","text":""},{"location":"xc1de/script/oc/Unit/#x","title":"x","text":"<p><code>float unit.x</code></p> <p>X position.</p>"},{"location":"xc1de/script/oc/Unit/#y","title":"y","text":"<p><code>float unit.y</code></p> <p>Y position.</p>"},{"location":"xc1de/script/oc/Unit/#y_1","title":"y","text":"<p><code>float unit.z</code></p> <p>Z position.</p>"},{"location":"xc1de/script/oc/Unit/#dir","title":"dir","text":"<p><code>float unit.dir</code></p> <p>Direction.</p>"},{"location":"xc1de/script/oc/Unit/#name","title":"name","text":"<p><code>string unit.name</code></p> <p>Unit name.</p>"},{"location":"xc1de/script/oc/Unit/#bdid","title":"bdid","text":"<p><code>string unit.bdid</code></p> <p>Unknown. Getter only.</p>"},{"location":"xc1de/script/oc/Unit/#id","title":"ID","text":"<p><code>string unit.ID</code></p> <p>ID. Getter only.</p>"},{"location":"xc1de/script/oc/Unit/#hp","title":"HP","text":"<p><code>string unit.HP</code></p> <p>Current HP. Getter only.</p>"},{"location":"xc1de/script/oc/Unit/#methods","title":"Methods","text":""},{"location":"xc1de/script/oc/Unit/#isvalid","title":"isValid","text":"<p><code>void unit-&gt;isValid()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#setground","title":"setGround","text":"<p><code>void unit-&gt;setGround()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Unit/#dispon","title":"dispOn","text":"<p><code>void unit-&gt;dispOn(int visible = true)</code></p> <p>Set whether the unit is visible.</p>"},{"location":"xc1de/script/oc/Unit/#dispoff","title":"dispOff","text":"<p><code>void unit-&gt;dispOff(int invisible = true)</code></p> <p>Set whether the unit is invisible.</p>"},{"location":"xc1de/script/oc/Unit/#forcedispoff","title":"forceDispOff","text":"<p><code>void unit-&gt;forceDispOff(int invisible = true)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Unit/#dispweapon","title":"dispWeapon","text":"<p><code>void unit-&gt;dispWeapon(bool visible)</code></p> <p>Sets whether the unit's weapon is visible.</p>"},{"location":"xc1de/script/oc/Unit/#movemode","title":"moveMode","text":"<p><code>void unit-&gt;moveMode(int mode)</code></p> <p>Sets the move mode.</p>"},{"location":"xc1de/script/oc/Unit/#getmovemode","title":"getMoveMode","text":"<p><code>int unit-&gt;getMoveMode()</code></p> <p>Gets the move mode.</p>"},{"location":"xc1de/script/oc/Unit/#issetdir","title":"isSetDir","text":"<p><code>int unit-&gt;isSetDir()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#setmodechange","title":"setModeChange","text":"<p><code>void unit-&gt;setModeChange(bool unk)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Unit/#setmodechange_1","title":"setModeChange","text":"<p><code>void unit-&gt;setModeChange(float x, float y, float z, int param, int moveMode)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Unit/#walkr","title":"walkR","text":"<p><code>void unit-&gt;walkR(float unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#walkidletime","title":"walkIdleTime","text":"<p><code>void unit-&gt;walkIdleTime(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#initwalk","title":"initWalk","text":"<p><code>void unit-&gt;initWalk(float x, float y, float z)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#movepoint","title":"movePoint","text":"<p><code>void unit-&gt;movePoint(int start, int end, array param, float angle = 360)</code></p> <p>Moves to a point.</p>"},{"location":"xc1de/script/oc/Unit/#ismoveend","title":"isMoveEnd","text":"<p><code>bool unit-&gt;isMoveEnd()</code></p> <p>Returns whether the unit is done moving.</p>"},{"location":"xc1de/script/oc/Unit/#waitmoveend","title":"waitMoveEnd","text":"<p><code>void unit-&gt;waitMoveEnd()</code></p> <p>Waits until the unit is done moving.</p>"},{"location":"xc1de/script/oc/Unit/#moveto","title":"moveTo","text":"<p><code>void unit-&gt;moveTo(int unk, float x, float y, float z, float angle = 360, int a6 = 0, bool a7 = false, bool a8 = false)</code></p> <p>Moves to a specific point.</p>"},{"location":"xc1de/script/oc/Unit/#movetorun","title":"moveToRun","text":"<p><code>void unit-&gt;moveToRun(int unk, float x, float y, float z, float angle = 360, int a6 = 0, bool a7 = false, bool a8 = false)</code></p> <p>Runs to a specific point.</p>"},{"location":"xc1de/script/oc/Unit/#movetowalk","title":"moveToWalk","text":"<p><code>void unit-&gt;moveToWalk(int unk, float x, float y, float z, float angle = 360, int a6 = 0, bool a7 = false, bool a8 = false)</code></p> <p>Walks to a specific point.</p>"},{"location":"xc1de/script/oc/Unit/#movetospd","title":"moveToSpd","text":"<p><code>void unit-&gt;moveToSpd(float speed)</code></p> <p>Sets the movement speed.</p>"},{"location":"xc1de/script/oc/Unit/#movetoturnspd","title":"moveToTurnSpd","text":"<p><code>void unit-&gt;moveToTurnSpd(float speed)</code></p> <p>Sets the turning speed.</p>"},{"location":"xc1de/script/oc/Unit/#loopmotion","title":"loopMotion","text":"<p><code>void unit-&gt;loopMotion(int type)</code></p> <p>Sets the looping motion.</p>"},{"location":"xc1de/script/oc/Unit/#corpmotion","title":"corpMotion","text":"<p><code>void unit-&gt;corpMotion(int unk, int unk2, int unk3)</code></p> <p>Unknown. Values appears to be the same as loop motion (types).</p>"},{"location":"xc1de/script/oc/Unit/#istalk","title":"isTalk","text":"<p><code>bool unit-&gt;isTalk()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#wintalk","title":"winTalk","text":"<p><code>void unit-&gt;winTalk(int id)</code></p> <p>Opens a talking balloon with the specified message id.</p>"},{"location":"xc1de/script/oc/Unit/#wintalk2","title":"winTalk2","text":"<p><code>void unit-&gt;winTalk2(string script, int messageItem)</code></p> <p>Opens a talking balloon with the specified message (V2).</p>"},{"location":"xc1de/script/oc/Unit/#holdtalk","title":"holdTalk","text":"<p><code>void unit-&gt;holdTalk(bool hold)</code></p> <p>Whether to hold talk.</p>"},{"location":"xc1de/script/oc/Unit/#holdtalk_1","title":"holdTalk","text":"<p><code>void unit-&gt;holdTalk(bool hold = true)</code></p> <p>Whether to hold talk.</p>"},{"location":"xc1de/script/oc/Unit/#winautotalk","title":"winAutoTalk","text":"<p><code>bool unit-&gt;winAutoTalk()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#onevent","title":"onEvent","text":"<p><code>bool unit-&gt;onEvent()</code></p> <p>Returns whether the unit is currently on an event.</p>"},{"location":"xc1de/script/oc/Unit/#oneventautotalk","title":"onEventAutoTalk","text":"<p><code>bool unit-&gt;onEventAutoTalk()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#wintalkselect","title":"winTalkSelect","text":"<p><code>int unit-&gt;winTalkSelect()</code></p> <p>Gets the selected auto talk balloon option index.</p>"},{"location":"xc1de/script/oc/Unit/#wintalktosimpleeve","title":"winTalkToSimpleEve","text":"<p><code>void unit-&gt;winTalkToSimpleEve(int id)</code></p> <p>Unknown. Might summon a script.</p>"},{"location":"xc1de/script/oc/Unit/#setact","title":"setAct","text":"<p><code>void unit-&gt;setAct(int id, float speed = nil)</code></p> <p>Sets the current action.</p>"},{"location":"xc1de/script/oc/Unit/#setactdirect","title":"setActDirect","text":"<p><code>void unit-&gt;setActDirect(int id, float speed = nil)</code></p> <p>Sets the current direct action.</p>"},{"location":"xc1de/script/oc/Unit/#setactspd","title":"setActSpd","text":"<p><code>void unit-&gt;setActSpd(float speed = nil)</code></p> <p>Sets the current action speed.</p>"},{"location":"xc1de/script/oc/Unit/#lookat","title":"lookAt","text":"<p><code>void unit-&gt;lookAt(oc other, bool maybeUnused = false, bool enableSpine = true, bool bodyLink = false, bool BF1IKMode = true, bool BF1ZIKMode = false)</code></p> <p>Looks at another unit.</p>"},{"location":"xc1de/script/oc/Unit/#turn","title":"turn","text":"<p><code>void unit-&gt;turn(int angle, bool unk = false)</code></p> <p>Turns.</p>"},{"location":"xc1de/script/oc/Unit/#setpcnpcweapon","title":"setPcNpcWeapon","text":"<p><code>void unit-&gt;setPcNpcWeapon()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Unit/#setpcnpcweapon2","title":"setPcNpcWeapon2","text":"<p><code>void unit-&gt;setPcNpcWeapon2()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/oc/Unit/#gettargetoc","title":"getTargetOC","text":"<p><code>oc unit-&gt;getTargetOC()</code></p> <p>Gets the current targetted oc for this unit.</p>"},{"location":"xc1de/script/oc/Unit/#gettargetoc_1","title":"getTargetOC","text":"<p><code>int unit-&gt;getTargetID()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#ispc","title":"isPC","text":"<p><code>bool unit-&gt;isPC()</code></p> <p>Returns whether the current unit is a playable character.</p>"},{"location":"xc1de/script/oc/Unit/#isnpc","title":"isNPC","text":"<p><code>bool unit-&gt;isNPC()</code></p> <p>Returns whether the current unit is a NPC.</p>"},{"location":"xc1de/script/oc/Unit/#isene","title":"isENE","text":"<p><code>bool unit-&gt;isENE()</code></p> <p>Returns whether the current unit is an enemy.</p>"},{"location":"xc1de/script/oc/Unit/#ispt","title":"isPT","text":"<p><code>bool unit-&gt;isPT()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#invin","title":"invin","text":"<p><code>void unit-&gt;invin(bool invincible)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#setbtlstate","title":"setBtlState","text":"<p><code>void unit-&gt;setBtlState(int state, int time = 0, int val1 = 0, int val2 = 0, int interval = 0)</code></p> <p>Sets a battle state.</p>"},{"location":"xc1de/script/oc/Unit/#clearbtlstate","title":"clearBtlState","text":"<p><code>void unit-&gt;clearBtlState(int state)</code></p> <p>Clears a battle state.</p>"},{"location":"xc1de/script/oc/Unit/#setcoli","title":"setColi","text":"<p><code>void unit-&gt;setColi(bool collision)</code></p> <p>Sets collision status.</p>"},{"location":"xc1de/script/oc/Unit/#seteye","title":"setEye","text":"<p><code>void unit-&gt;setEye(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#setgravity","title":"setGravity","text":"<p><code>void unit-&gt;setGravity(bool gravity)</code></p> <p>Sets gravity mode.</p>"},{"location":"xc1de/script/oc/Unit/#setdyrstoff","title":"setDyRstOff","text":"<p><code>void unit-&gt;setDyRstOff(bool unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/oc/Unit/#disphighlight","title":"dispHighlight","text":"<p><code>void unit-&gt;dispHighlight(bool dispHighlight)</code></p> <p>Whether to display highlight.</p>"},{"location":"xc1de/script/oc/Unit/#setrot","title":"setRot","text":"<p><code>void unit-&gt;setRot(float x, float y, float z)</code></p> <p>Sets unit rotation.</p>"},{"location":"xc1de/script/oc/Unit/#setkirieff","title":"setKiriEff","text":"<p><code>void unit-&gt;setKiriEff(int unk = 0)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Btl/","title":"Btl (Battle) Plugin","text":"<p>Battle Plugin API.</p>"},{"location":"xc1de/script/plugins/Btl/#btlstartobserve","title":"btl@startObserve","text":"<p><code>void btl@startObserve()</code></p> <p>Unknown. Calls <code>game::ScriptBtl::setMonitorEnemyKill(true)</code> internally.</p>"},{"location":"xc1de/script/plugins/Btl/#btlendobserve","title":"btl@endObserve","text":"<p><code>void btl@endObserve()</code></p> <p>Unknown. Calls <code>game::ScriptBtl::setMonitorEnemyKill(false)</code> internally.</p>"},{"location":"xc1de/script/plugins/Btl/#btldefeatingcount","title":"btl@defeatingCount","text":"<p><code>int btl@defeatingCount(int enemyId)</code></p> <p>Returns the number of defeated specified enemy.</p>"},{"location":"xc1de/script/plugins/Btl/#btlisend","title":"btl@isEnd","text":"<p><code>bool btl@isEnd()</code></p> <p>Returns whether the battle has ended.</p>"},{"location":"xc1de/script/plugins/Btl/#btlend","title":"btl@end","text":"<p><code>bool btl@end()</code></p> <p>Does nothing. Empty function.</p>"},{"location":"xc1de/script/plugins/Btl/#btlattack","title":"btl@attack","text":"<p><code>bool btl@attack(bool flag = true)</code></p> <p>Calls <code>game::ScriptBtl::attack</code> which does nothing. Empty function.</p>"},{"location":"xc1de/script/plugins/Btl/#btlattackene","title":"btl@attackEne","text":"<p><code>bool btl@attackEne(bool flag = true)</code></p> <p>Does nothing. Empty function.</p>"},{"location":"xc1de/script/plugins/Btl/#btlselecttgt","title":"btl@selectTgt","text":"<p><code>bool btl@selectTgt(oc targetObject = nil)</code></p> <p>Selects battle target. Calls <code>game::ScriptBtl::startBattle</code> (with a specified target if provided - might not be used).</p>"},{"location":"xc1de/script/plugins/Btl/#btlvision","title":"btl@vision","text":"<p><code>void btl@vision(bool unk = false)</code></p> <p>Does nothing. Empty function.</p>"},{"location":"xc1de/script/plugins/Btl/#btlvoiceevent","title":"btl@voiceEvent","text":"<p><code>void btl@voiceEvent(bool unk = false)</code></p> <p>Does nothing. Empty function.</p>"},{"location":"xc1de/script/plugins/Btl/#btlisvoiceevent","title":"btl@isVoiceEvent","text":"<p><code>bool btl@isVoiceEvent()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Btl/#btlunlockmonadoarts","title":"btl@unlockMonadoArts","text":"<p><code>void btl@unlockMonadoArts()</code></p> <p>Unlocks monado arts &amp; allows upgrading to advanced levels. Calls <code>game::ScriptCfs::unlockMonadoArts</code>.</p>"},{"location":"xc1de/script/plugins/Btl/#btlsettensionlv","title":"btl@setTensionLv","text":"<p><code>void btl@setTensionLv(int level = 0)</code></p> <p>Sets the battle tension level. Calls <code>game::ScriptBtl::setTensionLv</code>.</p>"},{"location":"xc1de/script/plugins/Btl/#btlsettensionlvoa","title":"btl@setTensionLvOA","text":"<p><code>void btl@setTensionLvOA(int level = 0)</code></p> <p>Sets the battle tension level 'only arrive'. Calls <code>game::ScriptBtl::setTensionLvOnlyArrive</code>.</p>"},{"location":"xc1de/script/plugins/Btl/#btlgettensionlv","title":"btl@getTensionLv","text":"<p><code>int btl@getTensionLv()</code></p> <p>Gets the battle tension. Calls <code>game::ScriptBtl::getTensionLv</code>.</p>"},{"location":"xc1de/script/plugins/Btl/#btlsettp","title":"btl@setTP","text":"<p><code>void btl@setTP(int tp = 100, int pcIdMaybe = 0)</code></p> <p>Sets TP. Calls <code>game::ScriptBtl::setTP</code>.</p>"},{"location":"xc1de/script/plugins/Btl/#btlbreakvision","title":"btl@breakVision","text":"<p><code>void btl@breakVision(int unk = 0)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Btl/#btlsetptg","title":"btl@setPTG","text":"<p><code>void btl@setPTG(int ptyGauge)</code></p> <p>Sets Party Gauge. Calls <code>game::ScriptBtl::setPartyGauge</code>.</p>"},{"location":"xc1de/script/plugins/Btl/#btlgetptg","title":"btl@getPTG","text":"<p><code>int btl@getPTG()</code></p> <p>Gets Party Gauge. Calls <code>game::ScriptBtl::getPartyGauge</code>.</p>"},{"location":"xc1de/script/plugins/Btl/#btlispcextinction","title":"btl@isPcExtinction","text":"<p><code>bool btl@isPcExtinction()</code></p> <p>Unknown (return death status?). Calls <code>game::ScriptBtl::isPcExtinction</code>.</p>"},{"location":"xc1de/script/plugins/Btl/#btltest","title":"btl@test","text":"<p><code>bool btl@test()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cam/","title":"Camera Plugin","text":"<p>Camera Plugin API.</p>"},{"location":"xc1de/script/plugins/Cam/#camselect","title":"cam@select","text":"<p><code>void cam@setCamera(int camera)</code></p> <p>Sets the current camera type.</p>"},{"location":"xc1de/script/plugins/Cam/#camselect_1","title":"cam@select","text":"<p><code>void cam@setCamera(int unk = 0, int unkBool = false)</code></p> <p>Restores to normal camera.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetpos","title":"cam@setPos","text":"<p><code>void cam@setCamera(float x, float y, float z)</code></p> <p>Sets the camera position.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetdir","title":"cam@setDir","text":"<p><code>void cam@setDir(float dirX, float dirY)</code></p> <p>Sets the camera direction.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetlookat","title":"cam@setLookat","text":"<p><code>void cam@setLookat(float x, float y, float z)</code></p> <p>Sets the camera lookat position.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetlookat_1","title":"cam@setLookat","text":"<p><code>void cam@setTarget(oc target)</code></p> <p>Sets the camera lookat position.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetrotx","title":"cam@setRotX","text":"<p><code>void cam@setRotX(float x)</code></p> <p>Sets camera X rotation.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetroty","title":"cam@setRotY","text":"<p><code>void cam@setRotY(float x)</code></p> <p>Sets camera Y rotation.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetfov","title":"cam@setFov","text":"<p><code>void cam@setFov(float fov)</code></p> <p>Sets camera FoV (Field of View).</p>"},{"location":"xc1de/script/plugins/Cam/#camgetpos","title":"cam@getPos","text":"<p><code>float cam@getPos(int component)</code></p> <p>Gets camera position (component is used as element index i.e <code>cameraPosition[component]</code>).</p>"},{"location":"xc1de/script/plugins/Cam/#camgetrot","title":"cam@getRot","text":"<p><code>float cam@getRot(int component)</code></p> <p>Gets camera rotation (component is used as element index i.e <code>cameraRotation[component]</code>).</p>"},{"location":"xc1de/script/plugins/Cam/#camsetposofs","title":"cam@setPosOfs","text":"<p><code>void cam@setPosOfs(oc unk, float x, float y, float z, int unk = 0)</code></p> <p>Sets position offset.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetlookatofs","title":"cam@setLookatOfs","text":"<p><code>void cam@setLookatOfs(oc unk, float x, float y, float z, int unk = 0)</code></p> <p>Sets camera lookat offset.</p>"},{"location":"xc1de/script/plugins/Cam/#cambeginkey","title":"cam@beginKey","text":"<p><code>void cam@beginKey(int unk, int unk2, int unk3 = 0, int unk4 = 0, oc unk5 = nil)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cam/#camendkey","title":"cam@endKey","text":"<p><code>void cam@endKey()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cam/#camaddkey","title":"cam@addKey","text":"<p><code>void cam@endKey(int unk, float unk2, float unk3, float unk4, float unk5, float unk6, float unk7, float unk8 = 0, int unk9 = 0)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cam/#camiskeymove","title":"cam@isKeyMove","text":"<p><code>bool cam@isKeyMove()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cam/#camwaitkeymove","title":"cam@waitKeyMove","text":"<p><code>bool cam@waitKeyMove()</code></p> <p>Waits until key is done moving.</p>"},{"location":"xc1de/script/plugins/Cam/#camshake","title":"cam@shake","text":"<p><code>void cam@shake(int a1, float a2, float a3, float a4, float a5, float a6, float a7, float a8, float a9, float a10, float a11, float a12, bool a13)</code></p> <p>Starts camera shake.</p>"},{"location":"xc1de/script/plugins/Cam/#camstopshake","title":"cam@stopShake","text":"<p><code>void cam@stopShake()</code></p> <p>Stops camera shake.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetnearfar","title":"cam@setNearFar","text":"<p><code>void cam@setNearFar(int val)</code></p> <p>Sets camera near/far.</p>"},{"location":"xc1de/script/plugins/Cam/#camsetnextpos","title":"cam@setNextPos","text":"<p><code>void cam@setNextPos(float x = 0, float y = 0, float z = 0)</code></p> <p>Sets the next camera position.</p>"},{"location":"xc1de/script/plugins/Cfs/","title":"Cfs Plugin","text":"<p>Cfs Plugin API.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsmapjump","title":"cfs@mapJump","text":"<p><code>void cfs@mapJump(int chapterId, int locationId, float x, float y, float z, int angle, string unused = nil, int unused8 = nil, int unused9 = nil)</code></p> <p>Jumps to a new map.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsmapjumpkillfadein","title":"cfs@mapJumpKillFadein","text":"<p><code>void cfs@mapJumpKillFadein(int chapterId, int locationId, float x, float y, float z, int angle, string unused = nil, int unused8 = nil, int unused9 = nil)</code></p> <p>Jumps to a new map with fade in (used on death).</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsmapjumpnoloadicon","title":"cfs@mapJumpNoLoadIcon","text":"<p><code>void cfs@mapJumpNoLoadIcon(int chapterId, int locationId, float x, float y, float z, int angle, string unused = nil, int unused8 = nil, int unused9 = nil)</code></p> <p>Jumps to a new map with fade in without a loading logo.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetmessheet","title":"cfs@setMesSheet","text":"<p><code>void cfs@setMesSheet(string msgSheetName)</code></p> <p>Sets the bdat message sheet name to use.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetmapjumparea","title":"cfs@setMapJumpArea","text":"<p><code>void cfs@setMapJumpArea(int chapterId, int locationId, float x1, float y1, float z1, float x2, float y2, float z2, float widthMaybe, float x3, float y3, float z3, float x4, float y4, float z4, int angle = 360, string unused = nil, int unused18 = nil, int unk19 = 0, int unk20 = 0, bool unk21 = false)</code></p> <p>Jumps to map with a specified area.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetmapjumpareabox","title":"cfs@setMapJumpAreaBox","text":"<p><code>void cfs@setMapJumpAreaBox(int chapterId, int locationId, float a3, float a4, float a5, float a6, float a7, float a8, float a9, float a10; float a11, int a12 = 360, string unused = nil, int a14 = 0, int a15 = 0, int a16 = 0)</code></p> <p>Jumps to map with a specified area box.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetwarparea","title":"cfs@setWarpArea","text":"<p><code>void cfs@setWarpArea(int chapterId, int locationId, float x1, float y1, float z1, float x2, float y2, float z2, float widthMaybe, float x3, float y3, float z3, float x4, float y4, float z4, int angle = 360, string unused = nil, int unused18 = nil, int unk19 = 0, int unk20 = 0)</code></p> <p>Jumps to map with warp area.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetmappreloadarea","title":"cfs@setMapPreloadArea","text":"<p><code>void cfs@setMapPreloadArea(int chapterId, int locationId, float a3, int a4, float a5, float a6, float a7, float a8, float a9, int a10)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetmappreloadarea2","title":"cfs@setMapPreloadArea2","text":"<p><code>void cfs@setMapPreloadArea2(int chapterId, int locationId, float x, float y, float z, int unk, int unk2, int unk3)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsseteventarea","title":"cfs@setEventArea","text":"<p><code>void cfs@setEventArea(string a1, float a2, float a3, float a4, float a5, float a6, string a7 = nil, int a8 = 0)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsdeleventarea","title":"cfs@delEventArea","text":"<p><code>void cfs@delEventArea(string a1)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssettownarea","title":"cfs@setTownArea","text":"<p><code>void cfs@setTownArea(float x, float y, float z, float width, float height, string unused = nil, int a8 = 0, int a9 = 0)</code></p> <p>Creates a town area. (loads \"XXXXam.sb\" &amp; \"XXXXpm.sb\" scripts?)</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetpopsheet","title":"cfs@setPopSheet","text":"<p><code>void cfs@setPopSheet(string unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsaddpopid","title":"cfs@addPopID","text":"<p><code>void cfs@addPopID(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssettimespeed","title":"cfs@setTimeSpeed","text":"<p><code>void cfs@setTimeSpeed(int speed)</code></p> <p>Sets the speed of the clock. 0 is no progression. 1 is normal.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfschangewalker","title":"cfs@changeWalker","text":"<p><code>void cfs@changeWalker(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfseventstart","title":"cfs@eventStart","text":"<p><code>void cfs@eventStart(int unk = 0, int unk2 = 0)</code></p> <p>Starts script event.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfseventstart_1","title":"cfs@eventStart","text":"<p><code>void cfs@eventStart(int unk = 0)</code></p> <p>Ends script event.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfseventstart_2","title":"cfs@eventStart","text":"<p><code>void cfs@eventStart(int unk = 0)</code></p> <p>Ends script event.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsbattleeventstart","title":"cfs@battleEventStart","text":"<p><code>void cfs@battleEventStart()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsdelattr","title":"cfs@delAttr","text":"<p><code>void cfs@delAttr(int unk)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetmono","title":"cfs@setMono","text":"<p><code>void cfs@setMono(bool unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetmapdispid","title":"cfs@setMapDispID","text":"<p><code>void cfs@setMapDispID(int unkPartId, bool withAlpha, bool unusedMaybe, bool unusedMaybe2, bool unused)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsloadcfevent","title":"cfs@loadCfEvent","text":"<p><code>void cfs@loadCfEvent(string cfEventScriptName)</code></p> <p>Loads CF event. Waits first if a map jump is in progress.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsloadcfevent_1","title":"cfs@loadCfEvent","text":"<p><code>void cfs@loadCfEvent(string cfEventName)</code></p> <p>Loads CF event. Waits first if a map jump is in progress. </p> <p>Will not load if in event viewer.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsadditem","title":"cfs@addItem","text":"<p><code>int cfs@addItem(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsdelitem","title":"cfs@delItem","text":"<p><code>void cfs@delItem(int itemId, int removeAmount = 1)</code></p> <p>Removes one or multiple of an item from the inventory.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfstotalitem","title":"cfs@totalItem","text":"<p><code>int cfs@totalItem(int item)</code></p> <p>Gets the number of a specific item in the inventory.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsequipitem","title":"cfs@equipItem","text":"<p><code>void cfs@equipItem(int pcId, int headItemId, int bodyItemId, int armItemId, int legItemId, int footItemId)</code></p> <p>Equips a playable character with the specified armor items.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsequipweapon","title":"cfs@equipWeapon","text":"<p><code>void cfs@equipWeapon(int pcId, int weaponItemId)</code></p> <p>Equips a playable character with the specified weapon.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsgetweaponslot","title":"cfs@getWeaponSlot","text":"<p><code>int cfs@getWeaponSlot(int pcId)</code></p> <p>Gets a playable character's current weapon.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetweaponslot","title":"cfs@setWeaponSlot","text":"<p><code>int cfs@getWeaponSlot(int pcId, int itemId)</code></p> <p>Sets a playable character's current weapon.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetweaponslot_1","title":"cfs@setWeaponSlot","text":"<p><code>int cfs@getWeaponSlot(int pcId, int itemId)</code></p> <p>Sets a playable character's current weapon.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfswaiteventres","title":"cfs@waitEventRes","text":"<p><code>void cfs@waitEventRes()</code></p> <p>Wait until the current script event is ready.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfswaitcfevent","title":"cfs@waitCfEvent","text":"<p><code>void cfs@waitCfEvent()</code></p> <p>Wait until the current script event ends.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsismainparty","title":"cfs@isMainParty","text":"<p><code>bool cfs@isMainParty(int pcId)</code></p> <p>Returns whether a character is in the current party.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsisresvparty","title":"cfs@isResvParty","text":"<p><code>void cfs@isResvParty(int pcId)</code></p> <p>Returns whether a character is in the reserve party.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsaddparty","title":"cfs@addParty","text":"<p><code>void cfs@addParty(int pcId)</code></p> <p>Adds a character to the party.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsdelparty","title":"cfs@delParty","text":"<p><code>void cfs@delParty(int pcId)</code></p> <p>Removes a character from the party.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsmakeparty","title":"cfs@makeParty","text":"<p><code>void cfs@makeParty(int pc1, int pc2 = nil, int pc3 = nil)</code></p> <p>Changes the current party.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsmakeguestparty","title":"cfs@makeGuestParty","text":"<p><code>void cfs@makeGuestParty(int pc1 = nil, int pc2 = nil, int pc3 = nil)</code></p> <p>Changes the current guest party.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetfade","title":"cfs@setFade","text":"<p><code>void cfs@setFade(float a1, float a2, float a3, float a4, int a5 = 0)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetfade_1","title":"cfs@setFade","text":"<p><code>void cfs@setFade(float a1, float a2, float a3, float a4, int a5 = 0)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsapplypcprm","title":"cfs@applyPcPrm","text":"<p><code>void cfs@applyPcPrm(int pc, int unk)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetdispoffarea","title":"cfs@setDispOffArea","text":"<p><code>void cfs@setDispOffArea(oc unit, int unk2)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetweather","title":"cfs@setWeather","text":"<p><code>void cfs@setWeather(int weatherType)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetweatherarea","title":"cfs@setWeatherArea","text":"<p><code>void cfs@setWeatherArea(int weatherType)</code></p> <p>Sets the weather for the area.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetgimmick","title":"cfs@setGimmick","text":"<p><code>void cfs@setGimmick(int gimmickId, int state)</code></p> <p>Sets a gimmick.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetelvgim","title":"cfs@setElvGim","text":"<p><code>void cfs@setElvGim(int gimmickId)</code></p> <p>Sets an elevator gimmick.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetactmapobj","title":"cfs@setActMapObj","text":"<p><code>void cfs@setActMapObj(int unk, int unk2)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetdispmapobj","title":"cfs@setDispMapObj","text":"<p><code>void cfs@setDispMapObj(int unk, bool unk2)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsgetmapid","title":"cfs@getMapID","text":"<p><code>int cfs@getMapID()</code></p> <p>Returns the current map id.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfscleargimmickjump","title":"cfs@clearGimmickJump","text":"<p><code>void cfs@clearGimmickJump()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfspartymember","title":"cfs@partyMember","text":"<p><code>bool cfs@partyMember(int slot)</code></p> <p>Returns if a party member exists at the specified slot (1-3).</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsclearpartygauge","title":"cfs@clearPartyGauge","text":"<p><code>void cfs@clearPartyGauge()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfswaitpop","title":"cfs@waitPop","text":"<p><code>void cfs@waitPop()</code></p> <p>Waits until the enemy is ready/has popped.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfspartywarp","title":"cfs@partyWarp","text":"<p><code>void cfs@partyWarp()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetmoney","title":"cfs@setMoney","text":"<p><code>void cfs@setMoney(int money)</code></p> <p>Set the current money.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsaddmoney","title":"cfs@addMoney","text":"<p><code>void cfs@addMoney(int money)</code></p> <p>Adds money.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsistimeskip","title":"cfs@isTimeSkip","text":"<p><code>bool cfs@isTimeSkip()</code></p> <p>Returns if currently time skipping.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsistimeskipfirst","title":"cfs@isTimeSkipFirst","text":"<p><code>bool cfs@isTimeSkipFirst()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsdelholdbox","title":"cfs@delHoldBox","text":"<p><code>void cfs@delHoldBox(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsgetweaponid","title":"cfs@getWeaponID","text":"<p><code>void cfs@getWeaponID(int pcId)</code></p> <p>Gets the weapon id for a playable character.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfscleartreasurebox","title":"cfs@clearTreasureBox","text":"<p><code>void cfs@clearTreasureBox()</code></p> <p>Clears all treasure boxes/chests on the map.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetscheduletype","title":"cfs@setScheduleType","text":"<p><code>void cfs@setScheduleType(oc npc, int unk)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsreturntitle","title":"cfs@returnTitle","text":"<p><code>void cfs@returnTitle()</code></p> <p>Returns to the title screen.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsdisploading","title":"cfs@dispLoading","text":"<p><code>void cfs@dispLoading()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsadditemlimit","title":"cfs@addItemLimit","text":"<p><code>void cfs@addItemLimit(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsclearitemlimit","title":"cfs@clearItemLimit","text":"<p><code>void cfs@clearItemLimit()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsclearequipgem","title":"cfs@clearEquipGem","text":"<p><code>void cfs@clearEquipGem()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetpcctrl","title":"cfs@setPcCtrl","text":"<p><code>void cfs@setPcCtrl(bool unk)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetfieldvision","title":"cfs@setFieldVision","text":"<p><code>void cfs@setFieldVision()</code></p> <p>Shows vision (on the field).</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssavenamedcount","title":"cfs@saveNamedCount","text":"<p><code>void cfs@saveNamedCount()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsispal","title":"cfs@isPal","text":"<p><code>bool cfs@isPal()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetignorepal","title":"cfs@setIgnorePal","text":"<p><code>bool cfs@setIgnorePal(bool ignore)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsisvoicejp","title":"cfs@isVoiceJP","text":"<p><code>bool cfs@isVoiceJP()</code></p> <p>Returns whether the voice is set to japanese.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfswaiteventviewer","title":"cfs@waitEventViewer","text":"<p><code>void cfs@waitEventViewer()</code></p> <p>Waits until the event viewer is done.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetcfeventcutscene","title":"cfs@setCfEventCutScene","text":"<p><code>void cfs@setCfEventCutScene(string name)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetcfeventcutscenelist","title":"cfs@setCfEventCutSceneList","text":"<p><code>void cfs@setCfEventCutSceneList(string name)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsisscenariomelia","title":"cfs@isScenarioMelia","text":"<p><code>void cfs@isScenarioMelia()</code></p> <p>Returns whether this is Future Connected.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsreturndefectgem","title":"cfs@returnDefectGem","text":"<p><code>void cfs@returnDefectGem(int unk)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfsaddartscoin","title":"cfs@addArtsCoin","text":"<p><code>void cfs@addArtsCoin(int coins, bool unk)</code></p> <p>Adds arts coins (Future Connected).</p>"},{"location":"xc1de/script/plugins/Cfs/#cfswaitmodelstream","title":"cfs@waitModelStream","text":"<p><code>void cfs@waitModelStream()</code></p> <p>Waits until model streaming is done.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfscanacceptorder","title":"cfs@canAcceptOrder","text":"<p><code>bool cfs@canAcceptOrder()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Cfs/#cfssetalloweventskip","title":"cfs@setAllowEventSkip","text":"<p><code>void cfs@setAllowEventSkip(bool canSkip)</code></p> <p>Sets whether event skipping is enabled.</p>"},{"location":"xc1de/script/plugins/Deb/","title":"Deb (Debug) Plugin","text":"<p>Debug Plugin API.</p>"},{"location":"xc1de/script/plugins/Deb/#debput","title":"deb@put","text":"<p><code>void deb@put(...)</code></p> <p>Warning</p> <p>\"Stripped in release\"</p> <p>Prints arguments to debug output.</p>"},{"location":"xc1de/script/plugins/Deb/#debdummy","title":"deb@dummy","text":"<p><code>void deb@dummy(float a1)</code></p> <p>Unknown. Calls <code>splitFixed</code> internally but does not return anything.</p>"},{"location":"xc1de/script/plugins/Eve/","title":"Event Plugin","text":"<p>Event Plugin API.</p>"},{"location":"xc1de/script/plugins/Eve/#evegetflag","title":"eve@getFlag","text":"<p><code>int eve@getPcHp(int flag, int arrayIndex)</code></p> <p>Gets flag value.</p>"},{"location":"xc1de/script/plugins/Eve/#evesetflag","title":"eve@setFlag","text":"<p><code>void eve@getPcHp(int flag, int arrayIndex, int value)</code></p> <p>Sets flag value.</p>"},{"location":"xc1de/script/plugins/Eve/#evegetawardflagf16","title":"eve@getAwardFlagF16","text":"<p><code>int eve@getAwardFlagF16(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Eve/#eveaddawardflagf16","title":"eve@addAwardFlagF16","text":"<p><code>void eve@addAwardFlagF16(int unk, int unk2 = 0)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Eve/#evesetawardflagf1","title":"eve@setAwardFlagF1","text":"<p><code>void eve@setAwardFlagF1(int unk, int unk2 = 0)</code></p> <p>Sets award/achievement. ID matches MNU_playaward.</p> <p>Warning</p> <p>Hardcoded. Only IDs 170 to 174 are accepted (Heart-to-Heart awards).</p>"},{"location":"xc1de/script/plugins/Eve/#everealtimeeventstart","title":"eve@realtimeEventStart","text":"<p><code>void eve@realtimeEventStart(bool unk = false)</code></p> <p>Waits until ready to start a real time event.</p>"},{"location":"xc1de/script/plugins/Eve/#everealtimeeventplay","title":"eve@realtimeEventPlay","text":"<p><code>void eve@realtimeEventPlay(string eventName)</code></p> <p>Starts a new real time event. <code>eve@realtimeEventStart</code> should be called first as it ensure that the script has waited for any ongoing event to be done before starting a new one.</p>"},{"location":"xc1de/script/plugins/Eve/#everealtimeeventend","title":"eve@realtimeEventEnd","text":"<p><code>void eve@realtimeEventEnd()</code></p> <p>Ends the current real time event.</p>"},{"location":"xc1de/script/plugins/Eve/#evewaitrealtimeevent","title":"eve@waitRealtimeEvent","text":"<p><code>void eve@waitRealtimeEvent()</code></p> <p>Waits until the current real time event ends.</p>"},{"location":"xc1de/script/plugins/Eve/#evecheckevent","title":"eve@checkEvent","text":"<p><code>void eve@checkEvent(bool unk)</code></p> <p>Unknown. Calls <code>game::ScriptCfs::setContinuousEvent</code>.</p>"},{"location":"xc1de/script/plugins/Eve/#evecleareventskip","title":"eve@clearEventSkip","text":"<p><code>void eve@clearEventSkip(bool unk)</code></p> <p>Unknown. Calls <code>game::ScriptCfs::setMultiEventSkip</code>.</p>"},{"location":"xc1de/script/plugins/Eve/#eveisevent","title":"eve@isEvent","text":"<p><code>bool eve@isEvent()</code></p> <p>Unknown. Returns status of <code>game::ScriptCfs::isContinuousEvent</code>.</p>"},{"location":"xc1de/script/plugins/Eve/#eveistalkevent","title":"eve@isTalkEvent","text":"<p><code>bool eve@isTalkEvent()</code></p> <p>Unknown. Returns status of <code>game::ScriptCfs::isFieldTalking</code>.</p>"},{"location":"xc1de/script/plugins/Eve/#eveistalkevent_1","title":"eve@isTalkEvent","text":"<p><code>bool eve@isTalkEvent()</code></p> <p> Dummy function. Always returns false.</p>"},{"location":"xc1de/script/plugins/Eve/#eveontalk","title":"eve@onTalk","text":"<p><code>nil eve@isTalkEvent()</code></p> <p> Dummy function. Always returns nil.</p>"},{"location":"xc1de/script/plugins/Eve/#eveontalkend","title":"eve@onTalkEnd","text":"<p><code>bool eve@onTalkEnd()</code></p> <p>Unknown. Returns status of <code>game::ScriptCfs::isFieldTalkEnd</code>.</p>"},{"location":"xc1de/script/plugins/Eve/#evefadein","title":"eve@fadeIn","text":"<p><code>bool eve@fadeIn(int frame = 0, int black = 0)</code></p> <p>Fades in.</p>"},{"location":"xc1de/script/plugins/Eve/#evefadeout","title":"eve@fadeOut","text":"<p><code>bool eve@fadeOut(int frame = 0, int black = 0)</code></p> <p>Fades out.</p>"},{"location":"xc1de/script/plugins/Eve/#evefadewait","title":"eve@fadeWait","text":"<p><code>void eve@fadeWait()</code></p> <p>Waits for fade to end.</p>"},{"location":"xc1de/script/plugins/Eve/#eveisfading","title":"eve@isFading","text":"<p><code>bool eve@isFading()</code></p> <p>Returns whether the screen is currently fading.</p>"},{"location":"xc1de/script/plugins/Eve/#eveiseventfrombgm","title":"eve@isEventFromBGM","text":"<p><code>bool eve@isEventFromBGM()</code></p> <p>Unknown. Returns status of <code>game::ScriptCfs::isContinuousEventFromBGMScript</code>.</p>"},{"location":"xc1de/script/plugins/Eve/#eveprohibitmenu","title":"eve@prohibitMenu","text":"<p><code>bool eve@prohibitMenu(bool prohibit)</code></p> <p>Sets whether menuing is prohibited.</p>"},{"location":"xc1de/script/plugins/Game/","title":"Game Plugin","text":"<p>Game Plugin API.</p>"},{"location":"xc1de/script/plugins/Game/#gamecmd","title":"game@cmd","text":"<p><code>void game@cmd()</code></p> <p>Warning</p> <p>\"Stripped in release\"</p> <p>Does nothing.</p>"},{"location":"xc1de/script/plugins/Help/","title":"Help Plugin","text":"<p>Help/Tutorial Plugin API.</p>"},{"location":"xc1de/script/plugins/Help/#helpgamestart","title":"help@gameStart","text":"<p><code>void help@gameStart()</code></p> <p>Shows game start tutorial. Wait for the tutorial UI to be closed.</p>"},{"location":"xc1de/script/plugins/Help/#helpitemvision","title":"help@itemVision","text":"<p><code>void help@itemVision()</code></p> <p>Shows item vision tutorial. Wait for the tutorial UI to be closed.</p>"},{"location":"xc1de/script/plugins/Help/#helpdisptutorial","title":"help@dispTutorial","text":"<p><code>void help@dispTutorial(int tutId)</code></p> <p>Displays a specific tutorial and waits for it to be closed.</p>"},{"location":"xc1de/script/plugins/Help/#helpptchange","title":"help@ptChange","text":"<p><code>void help@ptChange(int tutId)</code></p> <p>Opens party change if a tutorial prompt doesn't already exist.</p>"},{"location":"xc1de/script/plugins/Help/#helpisexistnoponallrole","title":"help@isExistNoponAllRole","text":"<p><code>bool help@isExistNoponAllRole(int tutId)</code></p> <p>Unknown (Future Connected).</p>"},{"location":"xc1de/script/plugins/Math/","title":"Math Plugin","text":"<p>Math Plugin API.</p>"},{"location":"xc1de/script/plugins/Math/#mathselect","title":"math@select","text":"<p><code>int math@random(int min, int max)</code></p> <p>Gets a random value using <code>ml::mtRand</code> (mersenne twister).</p>"},{"location":"xc1de/script/plugins/Pad/","title":"Pad Plugin","text":"<p>Pad Plugin API.</p>"},{"location":"xc1de/script/plugins/Pad/#padget","title":"pad@get","text":"<p><code>int pad@get(int unk = 0)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Pad/#padenable","title":"pad@enable","text":"<p><code>int pad@enable(int key, bool enabled)</code></p> <p>Enables or disables a specific control.</p>"},{"location":"xc1de/script/plugins/Sound/","title":"Sound Plugin","text":"<p>Sound Plugin API.</p>"},{"location":"xc1de/script/plugins/Sound/#soundplaybgm","title":"sound@playBgm","text":"<p><code>void sound@playBgm(int bgmId, float fadetime, bool flag = false)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Sound/#soundstopbgm","title":"sound@stopBgm","text":"<p><code>void sound@stopBgm(float fadetime)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Sound/#soundsetfieldbgm","title":"sound@setFieldBgm","text":"<p><code>void sound@setFieldBgm(int bgmId = 0, int bgmIdBattle = 0, float fadetime = 0, bool flag = false)</code></p> <p>Sets field+battle background music.</p>"},{"location":"xc1de/script/plugins/Sound/#soundsettownbgm","title":"sound@setTownBgm","text":"<p><code>void sound@setTownBgm(int bgmId = 0, int bgmIdBattle = 0, float fadetime = 0, bool flag = false)</code></p> <p>Sets town+battle background music.</p>"},{"location":"xc1de/script/plugins/Sound/#soundstopfieldbgm","title":"sound@stopFieldBgm","text":"<p><code>void sound@stopFieldBgm(float fadetime = 0)</code></p> <p>Stops field background music.</p>"},{"location":"xc1de/script/plugins/Sound/#soundstoptownbgm","title":"sound@stopTownBgm","text":"<p><code>void sound@stopTownBgm(float fadetime = 0)</code></p> <p>Stops town background music.</p>"},{"location":"xc1de/script/plugins/Sound/#soundforcefieldbgm","title":"sound@forceFieldBgm","text":"<p><code>void sound@forceFieldBgm(float fadetime = 0)</code></p> <p>Forces field background music regardless of context.</p>"},{"location":"xc1de/script/plugins/Sound/#soundstopbgm_1","title":"sound@stopBgm","text":"<p><code>void sound@stopBgm(float unk, float unk2 = 0)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Sound/#soundplayvoice","title":"sound@playVoice","text":"<p><code>void sound@playVoice(string voiceName)</code></p> <p>Plays a voice file.</p>"},{"location":"xc1de/script/plugins/Sound/#soundstopvoice","title":"sound@stopVoice","text":"<p><code>void sound@stopVoice(string voiceName = nil)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Sound/#soundwaitvoice","title":"sound@waitVoice","text":"<p><code>void sound@waitVoice()</code></p> <p>Waits for voice playback to end.</p>"},{"location":"xc1de/script/plugins/Sound/#soundplaysecommon","title":"sound@playSeCommon","text":"<p><code>void sound@playSeCommon(int id, float unk = 1, float unk2 = 0)</code></p> <p>Plays a sound effect.</p>"},{"location":"xc1de/script/plugins/Sound/#soundplaysemap","title":"sound@playSeMap","text":"<p><code>void sound@playSeMap(int id, float unk = 1, float unk2 = 0)</code></p> <p>Plays a map sound effect.</p>"},{"location":"xc1de/script/plugins/Sound/#soundvolsemap","title":"sound@volSeMap","text":"<p><code>void sound@volSeMap(int id, float unk = 1, float unk2 = 0)</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Sound/#soundstopsecommon","title":"sound@stopSeCommon","text":"<p><code>void sound@stopSeCommon(int unk, float unk2)</code></p> <p>Stops sound effect.</p>"},{"location":"xc1de/script/plugins/Sound/#soundstopsemap","title":"sound@stopSeMap","text":"<p><code>void sound@stopSeMap(int unk, float unk2)</code></p> <p>Stops map sound effect.</p>"},{"location":"xc1de/script/plugins/Sound/#soundsetcampos","title":"sound@setCamPos","text":"<p><code>void sound@setCamPos(float x, float y, float z, float unk = 0, float unk2 = 0, float unk3 = 0)</code></p> <p>Sets camera sound position.</p>"},{"location":"xc1de/script/plugins/Sound/#soundclearcampos","title":"sound@clearCamPos","text":"<p><code>void sound@clearCamPos()</code></p> <p>Clears camera sound position.</p>"},{"location":"xc1de/script/plugins/Sound/#soundsetenablefadevolume","title":"sound@setEnableFadeVolume","text":"<p><code>void sound@setEnableFadeVolume(bool enable = true)</code></p> <p>Sets whether to enable fading volume.</p>"},{"location":"xc1de/script/plugins/Sound/#soundplaynpcvoice","title":"sound@playNpcVoice","text":"<p><code>void sound@playNpcVoice(int unkId, int unk2)</code></p> <p>Plays NPC voice. ID is used against <code>FLD_npclist</code>-&gt;resource which is then used for <code>KP_list</code>-&gt;sound.</p> <p>Warning</p> <p>Calls <code>game::ScriptSound::playNpcVoice</code> which has an hardcoded check of ID 201 max.</p>"},{"location":"xc1de/script/plugins/Time/","title":"Time Plugin","text":"<p>Time Plugin API.</p>"},{"location":"xc1de/script/plugins/Time/#timerange","title":"time@range","text":"<p><code>int time@range()</code></p> <p>Gets the type of time of day.</p>"},{"location":"xc1de/script/plugins/Time/#timehour","title":"time@hour","text":"<p><code>int time@hour()</code></p> <p>Gets the current hour of the day.</p>"},{"location":"xc1de/script/plugins/Ui/","title":"UI Plugin","text":"<p>UI Plugin API.</p>"},{"location":"xc1de/script/plugins/Ui/#uiwintalk","title":"ui@winTalk","text":"<p><code>void ui@winTalk(int unk, string unk2)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uipctalk","title":"ui@pcTalk","text":"<p><code>void ui@pcTalk(int type)</code></p> <p>Triggers playable character talk. Type maps to pctalk01. </p> <p>Calls <code>game::ScriptCfs::startPcTalk</code>.</p>"},{"location":"xc1de/script/plugins/Ui/#uiwintalkwait","title":"ui@winTalkWait","text":"<p><code>void ui@winTalkWait()</code></p> <p>Waits for talk to finish (if any talk UI is open) before resuming execution.</p>"},{"location":"xc1de/script/plugins/Ui/#uiwintalknoname","title":"ui@winTalkNoName","text":"<p><code>void ui@winTalkNoName(int id)</code></p> <p>Shows text on-screen without a dialog or name. ID will map to bdat file [script_msg_ms] with matching script name. Calls <code>game::ScriptUI::openNoNameSubtitleSEV</code>.</p> <p>Tip</p> <p>This is used during High Entia Tomb cutscenes when the ancestor AI speaks to Melia.</p>"},{"location":"xc1de/script/plugins/Ui/#uifadein","title":"ui@fadeIn","text":"<p><code>void ui@fadeIn(int unk, int unk2 = 0)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uifadeout","title":"ui@fadeOut","text":"<p><code>void ui@fadeOut(int unk, int unk2 = 0)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uifadewait","title":"ui@fadeWait","text":"<p><code>void ui@fadeWait()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uicreatecol6sys","title":"ui@createCol6Sys","text":"<p><code>void ui@createCol6Sys()</code></p> <p>Opens Colony 6 Reconstruction UI.</p>"},{"location":"xc1de/script/plugins/Ui/#uicreatecol6hint","title":"ui@createCol6Hint","text":"<p><code>void ui@createCol6Hint()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Ui/#uicreatecol6invite","title":"ui@createCol6Invite","text":"<p><code>void ui@createCol6Invite(int npcId, int extraReconstruction, int extraPopulation)</code></p> <p>Creates &amp; processes a colony 6 npc invitation. ID is FLD_npclist.</p>"},{"location":"xc1de/script/plugins/Ui/#uicreatecol6init","title":"ui@createCol6Init","text":"<p><code>void ui@createCol6Init()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uicheckcol6bat","title":"ui@checkCol6Bat","text":"<p><code>void ui@checkCol6Bat()</code></p> <p>Opens Colony 6 attack ui if one is expected. Calls <code>game::ScriptUI::openIfColony6Attack</code>.</p>"},{"location":"xc1de/script/plugins/Ui/#uisimpleeventstart","title":"ui@simpleEventStart","text":"<p><code>void ui@simpleEventStart()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uisimpleeventend","title":"ui@simpleEventEnd","text":"<p><code>void ui@simpleEventEnd()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uisettrust","title":"ui@setTrust","text":"<p><code>void ui@setTrust(int spc1, int spc2, int kizunaFlag, int increase)</code></p> <p>Changes the trust between two playable characters.</p>"},{"location":"xc1de/script/plugins/Ui/#uisetitemmulti","title":"ui@setItemMulti","text":"<p><code>void ui@setItemMulti(int itemId1 = 1, int itemId2 = nil, int itemId3 = nil, int itemId4 = nil, bool unk = nil)</code></p> <p>Brings up a multi-item selection prompt.</p>"},{"location":"xc1de/script/plugins/Ui/#uisetkizunatalk","title":"ui@setKizunaTalk","text":"<p><code>void ui@setKizunaTalk(int kznId)</code></p> <p>Shows a kizuna (relation) dialog.</p>"},{"location":"xc1de/script/plugins/Ui/#uiwinsys","title":"ui@winSys","text":"<p><code>void ui@winSys(int msgId)</code></p> <p>Shows a generic system dialog. ID will map to bdat file [script_msg_ms] with matching script name.</p>"},{"location":"xc1de/script/plugins/Ui/#uiwinsysselect","title":"ui@winSysSelect","text":"<p><code>void ui@winSysSelect(int selectMsgId1, int selectMsgId2, int selectMsgId3)</code></p> <p>Shows a generic system dialog with selection. ID will map to bdat file [script_msg_ms] with matching script name.</p> <p>Tip</p> <p>This is used for the last point of no return or confirmations before proceeding.</p>"},{"location":"xc1de/script/plugins/Ui/#uigetselectnum","title":"ui@getSelectNum","text":"<p><code>int ui@getSelectNum()</code></p> <p>Gets the dialog selection item index chosen (when <code>ui@winSysSelect</code> is used).</p>"},{"location":"xc1de/script/plugins/Ui/#uimesgetarts","title":"ui@mesGetArts","text":"<p><code>int ui@mesGetArts(int pcId, int artId)</code></p> <p>Shows an art unlocked message.</p>"},{"location":"xc1de/script/plugins/Ui/#uimesaddpt","title":"ui@mesAddPT","text":"<p><code>int ui@mesAddPT(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uimessubpt","title":"ui@mesSubPT","text":"<p><code>int ui@mesSubPT(int unk)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uimesvisionon","title":"ui@mesVisionON","text":"<p><code>int ui@mesVisionON()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uimesvisionoff","title":"ui@mesVisionOFF","text":"<p><code>void ui@mesVisionOFF()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uimesmonadoon","title":"ui@mesMonadoON","text":"<p><code>void ui@mesMonadoON()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uimesmonadooff","title":"ui@mesMonadoOFF","text":"<p><code>void ui@mesMonadoOFF()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uiptchangenotice","title":"ui@ptChangeNotice","text":"<p><code>void ui@ptChangeNotice()</code></p> <p>Shows a party change dialog.</p>"},{"location":"xc1de/script/plugins/Ui/#uisave","title":"ui@save","text":"<p><code>void ui@save()</code></p> <p>Shows a save dialog.</p>"},{"location":"xc1de/script/plugins/Ui/#uikizunatalkstart","title":"ui@kizunaTalkStart","text":"<p><code>void ui@kizunaTalkStart()</code></p> <p>Starts a relation/heart-to-heart talk.</p>"},{"location":"xc1de/script/plugins/Ui/#uikizunatalkend","title":"ui@kizunaTalkEnd","text":"<p><code>void ui@kizunaTalkStart()</code></p> <p>Ends a relation/heart-to-heart talk.</p>"},{"location":"xc1de/script/plugins/Ui/#uikizunatalkend_1","title":"ui@kizunaTalkEnd","text":"<p><code>bool ui@isPrioReq()</code></p> <p>Unknown.</p>"},{"location":"xc1de/script/plugins/Ui/#uigameclear","title":"ui@gameClear","text":"<p><code>void ui@gameClear()</code></p> <p>Opens save dialog with the game cleared flag.</p>"},{"location":"xc1de/script/plugins/Ui/#uisetlasttalknpc","title":"ui@setLastTalkNpc","text":"<p><code>void ui@setLastTalkNpc(int rltMeet)</code></p> <p>Unknown. ID is matched through FLD_npclist-&gt;rlt_meet.</p>"},{"location":"xc1de/script/plugins/Ui/#uiissetalkvoicewait","title":"ui@isSETalkVoiceWait","text":"<p><code>bool ui@isSETalkVoiceWait()</code></p> <p>Returns whether talk voice is ongoing.</p>"},{"location":"xc1de/script/plugins/Ui/#uisetsetalkvoicewait","title":"ui@setSETalkVoiceWait","text":"<p><code>void ui@setSETalkVoiceWait()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uiclearsetalkvoicewait","title":"ui@clearSETalkVoiceWait","text":"<p><code>void ui@clearSETalkVoiceWait()</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Ui/#uicreatetrialselect","title":"ui@createTrialSelect","text":"<p><code>void ui@createTrialSelect()</code></p> <p>Creates time attack/trial dialog.</p>"},{"location":"xc1de/script/plugins/Ui/#uijoinnopongerdialog","title":"ui@joinNopongerDialog","text":"<p><code>void ui@joinNopongerDialog(int nopongerId)</code></p> <p>Creates a nopon ponspector join dialog (Future Connected).</p>"},{"location":"xc1de/script/plugins/Ui/#uiisjoinpc","title":"ui@isJoinPc","text":"<p><code>bool ui@isJoinPc(int nopongerId)</code></p> <p>Returns whether a nopon ponspector has joined (Future Connected).</p>"},{"location":"xc1de/script/plugins/Ui/#uiisendmeliaclearsave","title":"ui@isEndMeliaClearSave","text":"<p><code>bool ui@isEndMeliaClearSave()</code></p> <p>Returns whether Future Connected has been completed.</p>"},{"location":"xc1de/script/plugins/Unit/","title":"Unit Plugin","text":"<p>Battle Unit Plugin API.</p>"},{"location":"xc1de/script/plugins/Unit/#unitgetpchp","title":"unit@getPcHp","text":"<p><code>int unit@getPcHp(int pc)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Unit/#unitgetpchprate","title":"unit@getPcHpRate","text":"<p><code>int unit@getPcHpRate(int pc)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Unit/#unitgetenehp","title":"unit@getEneHp","text":"<p><code>int unit@getEneHp(int eneId)</code></p> <p>Gets the health of an enemy.</p>"},{"location":"xc1de/script/plugins/Unit/#unitgetenehp_1","title":"unit@getEneHp","text":"<p><code>int unit@getEneHp(int eneId)</code></p> <p>Gets the health of an enemy. Calls <code>game::ScriptUnit::getEnemyHp</code>.</p>"},{"location":"xc1de/script/plugins/Unit/#unitgetenehprate","title":"unit@getEneHpRate","text":"<p><code>int unit@getEneHpRate(int eneId)</code></p> <p>Gets the health rate (percentage?) of an enemy. Calls <code>game::ScriptUnit::getEnemyHpRate</code>.</p>"},{"location":"xc1de/script/plugins/Unit/#unitsetpcbtlstate","title":"unit@setPcBtlState","text":"<p><code>void unit@setPcBtlState(int bdid, int state, int time = 0, int val1 = 0, int val2 = 0, int interval = 0)</code></p> <p>Sets the battle state of a playable character. Calls <code>game::ScriptUnit::setPcBtlState</code>.</p>"},{"location":"xc1de/script/plugins/Unit/#unitexistpcbtlstate","title":"unit@existPcBtlState","text":"<p><code>bool unit@existPcBtlState(int bdid, int state)</code></p> <p>Checks if the battle state of a player character exists. Calls <code>game::ScriptUnit::existPcBtlState</code>.</p>"},{"location":"xc1de/script/plugins/Unit/#unitclearpcbtlstate","title":"unit@clearPcBtlState","text":"<p><code>void unit@clearPcBtlState(int bdid, int state)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Unit/#unitsetenebtlstate","title":"unit@setEneBtlState","text":"<p><code>void unit@setEneBtlState(int bdid, int state, int time = 0, int val1 = 0, int val2 = 0, int interval = 0)</code></p> <p>Sets the battle state of an enemy. Calls <code>game::ScriptUnit::setEneBtlState</code>.</p>"},{"location":"xc1de/script/plugins/Unit/#unitclearenebtlstate","title":"unit@clearEneBtlState","text":"<p><code>void unit@clearEneBtlState(int bdid, int state)</code></p> <p>Clears the battle state of a battle enemy. Calls <code>game::ScriptUnit::clearEneBtlState</code>.</p>"},{"location":"xc1de/script/plugins/Unit/#unitonpcartsattack","title":"unit@onPcArtsAttack","text":"<p><code>int unit@onPcArtsAttack(int bdid, int state)</code></p> <p> Dummy function.</p>"},{"location":"xc1de/script/plugins/Unit/#unitoneneartsattack","title":"unit@onEneArtsAttack","text":"<p><code>bool unit@onEneArtsAttack(int bdid, int state, int unused = 0)</code></p> <p>Returns whether an enemy art attack is enabled. Calls <code>game::ScriptUnit::isOnEneArtsAttack</code>.</p>"},{"location":"xc1de/script/plugins/Unit/#unitsynchro","title":"unit@synchro","text":"<p><code>void unit@synchro(int id1, int id2)</code></p> <p>Unknown. Calls <code>game::ScriptUnit::setSynchro</code>.</p>"},{"location":"xc1de/script/plugins/Unit/#unitlearnarts","title":"unit@learnArts","text":"<p><code>void unit@learnArts(int pc_arts_id)</code></p> <p>Learns an art. Calls <code>game::ScriptUnit::learnArts</code>.</p> <p>Tip</p> <p>Art ID is from pc_arts.</p>"},{"location":"xc1de/script/plugins/Unit/#unitgetpchandle","title":"unit@getPcHandle","text":"<p><code>int unit@getPcHandle()</code></p> <p>Unknown. Gets party handle. Calls <code>game::ScriptUnit::getPartyHandle</code>.</p>"},{"location":"xc1de/script/plugins/Voice/","title":"Voice Plugin","text":"<p>Voice Plugin API.</p>"},{"location":"xc1de/script/plugins/Voice/#voiceplay","title":"voice@play","text":"<p><code>void voice@play(int unk, int unk2)</code></p> <p>Plays playable character voice.</p>"},{"location":"xc1de/script/plugins/Wait/","title":"Wait Plugin","text":"<p>Wait Plugin API.</p>"},{"location":"xc1de/script/plugins/Wait/#waitframe","title":"wait@frame","text":"<p><code>void wait@frame(int frameCnt)</code></p> <p>Waits the specified amount of frames.</p>"},{"location":"xc1de/tables/bdat_common/","title":"bdat_common","text":""},{"location":"xc1de/tables/bdat_common/#misc-tables","title":"Misc Tables","text":""},{"location":"xc1de/tables/bdat_common/#bgm_list","title":"bgm_list","text":"<p>Human Readable Name: Background Music List</p> <p>Maps BGM IDs to their file names.</p> Column Type Description Handled by <code>file_name</code> <code>string</code> BGM File Name. Will be hashed, see below <code>game::BGM::getBGMName</code>, <code>game::SoundUtil::findBGMID</code>, <code>game::SoundUtil::findBGMID</code> <p>Hashing</p> <pre><code>// fw::SoundManager::playBattleBGM - 0x7100064A60 - 1.1.2\nmm::mtl::FixStr&lt;32&gt;::format(str, \"%s_%03d\", file_name, unk); \nmm::mtl::FixStr&lt;256&gt;::format(final_str, \"%s_%lu\", str, this-&gt;LastID);\nIDFromString = AK::SoundEngine::GetIDFromString(final_str); // Audiokinetic Wwise\n// this-&gt;LastID++\n\nif ( v20 )\n    v21 = \"arrange\";\nelse\n    v21 = \"original\";\nAK::SoundEngine::SetSwitch((AK::SoundEngine *)\"battle_bgm\", v21, (const char *)IDFromString); // Will hash on its own\n</code></pre>"},{"location":"xc1de/tables/bdat_common/#ene_arts","title":"ene_arts","text":"<p>Human Readable Name: Enemy Arts</p> <p><code>MsTextId</code> linked to <code>ene_arts_ms</code>.</p> <p>Represents all enemy arts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized art name. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>cast</code> <code>uint8</code> Time to cast. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>recast</code> <code>uint8</code> Cast cooldown (if applicable). <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>tp</code> <code>int8</code> Talent Gauge % used. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>dex</code> <code>int8</code> Dexterity/Accuracy. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>rate1</code> <code>uint16</code> Power Min. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>rate2</code> <code>uint16</code> Power Max. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>arts_type</code> <code>uint8</code> Art Type. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>lv</code> <code>uint8</code> Level. Mainly affects arts that afflict statuses or causes Visions. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>atk_type</code> <code>uint8</code> Attack Type. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>elem</code> <code>uint8</code> Element. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>dmg_time</code> <code>uint8</code> Number of Attacks. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>tgt</code> <code>uint8</code> Target type. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>range_type</code> <code>uint8</code> Range type. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>range</code> <code>uint16</code> Range (in centimeters). <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>range_val</code> <code>uint16</code> Range Radius/Width (depending on type). <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>flag</code> <code>uint32</code> Flags tied to the art. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>st_type</code> <code>uint8</code> State/Buff/Effect to apply. No more than 0x132. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>st_val</code> <code>uint8</code> Value 1 for the state. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>st_val2</code> <code>uint8</code> Value 2 for the state. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>st_time</code> <code>uint16</code> Duration. Divide by 100 for seconds. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>st_itv</code> <code>uint8</code> State - Number of ticks per activation. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>sp_cnd</code> <code>uint8</code> State condition. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>sp_proc</code> <code>uint8</code> Bonus effect? <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>sp_val1</code> <code>uint16</code> Bonus effect value 1. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>sp_val2</code> <code>uint16</code> Bonus effect value 2. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>kb_type</code> <code>uint8</code> Knockback Type. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>kb_lv</code> <code>uint8</code> Knockback level, above 2 = Daze. Up to 6. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>act_idx</code> <code>uint8</code> Action index. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>idx</code> <code>uint8</code> Index. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>arts_type</code> <ul> <li>0 = Normal</li> <li>1 = Special/Talent (has specific handlers - cannot be upgraded)</li> <li>2 = Unknown</li> <li>3 = Topple</li> <li>4 = Daze</li> <li>5 = Knockback</li> <li>6 = Blowdown</li> <li>7 = Debuff</li> <li>8 = Buff</li> <li>9 = Heal</li> <li>10 = Cleanse</li> </ul> <code>atk_type</code> <ul> <li>1 = \"Physix\"/Physical</li> <li>2 = Ether</li> <li>3 = Status</li> <li>4 = Summon</li> <li>6 = Discharge</li> </ul> <code>elem</code> aka <code>game::DataAttack::ElementType</code> <ul> <li>0 = None</li> <li>1 = Normal</li> <li>2 = Slash</li> <li>4 = Fire</li> <li>5 = Water</li> <li>6 = Electric</li> <li>7 = Ice</li> <li>8 = Wind</li> <li>9 = Earth</li> </ul> <code>tgt</code> aka <code>game::DataAttack::TargetType</code> <ul> <li>0 = Enemy</li> <li>1 = Self</li> <li>2 = Self/Allies</li> <li>3 = Allies only</li> </ul> <code>range_type</code> aka <code>game::DataAttack::RangeType</code> <ul> <li>0 = Single Target</li> <li>1 = Cone (ahead)</li> <li>2 = Cone (behind)</li> <li>4 = Circle (self)</li> <li>5 = Line</li> <li>6 = Circle (target)</li> <li>7 = All </li> </ul> <code>flag</code> <ul> <li>0x01 - 1 &lt;&lt; 0 = Anti-Mechon</li> <li>0x02 - 1 &lt;&lt; 1 = Anti-Mechon 2?</li> <li>0x04 - 1 &lt;&lt; 2 = Anti-Air/Monado</li> <li>0x400 - 1 &lt;&lt; 10 - Status Effect applies on self</li> <li>0x800 - 1 &lt;&lt; 11 - Bonus Status Effect applies on self</li> <li>0x1000 - 1 &lt;&lt; 12 = Forced Vision</li> <li>0x2000 - 1 &lt;&lt; 13 = Effect/knockback applies only on the last hit</li> <li>0x4000 - 1 &lt;&lt; 14 = Unknown</li> <li>0x10000 - 1 &lt;&lt; 16 = Vision can be interrupted by interposed terrain (i.e Mechonis Field boss)</li> <li>0x4000000 - 1 &lt;&lt; 26 = Unknown</li> <li>0x8000000 - 1 &lt;&lt; 27 = Unknown</li> </ul> <code>sp_cnd</code> <ul> <li>0 = Always</li> <li>2 = From side</li> <li>3 = From behind</li> <li>4 = In combo</li> <li>5 = On toppled</li> <li>6 = On dazed</li> <li>8 = Killing blow</li> <li>9 = On Mechon</li> <li>15 = In blizzard</li> <li>25 = On Mechon side</li> </ul> <code>kb_type</code> <ul> <li>0 = None</li> <li>1 = Pushback</li> <li>2 = Blowdown.</li> </ul> Knockback power per level <p>As per <code>game::DataAttack::getKBPower</code></p> <ul> <li>6.5</li> <li>8.0</li> <li>10.0</li> <li>12.5</li> <li>15.0</li> <li>0.0</li> </ul> Knockback blow power per level <p>As per <code>game::DataAttack::getBlowPower</code></p> <ul> <li>3.0</li> <li>4.0</li> <li>5.5</li> <li>7.0</li> <li>8.5</li> <li>10.0</li> </ul> Knockback blow upper per level <p>As per <code>game::DataAttack::getBlowUpper</code></p> <ul> <li>1.0</li> <li>1.2</li> <li>1.5</li> <li>1.8</li> <li>2.1</li> <li>2.4</li> </ul> Knockback blow daze seconds per level <p>As per <code>game::DataAttack::getBlowFaint</code></p> <ul> <li>0.0</li> <li>0.0</li> <li>3.0</li> <li>5.0</li> <li>10.0</li> <li>15.0</li> </ul> <p>// game::EffUtil::getStatusEffectToCndEffId</p> <p>// wpnlist-&gt;flag</p>"},{"location":"xc1de/tables/bdat_common/#ene_atk","title":"ene_atk","text":"<p>Represents enemy auto-attacks.</p> Column Type Description Handled by <code>name</code> <code>string</code> Name (debug). <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>dex</code> <code>int8</code> Dexterity/Accuracy. <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>rate</code> <code>uint16</code> Power. <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>atk_type</code> <code>uint8</code> Attack Type. <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>elem</code> <code>uint8</code> Element. <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>flag</code> <code>uint32</code> Flags tied to the art. <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>st_type</code> <code>uint8</code> State/Buff/Effect to apply. No more than 0x132. <code>game::DataAttack::setupMapEnemyArtsAttack</code> <code>st_val</code> <code>uint8</code> Value for the state. <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>range_type</code> <code>uint8</code> Range type. <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>range</code> <code>uint16</code> Range (in centimeters). <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>range_val</code> <code>uint16</code> Range Radius/Width (depending on type). <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>act_idx</code> <code>uint8</code> Action index. <code>game::DataAttack::setupMapEnemyAutoAttack</code> <code>idx</code> <code>uint8</code> Index. <code>game::DataAttack::setupMapEnemyAutoAttack</code>"},{"location":"xc1de/tables/bdat_common/#landmarklist","title":"landmarklist","text":"<p>List of all the landmarks in the game.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized landmark name. <code>game::MenuGameDataMap::getLandmarkNameText</code> <code>category</code> <code>uint8</code> 0 = Landmark, 1 = Secret Area, 2 = Location <code>game::GimmickLandmark::initialize</code> <code>mapID</code> <code>uint16</code> Map ID. Too many. <code>S_FLG_MIN1</code> <code>uint16</code> Minimum scenario flag for access. <code>game::MenuGameDataMap::getLandmarkLockReason</code> <code>S_FLG_MAX1</code> <code>uint16</code> Maximum scenario flag for access. <code>game::MenuGameDataMap::getLandmarkLockReason</code> <code>posX</code> <code>int16</code> X position on the map. <code>game::GimmickLandmark::initialize</code> <code>posY</code> <code>int16</code> X position on the map. <code>game::GimmickLandmark::initialize</code> <code>posZ</code> <code>int16</code> X position on the map. <code>game::GimmickLandmark::initialize</code> <code>areaR</code> <code>Uint16</code> Area radius. <code>game::GimmickLandmark::initialize</code> <code>areaY</code> <code>Uint16</code> Area Y. <code>game::GimmickLandmark::initialize</code> <code>areaZ</code> <code>Uint16</code> Area Z. <code>game::GimmickLandmark::initialize</code> <code>rotY</code> <code>Uint16</code> Rotation Y. <code>game::GimmickLandmark::initialize</code> <code>getEXP</code> <code>uint16</code> Discovery EXP reward. <code>game::DataUtil::addExpApSpForLandmark</code> <code>getAP</code> <code>uint16</code> Discovery AP reward. <code>game::DataUtil::addExpApSpForLandmark</code> <code>getPP</code> <code>uint16</code> Discovery PP reward. <code>game::DataUtil::addExpApSpForLandmark</code> <code>jump_posX</code> <code>int16</code> X position when teleporting to the landmark. <code>game::SeqMapJump::onInitialize</code> <code>jump_posY</code> <code>int16</code> Y position when teleporting to the landmark. <code>game::SeqMapJump::onInitialize</code> <code>jump_posZ</code> <code>int16</code> Z position when teleporting to the landmark. <code>game::SeqMapJump::onInitialize</code> <code>UI_posX</code> <code>int8</code> X position on the UI. <code>game::MenuPartsAreaMapTopView::setMapFloorId</code> <code>UI_posY</code> <code>int8</code> Y position on the UI. <code>game::MenuPartsAreaMapTopView::setMapFloorId</code>"},{"location":"xc1de/tables/bdat_common/#mnuxxx_contxx_txt","title":"mnuXXX_contXX_txt","text":"<p>Each file is referenced from MNU_TextLink_Mstxt.</p> <p>Bdat loaded from <code>game::UILayerBuilderDefGrp::UILayerBuilderDefGrp</code> ctor.</p> <p>Otherwise unknown. Seems to be used to set up some assets for certain menu layer groups.</p> Column Type Description Handled by <code>rect_path</code> <code>uint8</code> Material Number. Unknown. <code>game::UILayerBuilderDefGrp::buildUILayerRecursiveGroup</code> <code>text_file</code> <code>uint8</code> No more than 0x22. <code>game::UILayerBuilderDefGrp::buildUILayerRecursiveGroup</code> <code>text_id</code> <code>uint8</code> % in player damage when field damage triggers. <code>game::UILayerBuilderDefGrp::buildUILayerRecursiveGroup</code> <code>default_text</code> <code>string</code> Default text. <code>game::UILayerBuilderDefGrp::buildUILayerRecursiveGroup</code>"},{"location":"xc1de/tables/bdat_common/#map-specific","title":"Map Specific","text":"<p>Bdat mapping</p> <p>Each file takes two numbers:</p> <ul> <li><code>%02d</code> - \"Chapter\" - uint16 - from <code>game::DataUtil::getChapterFromMapId</code><ul> <li><code>game::DataUtil::getChapterFromMapId</code> takes FLD_maplist-&gt;resource using map id, returns 3rd and 4th digit</li> </ul> </li> <li><code>%02d</code> - \"Location\" - uint16 - from <code>game::DataUtil::getLocationFromMapId</code><ul> <li><code>game::DataUtil::getLocationFromMapId</code> takes FLD_maplist-&gt;resource using map id, returns 5th and 6th digit</li> </ul> </li> </ul>"},{"location":"xc1de/tables/bdat_common/#mapobjfilesys-mapobjfilenum","title":"mapobjfileSys / mapobjfile|num|","text":"<p>Human Readable Name: Map Object Files</p> <p>Represents objects/areas to be loaded for the map.</p> Column Type Description Handled by <code>resource</code> <code>string</code> File to be loaded from <code>chr/obj/</code>. <code>game::ResMobjBinder::bind</code> <code>flag</code> <code>uint16</code> Whether to load a character file. <code>game::ResMobjBinder::bind</code> <p>Note</p> <p>Table accessor functions: <code>game::MenuObj::createObjImpl</code>, <code>game::ObjFactory::createTreasureBoxMobj</code></p>"},{"location":"xc1de/tables/bdat_common/#minimaplistnum","title":"minimaplist|num|","text":"<p>Human Readable Name: Minimap File List (per map)</p> <p><code>MsTextId</code> linked to <code>mapobjlist|num|_ms</code>.</p> <p>Represents minimap files to load per map.</p> Column Type Description Handled by <code>height</code> <code>int16</code> Display height. <code>game::MenuMinimapInfo::getInFloor</code> &amp; more <code>file</code> <code>uint16</code> File. <code>mapimg</code> <code>uint16</code> Default image. SYS_filelist ID. <code>game::BdatMnuMinimapList::mapimg</code> <code>floorname</code> <code>MsTextId</code> Localized floor name. <code>game::impl::MenuPartsAreaMapDetailFloorListItem::setFloorId</code> <code>sflag</code> <code>uint16</code> Min Scenario flag condition for unlock. <code>game::MenuGameDataMap::getMapFloorImageName</code> <code>qflag1</code> <code>uint16</code> Quest condition for unlock. <code>game::MenuGameDataMap::getMapFloorImageName</code> <code>val1</code> <code>string</code> Quest's state condition for unlock. <code>game::MenuGameDataMap::getMapFloorImageName</code> <code>flag</code> <code>uint16</code> Whether to load a character file. <code>game::ResMobjBinder::bind</code> <code>mapimg1</code> <code>uint16</code> Used depending on scenario status. SYS_filelist ID. <code>game::BdatMnuMinimapList::mapimg1</code> <code>mapimg2</code> <code>uint16</code> Used depending on scenario &amp; quest status. SYS_filelist ID. <code>game::BdatMnuMinimapList::mapimg2</code>"},{"location":"xc1de/tables/bdat_common/#mapobjlistsys","title":"mapobjlistSys","text":"<p>Human Readable Name: Map Object List (System)</p> <p>Parameters for mapobjfileSys.</p> <p>Note</p> <p>Table accessor functions: <code>game::GimmickMapSE::execSetup</code></p>"},{"location":"xc1de/tables/bdat_common/#field","title":"Field","text":""},{"location":"xc1de/tables/bdat_common/#fld_dmobjlist","title":"FLD_dmobjlist","text":"<p>Human Readable Name: Field - Damage Object List</p> <p>Represents objects/areas on the map field that hurt/damage the player.</p> Column Type Description Handled by <code>matno</code> <code>uint8</code> Material Number. Unknown. <code>game::StateUtil::procDmgField</code> <code>interval</code> <code>uint8</code> Interval in seconds which field damage will occur. <code>game::StateUtil::procDmgField</code> <code>dmg</code> <code>uint8</code> % in player damage when field damage triggers. <code>game::StateUtil::procDmgField</code> <code>map</code> <code>uint16</code> Map ID Number (+ sector). Divide by 100 for actual map id. <code>game::StateUtil::procDmgField</code>"},{"location":"xc1de/tables/bdat_common/#fld_effparam","title":"FLD_effparam","text":"<p>Human Readable Name: Field - Effect Parameters</p> <p>Represents effects on a certain map during certain times of the day. Relevant game object: <code>fw::EffectManager::XefbParam</code></p> Column Type Description Handled by <code>map</code> <code>string</code> Map ID. <code>game::BehaviorMap::getEffParams</code> <code>daytime_A</code> <code>uint16</code> Daytime Effect Preset ID A. <code>game::BehaviorMap::getEffParams</code> <code>daytime_B</code> <code>uint16</code> Daytime Effect Preset ID B. <code>game::BehaviorMap::getEffParams</code> <code>daytime_C</code> <code>uint16</code> Daytime Effect Preset ID C. <code>game::BehaviorMap::getEffParams</code> <code>evening_A</code> <code>uint16</code> Evening Effect Preset ID A. <code>game::BehaviorMap::getEffParams</code> <code>evening_B</code> <code>uint16</code> Evening Effect Preset ID B. <code>game::BehaviorMap::getEffParams</code> <code>evening_C</code> <code>uint16</code> Evening Effect Preset ID C. <code>game::BehaviorMap::getEffParams</code> <code>night_A</code> <code>uint16</code> Night Effect Preset ID A. <code>game::BehaviorMap::getEffParams</code> <code>night_B</code> <code>uint16</code> Night Effect Preset ID B. <code>game::BehaviorMap::getEffParams</code> <code>night_C</code> <code>uint16</code> Night Effect Preset ID C. <code>game::BehaviorMap::getEffParams</code> <code>d_room</code> <code>float</code> Daytime \"room\" effect value. <code>game::BehaviorMap::getEffParams</code> <code>e_room</code> <code>float</code> Evening \"room\" effect value. <code>game::BehaviorMap::getEffParams</code> <code>n_room</code> <code>float</code> Night \"room\" effect value. <code>game::BehaviorMap::getEffParams</code> <code>cl_room</code> <code>float</code> Room effect chroma <code>game::BehaviorMap::getEffParams</code>"},{"location":"xc1de/tables/bdat_common/#fld_effpriset","title":"FLD_effpriset","text":"<p>Human Readable Name: Field - Effect Parameter Preset</p> <p>Represents effect presets (used by FLD_effparam). Relevant game object: <code>fw::EffectManager::XefbParam</code></p> <p>Note</p> <p>Similar values in <code>eff/effset.ini</code>.</p> Column Type Description Handled by <code>add</code> <code>float</code> Effect addition. <code>game::BehaviorMap::getEffParams</code> <code>sub</code> <code>float</code> Effect subtraction. <code>game::BehaviorMap::getEffParams</code> <code>blm</code> <code>float</code> Bloom. <code>game::BehaviorMap::getEffParams</code> <code>blmhold</code> <code>float</code> Bloom Hold. <code>game::BehaviorMap::getEffParams</code> <code>amb</code> <code>float</code> Ambient. <code>game::BehaviorMap::getEffParams</code> <code>dir</code> <code>float</code> Unknown. <code>game::BehaviorMap::getEffParams</code> <code>amdir</code> <code>float</code> Ambient Direction. <code>game::BehaviorMap::getEffParams</code> <code>ambcl</code> <code>float</code> Ambient Chroma. <code>game::BehaviorMap::getEffParams</code> <code>dircl</code> <code>float</code> \"dir\" Chroma. <code>game::BehaviorMap::getEffParams</code> <code>addcurve</code> <code>float</code> Add Curve. <code>game::BehaviorMap::getEffParams</code>"},{"location":"xc1de/tables/bdat_common/#fld_lndchglist","title":"FLD_Lndchglist","text":"<p>Human Readable Name: Field - Landmark Change List</p> <p>Represents NPCs tied to landmarks.</p> Column Type Description Handled by <code>npc_id</code> <code>uint16</code> NPC ID. <code>game::BdatFldLndchglist::getLndIdFromNpcId</code> <code>lnd_id</code> <code>uint16</code> Landmark ID. <code>game::BdatFldLndchglist::getLndIdFromNpcId</code>"},{"location":"xc1de/tables/bdat_common/#fld_npclist","title":"FLD_npclist","text":"<p>Human Readable Name: Field - NPC List</p> <p>Master table for all the npcs in the game.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized Name of the NPC. <code>game::BdatFldNpclist::getName</code> &amp; more <code>mob_name</code> <code>uint16</code> Mob Name ID. Used for generic NPCs. <code>game::SeqScriptEvent::onSubtitle</code> &amp; more <code>resource</code> <code>uint16</code> Resource ID. <code>game::SeqScriptEvent::onSubtitle</code> &amp; more <code>rlt_meet</code> <code>uint16</code> NPC Meet ID - Used to determine whether this NPC was previously met. <code>game::DataUtil::getNpcMeetIdByNpcID</code> &amp; more <code>remove</code> <code>uint8</code> Unknown. Possibly unused. <code>shop_list</code> <code>uint8</code> Shop List for this NPC, if any. <code>icon_type</code> <code>uint8</code> Icon Type. <code>game::NpcControl::NpcControl</code>, <code>game::BehaviorNpc::canDecideEvent</code> <code>rlt_face</code> <code>uint8</code> Face name, used for npc relate/affinity chart. Links to JNL_relatelist. Must 3 in length. <code>game::MenuPartsKizunagramWorldView::getFaceIndexFromFaceName</code> <code>rlt_posX</code> <code>int16</code> X Position on the relate/affinity chart. <code>game::MenuPartsKizunagramWorldView::addRelateMarker</code> &amp; more <code>rlt_posY</code> <code>int16</code> Y Position on the relate/affinity chart. <code>game::MenuPartsKizunagramWorldView::addRelateMarker</code> &amp; more <code>rlt_texture</code> <code>uint16</code> Texture for the relate/affinity chart. Links to SYS_filelist &amp; SYS_filelist_ex <code>game::MenuGameDataNpc::getFaceIconIndex</code> <code>rlt_lnd</code> <code>uint16</code> Landmark ID for the relate/affinity chart. <code>game::MenuItemIdExchangeListEnumerable::create</code> &amp; more <code>rlt_sex</code> <code>uint16</code> Sex type of the NPC for the relate/affinity chart. <code>range_s</code> <code>uint8</code> Hour range start in which this NPC appears. <code>game::MenuPartsKizunagramNpcProfile::setupNpcProfileFromNpcId</code> <code>range_e</code> <code>uint8</code> Hour range end after which NPC disspears. <code>game::MenuPartsKizunagramNpcProfile::setupNpcProfileFromNpcId</code> <code>rlt_job</code> <code>MsTextId</code> Localized job name for the relate/affinity chart. <code>game::MenuPartsKizunagramNpcProfile::setupNpcProfileFromNpcId</code> <code>size</code> <code>uint8</code> Unknown. Possibly unused. <code>scale</code> <code>uint8</code> Unknown. Possibly unused. <code>family</code> <code>uint8</code> Unknown. Possibly unused. <code>move_speed</code> <code>uint8</code> Move speed of the NPC in kph. <code>autotalk1</code> <code>uint8</code> ID of autotalk list #1. <code>game::BdatFldNpclist::autotalk1</code> &amp; <code>game::GimmickNpc::updateAutoTalkCondition</code> <code>autotalk2</code> <code>uint8</code> ID of autotalk list #2. <code>game::BdatFldNpclist::autotalk2</code> &amp; <code>game::GimmickNpc::updateAutoTalkCondition</code> <code>autotalk3</code> <code>uint8</code> ID of autotalk list #3. <code>game::BdatFldNpclist::autotalk3</code> &amp; <code>game::GimmickNpc::updateAutoTalkCondition</code> <code>autotalk4</code> <code>uint8</code> ID of autotalk list #4. <code>game::BdatFldNpclist::autotalk4</code> &amp; <code>game::GimmickNpc::updateAutoTalkCondition</code> <code>autotalk5</code> <code>uint8</code> ID of autotalk list #5. <code>game::BdatFldNpclist::autotalk5</code> &amp; <code>game::GimmickNpc::updateAutoTalkCondition</code> <code>autotalk6</code> <code>uint8</code> ID of autotalk list #6. <code>game::BdatFldNpclist::autotalk6</code> &amp; <code>game::GimmickNpc::updateAutoTalkCondition</code> <code>exc_talk_id</code> <code>uint8</code> Localized text when trading with a NPC. Points to extalklist <code>game::BehaviorNpc::setupForLoaded</code> <code>exc_id1</code> <code>uint8</code> Item trading/exchange list when reputation is level 1. <code>game::MenuItemIdExchangeListEnumerable::create</code> <code>exc_id2</code> <code>uint8</code> Item trading/exchange list when reputation is level 2. <code>game::MenuItemIdExchangeListEnumerable::create</code> <code>exc_id3</code> <code>uint8</code> Item trading/exchange list when reputation is level 3. <code>game::MenuItemIdExchangeListEnumerable::create</code> <code>exc_id4</code> <code>uint8</code> Item trading/exchange list when reputation is level 4. <code>game::MenuItemIdExchangeListEnumerable::create</code> <code>exc_id5</code> <code>uint8</code> Item trading/exchange list when reputation is level 5. <code>game::MenuItemIdExchangeListEnumerable::create</code>"},{"location":"xc1de/tables/bdat_common/#fld_maplist","title":"FLD_maplist","text":"<p>Human Readable Name: Field - Map List</p> <p>Master table for all the maps in the game.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Name of the map. <code>id_name</code> <code>string</code> Internal id of the map. <code>resource</code> <code>string</code> Resource name. Used for getting the files associated to this map i.e <code>menu/minimap/...</code> or <code>map/...</code>. <code>ene_disp_r</code> <code>uint8</code> Unknown % chance for enemy spawning. <code>ene_release_r</code> <code>uint8</code> Unknown % chance for enemy spawning. <code>ene_release_h</code> <code>uint8</code> Unknown % chance for enemy spawning. <code>npc_release_r</code> <code>uint8</code> Unused. <code>bg_image</code> <code>MsTextId</code> Background image name for this map for menus, unused in XB1DE. <code>map_sflag</code> <code>uint16</code> Scenario flags. Used to determine whether the map is unlocked depending on the current save scenario flags. <code>game::MenuGameDataMapIdEnumerable::isUnlockedMap</code> <code>map_fileID</code> <code>uint16</code> SYS_filelist ID. Responsible for the preview image in the 'Area Map' menu. <code>game::MenuGameDataMap::getMapCaptureImageFileName</code> <code>map_caption</code> <code>MsTextId</code> Localized caption for the map in the 'Area Map' menu. <code>game::MenuGameDataMap::getMapDescText</code> <code>minimap_rate</code> <code>uint8</code> Full map view scale. <code>minimap_origin</code> <code>uint16</code> Origin position of the map. Appears unused in XC1DE. <code>minimap_painx</code> <code>uint16</code> Unknown. Appears unused in XC1DE. <code>minimap_painy</code> <code>uint16</code> Unknown. Appears unused in XC1DE. <code>minimap_x</code> <code>uint16</code> Unknown. Appears unused in XC1DE. <code>minimap_y</code> <code>uint16</code> Unknown. Appears unused in XC1DE. <code>morning_h</code> <code>uint8</code> Hour of the day which is considered morning. <code>game::Clock::update</code> <code>morning_m</code> <code>uint8</code> Minute of the day which is considered morning. <code>game::Clock::update</code> <code>daytime_h</code> <code>uint8</code> Hour of the day which is considered daytime. <code>game::Clock::update</code> <code>daytime_m</code> <code>uint8</code> Minute of the day which is considered daytime. <code>game::Clock::update</code> <code>evening_h</code> <code>uint8</code> Hour of the day which is considered evening. <code>game::Clock::update</code> <code>evening_m</code> <code>uint8</code> Minute of the day which is considered evening. <code>game::Clock::update</code> <code>night_h</code> <code>uint8</code> Hour of the day which is considered night. <code>game::Clock::update</code> <code>night_m</code> <code>uint8</code> Minute of the day which is considered night. <code>game::Clock::update</code> <code>index</code> <code>uint8</code> Display index in the 'Area Map'. The list is sorted using this. <code>wa_type</code> <code>uint8</code> Data A. Weather type. <code>game::Weather::initAreaDataA</code> <code>wa_pop_rate</code> <code>uint8</code> Data A. Chance in % for this weather to start. <code>game::Weather::initAreaDataA</code> <code>wa_end_time</code> <code>uint8</code> Data A. Time before the weather ends. <code>game::Weather::initAreaDataA</code> <code>wa_time</code> <code>int16</code> Data A. Unknown flags. <code>game::Weather::initAreaDataA</code> <code>wa_size_X</code> <code>int16</code> Data A. Unknown. <code>game::Weather::initAreaDataA</code> <code>wa_size_Y</code> <code>int16</code> Data A. Unknown. <code>game::Weather::initAreaDataA</code> <code>wa_size_Z</code> <code>int16</code> Data A. Unknown. <code>game::Weather::initAreaDataA</code> <code>wa_radius</code> <code>int16</code> Data A. Unknown. <code>game::Weather::initAreaDataA</code> <code>wb_type</code> <code>uint8</code> Data B. Weather type. <code>game::Weather::initAreaDataB</code> <code>wb_pop_rate</code> <code>uint8</code> Data B. Chance in % for this weather to start. <code>game::Weather::initAreaDataB</code> <code>wb_end_time</code> <code>uint8</code> Data B. Time before the weather ends. <code>game::Weather::initAreaDataB</code> <code>wb_time</code> <code>int16</code> Data B. Unknown flags. <code>game::Weather::initAreaDataB</code> <code>wb_size_X</code> <code>int16</code> Data B. Unknown. <code>game::Weather::initAreaDataB</code> <code>wb_size_Y</code> <code>int16</code> Data B. Unknown. <code>game::Weather::initAreaDataB</code> <code>wb_size_Z</code> <code>int16</code> Data B. Unknown. <code>game::Weather::initAreaDataB</code> <code>wb_radius</code> <code>int16</code> Data B. Unknown. <code>game::Weather::initAreaDataB</code> <code>e_repoptime</code> <code>uint8</code> Time before enemy respawns in seconds. <code>game::GimmickEnemyUpdater::setupRepop</code> <code>wind_M</code> <code>uint8</code> Wind during morning. <code>game::Weather::updateWeatherData</code> <code>wind_D</code> <code>uint8</code> Wind during daytime. <code>game::Weather::updateWeatherData</code> <code>wind_E</code> <code>uint8</code> Wind during evening. <code>game::Weather::updateWeatherData</code> <code>wind_N</code> <code>uint8</code> Wind during night. <code>game::Weather::updateWeatherData</code> <code>wind_WA</code> <code>uint8</code> Wind during weather A. <code>game::Weather::initAreaDataA</code> <code>wind_WB</code> <code>uint8</code> Wind during weather B. <code>game::Weather::initAreaDataB</code> <code>a_S_FLG_MIN</code> <code>uint16</code> Scenario flag min condition for weather A. <code>game::Weather::initAreaDataA</code> <code>a_S_FLG_MAX</code> <code>uint16</code> Scenario flag max condition for weather A. <code>game::Weather::initAreaDataA</code> <code>b_S_FLG_MIN</code> <code>uint16</code> Scenario flag max condition for weather B. <code>game::Weather::initAreaDataB</code> <code>b_S_FLG_MAX</code> <code>uint16</code> Scenario flag max condition for weather B. <code>game::Weather::initAreaDataB</code> <code>mapATR</code> <code>uint8</code> Unknown bit flags. Data A uses flag 0x04 while B uses 0x10. <code>game::Weather::updateWeatherData</code> <code>minimaplt_x</code> <code>int16</code> Unknown. <code>game::MenuPartsAreaMapTopView::MenuPartsAreaMapTopView</code> &amp; more <code>minimaplt_z</code> <code>int16</code> Unknown. <code>game::MenuPartsAreaMapTopView::MenuPartsAreaMapTopView</code> &amp; more <code>minimaprb_x</code> <code>int16</code> Unknown. <code>game::MenuPartsAreaMapTopView::MenuPartsAreaMapTopView</code> <code>minimaprb_z</code> <code>int16</code> Unknown. <code>game::MenuPartsAreaMapTopView::MenuPartsAreaMapTopView</code> <code>mapimagesize_x</code> <code>uint16</code> Unknown. Appears unused in XC1DE. <code>mapimagesize_y</code> <code>uint16</code> Unknown. Appears unused in XC1DE. <code>minimap_cnt</code> <code>uint8</code> Number of floors in this map. Appears unused in XC1DE. <p>Note</p> <p>Many future connected checks are done through checking the id being above or equal 25.</p>"},{"location":"xc1de/tables/bdat_common/#fld_pointlist","title":"FLD_pointlist","text":"<p>Human Readable Name: Field - Point List</p> <p><code>MsTextId</code> linked to <code>FLD_pointlist_ms</code>.</p> <p>List of all the triggers on the map fields. Heart to Hearts, crystals &amp; everything else interactable.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Name of the trigger point. <code>game::TriggerControl::createAsPoint</code>, <code>game::SeqField::checkEnableKizunaTalkPoint</code> <code>icon_type</code> <code>uint8</code> Display icon type. Up to 0x15, every type has a different priority."},{"location":"xc1de/tables/bdat_common/#fld_tboxlist","title":"FLD_tboxlist","text":"<p>Human Readable Name: Field - Treasure Box List</p> <p>List of all the non-dropped treasure \"boxes\"/chests on the map fields.</p> Column Type Description Handled by <code>gimID</code> <code>uint16</code> Gimmick ID. <code>game::GimmickTrigger::openTreasureBox</code> <code>itm1ID</code> <code>uint16</code> 1st Item in the treasure box. <code>game::SeqTreasureBox::onEnter</code> <code>itm2ID</code> <code>uint16</code> 2nd Item in the treasure box. <code>game::SeqTreasureBox::onEnter</code> <code>itm3ID</code> <code>uint16</code> 3rd Item in the treasure box. <code>game::SeqTreasureBox::onEnter</code> <code>itm4ID</code> <code>uint16</code> 4th Item in the treasure box. <code>game::SeqTreasureBox::onEnter</code>"},{"location":"xc1de/tables/bdat_common/#fld_valpoplist","title":"FLD_valpoplist","text":"<p>Human Readable Name: Field - Valuable Item Pop List</p> <p>List of all the important \"red\" bulb items on the map fields.</p> Column Type Description Handled by <code>mapID</code> <code>uint8</code> Map ID. <code>game::GimmickMapItem::setupValuable</code> <code>SFLG_MIN</code> <code>uint16</code> Scenario flag min condition to appear. <code>game::GimmickMapItem::setupValuable</code> <code>SFLG_MAX</code> <code>uint16</code> Scenario flag max condition to appear. <code>game::GimmickMapItem::setupValuable</code> <code>questID</code> <code>uint16</code> Quest ID <code>game::GimmickMapItem::setupValuable</code> <code>quest_STFLG</code> <code>uint8</code> Unknown quest flags. <code>game::GimmickMapItem::setupValuable</code> <code>popTime</code> <code>uint8</code> Time to spawn. <code>game::GimmickMapItem::setupValuable</code> <code>wtrType</code> <code>uint8</code> Required weather to spawn. <code>game::GimmickMapItem::setupValuable</code> <code>posX</code> <code>int16</code> Position X on the map field. <code>game::GimmickMapItem::setupValuable</code> <code>posY</code> <code>int16</code> Position Y on the map field. <code>game::GimmickMapItem::setupValuable</code> <code>posZ</code> <code>int16</code> Position Z on the map field. <code>game::GimmickMapItem::setupValuable</code> <code>Radius</code> <code>uint16</code> Item collision radius. <code>game::GimmickMapItem::setupValuable</code> <code>snap</code> <code>uint8</code> Whether the item snaps. <code>game::GimmickMapItem::setupValuable</code> <code>popNum</code> <code>uint8</code> Number of items. <code>game::GimmickMapItem::setupValuable</code> <code>itm1ID</code> <code>uint16</code> Actual Item ID. <code>game::GimmickMapItem::setupValuable</code>"},{"location":"xc1de/tables/bdat_common/#file-resources","title":"File Resources","text":""},{"location":"xc1de/tables/bdat_common/#kp_list","title":"KP_list","text":"<p>Human Readable Name: KP (Unknown) List</p> <p>List of resource groups.</p> Column Type Description Handled by <code>model</code> <code>string</code> Model File Name. Maps to <code>chr/</code> where the first two letters is a sub-dir. <code>game::NpcControl::initialize</code>, <code>game::ResNpcBinder::bind</code>, <code>game::BehaviorNpc::setupForLoaded</code> &amp; more <code>motion</code> <code>string</code> Motion File Name. Maps to <code>chr/obj/</code>. <code>game::ResMobjBinder::bind</code> <code>action</code> <code>string</code> Action File Name. Maps to <code>chr/obj/</code>. <code>game::ResMobjBinder::bind</code> <code>effect</code> <code>string</code> Effect File Name. Maps to <code>eff/</code> where the first two letters is a sub-dir. <code>game::ResMobjBinder::bind</code> <code>sound</code> <code>string</code> Sound File Name. Will be hashed, see note below <code>game::SoundUtil::playEnemySE</code>, <code>game::SoundUtil::playNpcVoice</code>, <code>game::SoundUtil::playNoponArchsageVoice</code>, <code>game::VoiceManager::playVoice</code> <p>Hashing</p> <pre><code>// fw::SoundManager::playVoiceNpc - 0x7100066460 - 1.1.2\nmm::mtl::FixStr&lt;32&gt;::format(str, \"%s_SE_%03d\", sound_file_name, unk); \nmm::mtl::FixStr&lt;256&gt;::format(final_str, \"%s_%lu\", str, this-&gt;LastID);\nint id = AK::SoundEngine::GetIDFromString(final_str); // Audiokinetic Wwise\n// this-&gt;LastID++\n</code></pre>"},{"location":"xc1de/tables/bdat_common/#battle","title":"Battle","text":""},{"location":"xc1de/tables/bdat_common/#btl_gimmickbossrescue","title":"BTL_GimmickBossRescue","text":"<p>Human Readable Name: Battle - Gimmick Boss Rescue</p> <p><code>MsTextId</code> linked to <code>BTL_GimmickBossRescue_ms</code>.</p> <p>Used to display tutorial messages &amp; provide boss help.</p> Column Type Description Handled by <code>eneID</code> <code>uint16</code> Battle Enemy ID. <code>game::BossRescueManager::setData</code> <code>S_FLG_MIN</code> <code>uint16</code> Minimum scenario. <code>game::BossRescueManager::setData</code> <code>S_FLG_MAX</code> <code>uint16</code> Maximum scenario. <code>game::BossRescueManager::setData</code> <code>popTime</code> <code>uint16</code> Time before displaying. <code>game::BossRescueManager::setData</code> <code>listTime</code> <code>uint16</code> Unknown. <code>game::BossRescueManager::setData</code> <code>listID1</code> <code>uint16</code> Tutorial ID 1. <code>game::BossRescueManager::setData</code> <code>listID2</code> <code>uint16</code> Tutorial ID 2. <code>game::BossRescueManager::setData</code> <code>listID3</code> <code>uint16</code> Tutorial ID 3. <code>game::BossRescueManager::setData</code> <code>listID4</code> <code>uint16</code> Tutorial ID 4. <code>game::BossRescueManager::setData</code> <code>listID5</code> <code>uint16</code> Tutorial ID 5. <code>game::BossRescueManager::setData</code> <code>listID6</code> <code>uint16</code> Tutorial ID 6. <code>game::BossRescueManager::setData</code> <code>listID7</code> <code>uint16</code> Tutorial ID 7. <code>game::BossRescueManager::setData</code> <code>listID8</code> <code>uint16</code> Tutorial ID 8. <code>game::BossRescueManager::setData</code> <code>rescueType1</code> <code>uint8</code> Rescue Type 1. <code>game::BossRescueManager::setData</code> <code>rescueType2</code> <code>uint8</code> Rescue Type 2. <code>game::BossRescueManager::setData</code> <code>rescueType3</code> <code>uint8</code> Rescue Type 3. <code>game::BossRescueManager::setData</code> <code>rescueType4</code> <code>uint8</code> Rescue Type 4. <code>game::BossRescueManager::setData</code> <code>resTextID</code> <code>MsTextId</code> Localized prompt text. <code>resTextSel01ID</code> <code>MsTextId</code> Localized prompt selection option 1. <code>resTextSel02ID</code> <code>MsTextId</code> Localized prompt selection option 2. <p><code>rescue_type</code></p> <ul> <li>1 = Full HP</li> <li>2 = Full Party Gauge</li> <li>3 = Arts recharged</li> <li>4 = Max Talent Gauge</li> </ul>"},{"location":"xc1de/tables/bdat_common/#btl_psslist","title":"BTL_PSSlist","text":"<p>Human Readable Name: Battle - Passive Skill List</p> <p><code>MsTextId</code> linked to <code>BTL_PSSlist_ms</code>.</p> <p>Linked from BTL_PSVskill.</p> <p>Used to display tutorial messages &amp; provide boss help.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized passive name. <code>val_type</code> <code>uint8</code> Value type. <code>game::DataPassiveSkill::setup</code> <p><code>val_type</code></p> <ul> <li>0 = normal - <code>rect_text_UnitNormal_mc</code></li> <li>1 = red - <code>rect_text_UnitMinus_mc</code></li> <li>2 = blue - <code>rect_text_UnitNum_mc</code></li> <li>3 = green - <code>rect_text_UnitNormal2_mc</code></li> </ul>"},{"location":"xc1de/tables/bdat_common/#btl_psvlink","title":"BTL_PSVlink","text":"<p>Human Readable Name: Battle - Passive Skill Branch Links</p> <p>Passive links skill branch skills to skill specific values.</p> Column Type Description Handled by <code>skill</code> <code>uint8</code> Passive Skill ID. <code>val1</code> <code>uint8</code> Skill Specific Value/% 1. <code>game::DataPassiveSkill::getSkillParams</code> <code>val2</code> <code>uint8</code> Skill Specific Value/% 2. <code>game::DataPassiveSkill::getSkillParams</code> <code>val3</code> <code>uint8</code> Skill Specific Value/% 3. <code>game::DataPassiveSkill::getSkillParams</code> <code>val4</code> <code>uint8</code> Skill Specific Value/% 4. <code>game::DataPassiveSkill::getSkillParams</code> <code>val5</code> <code>uint8</code> Skill Specific Value/% 5. <code>game::DataPassiveSkill::getSkillParams</code> <code>val6</code> <code>uint8</code> Skill Specific Value/% 6. <code>game::DataPassiveSkill::getSkillParams</code> <code>flag</code> <code>uint8</code> Unknown. <code>game::DataPassiveSkill::setup</code>"},{"location":"xc1de/tables/bdat_common/#btl_psvskill","title":"BTL_PSVskill","text":"<p>Human Readable Name: Battle - Passive Skill Branch Skills</p> <p><code>MsTextId</code> linked to <code>BTL_PSVskill_ms</code>.</p> <p>List of passive skill branch skills.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized passive name. <code>shape</code> <code>uint8</code> Skill Display Shape <code>game::MenuGameDataPassiveSkill::getShape</code> <code>target</code> <code>uint8</code> Target. 1 = Always, 2 = Field only <code>game::MenuGameDataPassiveSkill::getTarget</code> <code>skill</code> <code>uint8</code> Passive Skill ID. <code>val1</code> <code>uint8</code> Skill Specific Value/% 1. <code>game::DataPassiveSkill::getSkillParams</code> <code>val2</code> <code>uint8</code> Skill Specific Value/% 2. <code>game::DataPassiveSkill::getSkillParams</code> <code>time</code> <code>uint8</code> Time. <code>game::DataPassiveSkill::getSkillParams</code> <code>point_PP</code> <code>uint8</code> SP Cost (Multiply by 10) <code>game::DataPassiveSkill::getSkillParams</code> <code>point_SP</code> <code>uint8</code> Affinity Coin Cost. <code>game::DataPassiveSkill::setup</code> <code>flag</code> <code>uint8</code> Unknown. <p><code>shape</code></p> <ul> <li>1 = Circle</li> <li>2 = Square</li> <li>3 = Hexagon</li> <li>4 = Star</li> <li>5 = Diamond</li> </ul> <p>Warning</p> <p><code>point_PP</code> and <code>point_SP</code> are kind of swapped around. <code>point_PP</code> is the SP cost while <code>point_SP</code> is the link/affinity coin cost.</p>"},{"location":"xc1de/tables/bdat_common/#btl_bufflist","title":"BTL_bufflist","text":"<p>Human Readable Name: Battle - Buffs List</p> <p><code>MsTextId</code> linked to <code>BTL_bufflist_ms</code>.</p> <p>List of (de)buffs.</p> Column Type Description Handled by <code>elem</code> <code>uint8</code> Buff Element. <code>game::BattleDamageCalcurator::calcCounterSpike</code>, <code>game::IntervalStatusEffect::sendMsgSpikeEff</code>, <code>game::AIActionExecutor::fltTarget</code> <code>name</code> <code>MsTextId</code> Localized name. <code>icon</code> <code>uint16</code> SYS_filelist_ex ID. <code>game::MenuPartsInfo::open</code> <code>help</code> <code>MsTextId</code> Localized caption. <code>game::MenuSeqPopupInfo::onTick</code> <code>name_dbg</code> <code>string</code> Debug name, unused."},{"location":"xc1de/tables/bdat_common/#btl_camlist","title":"BTL_camlist","text":"<p>Human Readable Name: Battle - Chain Attack Camera List</p> <p>Battle Chain Attack cameras.</p> <p>Used by <code>game::ChainAttackCamera::lotCameraDataID</code>.</p> Column Type Description Handled by <code>camType</code> <code>uint8</code> <code>game::ChainAttackCamera::lotCameraDataID</code> <code>range</code> <code>uint8</code> <code>enemy_size</code> <code>uint8</code> <code>game::MenuPartsInfo::open</code> <code>cam_name1</code> <code>uint8</code> Camera Data ID 1. <code>game::BdatBtlCamList::cam_name1</code> <code>rate1</code> <code>uint8</code> % chance of camera #1 occuring. <code>game::BdatBtlCamList::rate1</code> <code>cam_name2</code> <code>uint8</code> Camera Data ID 2. <code>game::BdatBtlCamList::cam_name2</code> <code>rate2</code> <code>uint8</code> % chance of camera #2 occuring. <code>game::BdatBtlCamList::rate2</code> <code>cam_name3</code> <code>uint8</code> Camera Data ID 3. <code>game::BdatBtlCamList::cam_name3</code> <code>rate3</code> <code>uint8</code> % chance of camera #3 occuring. <code>game::BdatBtlCamList::rate3</code> <code>cam_name4</code> <code>uint8</code> Camera Data ID 4. <code>game::BdatBtlCamList::cam_name4</code> <code>rate4</code> <code>uint8</code> % chance of camera #4 occuring. <code>game::BdatBtlCamList::rate4</code>"},{"location":"xc1de/tables/bdat_common/#btl_camdatalist","title":"BTL_camdatalist","text":"<p>Human Readable Name: Battle - Camera Data List</p> <p>Battle Chain Attack camera data.</p> <p>Used by <code>game::ChainAttackCamera::setup</code>.</p> <p>TODO</p>"},{"location":"xc1de/tables/bdat_common/#btl_crystallist","title":"BTL_crystallist","text":"<p>Human Readable Name: Battle - Crystal List</p> <p><code>MsTextId</code> linked to <code>BTL_crystallist_ms</code>.</p> <p>List of monster crystal names. Referenced by BTL_enelist-&gt;c_name_id.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name. <code>game::DataUtil::getItemName</code>, <code>game::DataUtil::getItemNameSortKey</code>"},{"location":"xc1de/tables/bdat_common/#btl_enelist","title":"BTL_enelist","text":"<p>Human Readable Name: Battle - Enemy List</p> <p><code>MsTextId</code> linked to <code>BTL_enelist_ms</code>.</p> <p>List of monster crystal names. Referenced by BTL_enelist-&gt;c_name_id.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized enemy name. <code>game::DataUtil::getItemName</code>, <code>game::DataUtil::getItemNameSortKey</code> <code>resource</code> <code>uint16</code> Resource ID. <code>game::DataUtil::getItemName</code>, <code>game::DataUtil::getItemNameSortKey</code> <code>name</code> <code>uint8</code> Crystal List ID <code>game::DataUtil::getItemName</code>, <code>game::DataUtil::getItemNameSortKey</code> <code>mnu_vision_face</code> <code>uint16</code> Menu Vision Face SYS_filelist_ex ID. <code>game::DataUtil::getItemName</code>, <code>game::DataUtil::getItemNameSortKey</code>"},{"location":"xc1de/tables/bdat_common/#btl_growlist","title":"BTL_growlist","text":"<p>Human Readable Name: Battle - Level Ups</p> <p>Level up requirements and rewards.</p> Column Type Description Handled by <code>level_exp</code> <code>MsTextId</code> Localized enemy name. <code>game::calcLvup</code> <code>en_exp</code> <code>uint16</code> EXP earned for defeating an enemy at the same level range. <code>game::DataUtil::calcExpApSpForBattle</code> <code>en_ap</code> <code>uint8</code> AP earned for defeating an enemy at the same level range. <code>game::DataUtil::calcExpApSpForBattle</code>"},{"location":"xc1de/tables/bdat_common/#battle-future-connected","title":"Battle (Future Connected)","text":""},{"location":"xc1de/tables/bdat_common/#btl_kirienemylist","title":"BTL_kiriEnemyList","text":"<p>Human Readable Name: Battle - Kiri Enemy List</p> <p>Unknown. Referenced by searching <code>model_id</code> through <code>KP_list</code>-&gt;model.</p> Column Type Description Handled by <code>model_id</code> <code>string</code> Model id, used as a search index. <code>game::BehaviorNpc::setupForLoaded</code>, <code>game::StateAppearEnemy::execAppear</code> <code>is_common_pack</code> <code>uint8</code> Unknown. <code>game::BehaviorNpc::setupForLoaded</code>, <code>game::StateAppearEnemy::execAppear</code> <code>eff_id</code> <code>uint16</code> Unknown. <code>game::BehaviorNpc::setupForLoaded</code>, <code>game::StateAppearEnemy::execAppear</code>"},{"location":"xc1de/tables/bdat_common/#btl_meliascenariokirienemy","title":"BTL_meliaScenarioKiriEnemy","text":"<p>Human Readable Name: Battle - Melia/Future Connected Kiri Enemy</p> <p>Unknown. Hardcoded row IDs (to 17) in code.</p> Column Type Description Handled by <code>param</code> <code>float</code> Unknown. <code>game::ModelComponent::updateKiriEnemyparticleEffect</code>"},{"location":"xc1de/tables/bdat_common/#btl_meliascenarioparam","title":"BTL_meliaScenarioParam","text":"<p>Human Readable Name: Battle - Melia/Future Connected Param</p> <p>Unknown. Related to future connected. - Hardcoded row IDs (to 7) in code.</p> Column Type Description Handled by <code>val</code> <code>uint16</code> XP/SP value. <code>game::DataUtil::addExpApSpForBattle</code>, <code>game::SeqFieldTalk::waitCloseTalkBalloonForPcTalk</code>"},{"location":"xc1de/tables/bdat_common/#btl_noponallatk","title":"BTL_noponAllAtk","text":"<p>Human Readable Name: Battle - Nopon All Attack</p> <p>Unknown. Related to future connected. - Hardcoded row IDs.</p> Column Type Description Handled by <code>target_version</code> <code>uint8</code> Unknown. 1.1.2 is 8. <code>game::NoponBattle::setupEvent</code>, <code>game::BdatBtlNoponAllAtk::isVersionMatch</code> <code>normal_val</code> <code>uint16</code> Unknown. <code>game::BdatBtlNoponAllAtk::getIntVal</code> <code>extra_val</code> <code>uint16</code> Unknown. <code>game::BdatBtlNoponAllAtk::getIntVal</code> <code>all_val</code> <code>uint16</code> Unknown. <code>game::NoponBattle::setupEvent</code>"},{"location":"xc1de/tables/bdat_common/#btl_noponbasedata","title":"BTL_noponBaseData","text":"<p>Human Readable Name: Battle - Nopon Base Data</p> <p><code>MsTextId</code> linked to <code>MNU_nopon_ms</code>.</p> <p>Related to Future Connected, data for nopon ponspectors.</p> Column Type Description Handled by <code>nopon_id</code> <code>uint8</code> Nopon/PC (?) ID. <code>game::MenuSeqNoponJoinPlay::MenuSeqNoponJoinPlay</code>, <code>game::MenuIconUtil::getNoponNumber</code> <code>nopon_role</code> <code>uint8</code> Nopon role. <code>game::MenuPartsNoponDetail::setPcID</code> <code>ui_arts_text</code> <code>MsTextId</code> Localized arts text. <code>game::MenuPartsNoponDetail::setPcID</code> <code>ui_personal_text</code> <code>MsTextId</code> Localized personal text. <code>game::MenuPartsNoponDetail::setPcID</code> <code>ui_summary_text</code> <code>MsTextId</code> Localized summary. <code>game::MenuPartsNoponDetail::setPcID</code> <code>ui_history</code> <code>uint8</code> History (?) <code>game::MenuPartsNoponDetail::setPcID</code> <code>ui_gender</code> <code>uint8</code> Nopon gender. <code>game::MenuPartsNoponDetail::setPcID</code> <code>ui_hint_sflag</code> <code>MsTextId</code> Hint scenario flag to display. <code>game::MenuSeqNopnList::hasNoponHint</code> <code>ui_hint_qflag</code> <code>MsTextId</code> Hint quest flag to display. <code>game::MenuSeqNopnList::hasNoponHint</code> <code>ui_hint_qorder</code> <code>MsTextId</code> Hint quest order to display. <code>game::MenuSeqNopnList::hasNoponHint</code>"},{"location":"xc1de/tables/bdat_common/#btl_noponhightension","title":"BTL_noponHighTension","text":"<p>Human Readable Name: Battle - Nopon Base Data</p> <p>Unknown. Related to Future Connected.</p> Column Type Description Handled by <code>enter_combat_just_l</code> <code>uint8</code> ? <code>game::NoponBattle::procButtonChallengeResult_highTension</code> <code>enter_combat_just_h</code> <code>uint8</code> ? <code>game::NoponBattle::procButtonChallengeResult_highTension</code> <code>enter_combat_normal_l</code> <code>uint8</code> ? <code>game::NoponBattle::procButtonChallengeResult_highTension</code> <code>enter_combat_normal_h</code> <code>uint8</code> ? <code>game::NoponBattle::procButtonChallengeResult_highTension</code> <code>sudden_commu_just_l</code> <code>uint8</code> ? <code>game::NoponBattle::procButtonChallengeResult_highTension</code> <code>sudden_commu_just_h</code> <code>uint8</code> ? <code>game::NoponBattle::procButtonChallengeResult_highTension</code> <code>sudden_commu_normal_l</code> <code>uint8</code> ? <code>game::NoponBattle::procButtonChallengeResult_highTension</code> <code>sudden_commu_normal_h</code> <code>uint8</code> ? <code>game::NoponBattle::procButtonChallengeResult_highTension</code>"},{"location":"xc1de/tables/bdat_common/#menu-localization","title":"Menu Localization","text":""},{"location":"xc1de/tables/bdat_common/#mnu_battle","title":"MNU_battle","text":"<p>Human Readable Name: Menu - Battle UI</p> <p><code>MsTextId</code> linked to <code>MNU_battle_ms</code>.</p> <p>Links battle UI components to their localized texts (and optionally, their captions - i.e Attack = \"Initiate a Battle\").</p> <p>Many elements are naturally hardcoded to specific ids.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized component name. Too many. <code>help</code> <code>MsTextId</code> Localized Art help/overview/caption/. <code>game::MenuGameDataPcArts::getArtsOverviewText</code>"},{"location":"xc1de/tables/bdat_common/#mnu_bonus_exp","title":"MNU_bonus_exp","text":"<p>Human Readable Name: Menu - Bonus Exp/Expert Mode UI</p> <p><code>MsTextId</code> linked to <code>MNU_bonus_exp_ms</code>.</p> <p>Links expert mode menu UI components to their localized texts.</p> <p>Many elements are naturally hardcoded to specific ids.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized component name. <code>game::MenuPartsBonusExpPcSelecterItem::setup</code>, <code>game::MenuPartsBonusExpPcSelecterItem::setLevel</code>, <code>game::MenuPartsBonusExpOnOffDialog::MenuPartsBonusExpOnOffDialog</code> &amp; more"},{"location":"xc1de/tables/bdat_common/#mnu_col6","title":"MNU_col6","text":"<p>Human Readable Name: Menu - Colony 6 UI</p> <p><code>MsTextId</code> linked to <code>MNU_col6_ms</code>.</p> <p>Links Colony 6 Reconstruction UI components to their localized texts. (and optionally, their captions).</p> <p>Many elements are naturally hardcoded to specific ids.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized component name. Too many. Classes: <code>MenuPartsReviveColony6Util</code> &amp; <code>MenuSeqReviveColony6LevelUp</code> <code>help</code> <code>MsTextId</code> Caption/overview."},{"location":"xc1de/tables/bdat_common/#mnu_collect","title":"MNU_collect","text":"<p>Human Readable Name: Menu - Collectopedia UI</p> <p><code>MsTextId</code> linked to <code>MNU_collect_ms</code>.</p> <p>Links Collectopedia UI components to their localized texts. (and optionally, their captions).</p> <p>Many elements are naturally hardcoded to specific ids.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized component name. <code>game::MenuPartsCollepedia::updateDisplayCollectPage</code> <code>help</code> <code>MsTextId</code> Caption/overview."},{"location":"xc1de/tables/bdat_common/#mnu_crystal","title":"MNU_crystal","text":"<p>Human Readable Name: Menu - Crystal/Gem Crafting UI</p> <p><code>MsTextId</code> linked to <code>MNU_collect_ms</code>.</p> <p>Links Gem Crafting UI components to their localized texts.</p> <p>Many elements are naturally hardcoded to specific ids.</p> Column Type Description Handled by <code>info</code> <code>MsTextId</code> Localized component name."},{"location":"xc1de/tables/bdat_common/#mnu_game_option_category","title":"MNU_game_option_category","text":"<p>Human Readable Name: Menu - Game Option Categories</p> <p><code>MsTextId</code> linked to <code>MNU_main_ms</code>.</p> <p>Links game setting category components to their localized texts.</p> Column Type Description Handled by <code>category</code> <code>uint16</code> Category Type. <code>game::MenuGameDataOptionCategoryEnumable::create</code> <code>priority</code> <code>uint16</code> Priority/Order. 0 is not shown. <code>game::MenuGameDataOptionCategoryEnumable::create</code> <code>name</code> <code>MsTextId</code> Localized name. <code>game::MenuGameDataOptionCategoryEnumable::create</code> <code>help</code> <code>MsTextId</code> Localized caption. <code>game::MenuGameDataOptionCategoryEnumable::create</code>"},{"location":"xc1de/tables/bdat_common/#mnu_event_theater_txt","title":"MNU_event_theater_txt","text":"<p>Human Readable Name: Menu - Event Theater Text</p> <p><code>MsTextId</code> linked to <code>MNU_event_theater_txt</code>.</p> <p>Links Event Theater UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized Name of the location."},{"location":"xc1de/tables/bdat_common/#mnu_item","title":"MNU_item","text":"<p>Human Readable Name: Menu - Item UI</p> <p><code>MsTextId</code> linked to <code>MNU_item_ms</code>.</p> <p>Links inventory/equipment menu UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name. <code>game::MenuGameDataItem::getArmTypeMsText</code> <code>help</code> <code>MsTextId</code> Localized caption."},{"location":"xc1de/tables/bdat_common/#mnu_main","title":"MNU_main","text":"<p>Human Readable Name: Menu - Main UI</p> <p><code>MsTextId</code> linked to <code>MNU_main_ms</code>.</p> <p>Links main UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name. <code>help</code> <code>MsTextId</code> Localized caption."},{"location":"xc1de/tables/bdat_common/#mnu_map","title":"MNU_map","text":"<p>Human Readable Name: Menu - Map UI</p> <p><code>MsTextId</code> linked to <code>MNU_map_ms</code>.</p> <p>Links map UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name. <code>help</code> <code>MsTextId</code> Localized caption."},{"location":"xc1de/tables/bdat_common/#mnu_nopon","title":"MNU_nopon","text":"<p>Human Readable Name: Menu - Nopon UI</p> <p><code>MsTextId</code> linked to <code>MNU_nopon_ms</code>.</p> <p>For Future Connected. Links Nopon Ponspectors UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name."},{"location":"xc1de/tables/bdat_common/#mnu_noponger","title":"MNU_noponger","text":"<p>Human Readable Name: Menu - Noponger</p> <p>For Future Connected. Links Nopon NPC IDs to their playable character ID.</p> Column Type Description Handled by <code>npc_id</code> <code>uint16</code> NPC ID. <code>noponger_idx</code> <code>uint8</code> Playable Character ID (15 + value). <code>game::MenuGameDataMap::isVisibleNopongerNpcIcon</code>"},{"location":"xc1de/tables/bdat_common/#mnu_party","title":"MNU_party","text":"<p>Human Readable Name: Menu - Nopon UI</p> <p><code>MsTextId</code> linked to <code>MNU_party_ms</code>.</p> <p>Links Party Change UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name. <code>help</code> <code>MsTextId</code> Localized caption."},{"location":"xc1de/tables/bdat_common/#mnu_passive","title":"MNU_passive","text":"<p>Human Readable Name: Menu - Passive Skill/Tree UI</p> <p><code>MsTextId</code> linked to <code>MNU_passive_ms</code>.</p> <p>Links Skill Tree UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name."},{"location":"xc1de/tables/bdat_common/#mnu_quest","title":"MNU_quest","text":"<p>Human Readable Name: Menu - Quest UI</p> <p><code>MsTextId</code> linked to <code>MNU_quest_ms</code>.</p> <p>Links Quest Menu UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name."},{"location":"xc1de/tables/bdat_common/#mnu_relate","title":"MNU_relate","text":"<p>Human Readable Name: Menu - Relate/Affinity Chart UI</p> <p><code>MsTextId</code> linked to <code>MNU_relate_ms</code>.</p> <p>Links Affinity Chart menu UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name. <code>help</code> <code>MsTextId</code> Localized caption."},{"location":"xc1de/tables/bdat_common/#mnu_saveload_scenario","title":"MNU_saveload_scenario","text":"<p>Human Readable Name: Menu - Save/Load Menu UI</p> <p><code>MsTextId</code> linked to <code>MNU_saveload_scenario_ms</code>.</p> <p>Links Save/Load Menu UI components to their localized texts.</p> Column Type Description Handled by <code>flag</code> <code>uint16</code> Scenario Flag target. <code>help</code> <code>MsTextId</code> Localized name."},{"location":"xc1de/tables/bdat_common/#mnu_shop","title":"MNU_shop","text":"<p>Human Readable Name: Menu - Shop Menu UI</p> <p><code>MsTextId</code> linked to <code>MNU_shop_ms</code>.</p> <p>Links Shop Menu UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name. <code>help</code> <code>MsTextId</code> Localized name."},{"location":"xc1de/tables/bdat_common/#mnu_sysmes","title":"MNU_sysmes","text":"<p>Human Readable Name: Menu - System Messages UI</p> <p><code>MsTextId</code> linked to <code>MNU_sysmes_ms</code>.</p> <p>Links System Messages UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name. <code>help</code> <code>MsTextId</code> Localized name."},{"location":"xc1de/tables/bdat_common/#mnu_title","title":"MNU_title","text":"<p>Human Readable Name: Menu - Main Title UI</p> <p><code>MsTextId</code> linked to <code>MNU_title_ms</code>.</p> <p>Links Title Menu UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name."},{"location":"xc1de/tables/bdat_common/#mnu_update","title":"MNU_update","text":"<p>Human Readable Name: Menu - Update/Notification UI</p> <p><code>MsTextId</code> linked to <code>MNU_update_ms</code>.</p> <p>Links Update/Notification Popup UI components to their localized texts.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name."},{"location":"xc1de/tables/bdat_common/#menu-handling","title":"Menu Handling","text":""},{"location":"xc1de/tables/bdat_common/#mnu_artsshop","title":"MNU_artsshop","text":"<p>Human Readable Name: Menu - Arts Shop</p> <p>Defines arts available in the Arts/Manual Shop (XC1DE Future Connected). </p> Column Type Description Handled by <code>item</code> <code>uint16</code> Item ID. <code>game::MenuSeqArtsshop::ArtsshopItemParam::getArtsId</code> <code>price</code> <code>uint8</code> Price in art coins. <code>game::MenuSeqArtsshop::getSelectedItemPrice</code> <code>index</code> <code>uint8</code> Order index. <code>game::MenuSeqArtsshop::rebuildItemListFromPcID</code> <code>sflg</code> <code>uint16</code> Scenario flag required for this item to be available. <code>game::MenuSeqArtsshop::ArtsshopItemParam::getScenarioFlag</code>"},{"location":"xc1de/tables/bdat_common/#mnu_dialog","title":"MNU_dialog","text":"<p>Human Readable Name: Menu - Crystal/Gem Crafting UI</p> <p><code>MsTextId</code> depends on the <code>source</code> column.</p> <p>List of all dialog/prompt parameters.</p> <p>Many elements are naturally hardcoded to specific ids.</p> Column Type Description Handled by <code>type</code> <code>uint8</code> Dialog Type. 1 = Basic Dialog, 2 = Selection Dialog. <code>game::MenuMnuDialog::getType</code> <code>source</code> <code>uint8</code> Source bdat. <code>game::MenuMnuDialog::getSource</code>, <code>game::MenuMnuDialog::getMsText</code> <code>title</code> <code>MsTextId</code> Localized Dialog title. <code>game::MenuMnuDialog::getTitleText</code> <code>message</code> <code>MsTextId</code> Localized Dialog message. <code>game::MenuMnuDialog::getMessage</code> <code>default_index</code> <code>uint8</code> Default selection index (when type is 2). <code>game::MenuMnuDialog::getMessage</code> <code>cancel_key</code> <code>uint8</code> Unknown. Controls cancelling. <code>game::MenuMnuDialog::getCancelResult</code> <code>select</code> <code>MsTextId[]</code> Localized selection messages as a string representing the selections (when type is 2). <code>game::MenuMnuDialog::getSelectTextCount</code> <code>open_sound_id</code> <code>uint16[]</code> Sound to play when the dialog is opened. <code>game::MenuMnuDialog::getOpenSoundId</code> <code>sound_id</code> <code>uint16</code> Sound to play when a specific selection is chosen. <code>game::MenuMnuDialog::getSoundId</code> <code>cancel_sound_id</code> <code>uint16</code> Sound to play when the dialog is closed. <code>game::MenuMnuDialog::getCancelSoundId</code> <p><code>source</code></p> <ul> <li>1: <code>MNU_main</code></li> <li>2: <code>MNU_main_ms</code></li> <li>3: <code>MNU_sysmes</code></li> <li>4: <code>MNU_sysmes_ms</code></li> <li>5: <code>MNU_shop</code></li> <li>6: <code>MNU_shop_ms</code></li> <li>7: <code>MNU_item</code></li> <li>8: <code>MNU_passive</code></li> <li>9: <code>MNU_bonus_exp_ms</code></li> </ul>"},{"location":"xc1de/tables/bdat_common/#mnu_event_location","title":"MNU_event_location","text":"<p>Human Readable Name: Menu - Event Location</p> <p><code>MsTextId</code> linked to <code>FLD_maplist_ms</code>.</p> <p>Handles the main area/region location menu.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized Name of the location. <code>game::MenuMnuDialog::getType</code> <code>old_file_name</code> <code>string</code> Unknown. Old effect file name. (maps to <code>eff\\ev\\ev</code>). <code>map_id</code> <code>uint8</code> Map ID. <code>game::MenuPartsAreaMapList::setMapIdDesc</code> <code>wait</code> <code>uint16</code> Wait time (ms). Possibly unused. <code>is_bionic</code> <code>uint8</code> Whether this location is on Bionis (and will display as such), otherwise Mechonis. Will use layer group <code>PointerBionis_mc</code> or <code>PointerMechonis_mc</code> from <code>mnu050_cont01.wilay</code> <code>game::MenuPartsAreaMapList::setMapIdDesc</code> <code>point_idx</code> <code>uint8</code> Point on the bionis/mechonis. Will start layer action <code>lay%02u</code>. <code>game::MenuPartsAreaMapList::setMapIdDesc</code> <code>event_name</code> <code>string</code> Used as key for searching."},{"location":"xc1de/tables/bdat_common/#mnu_event_logo","title":"MNU_event_logo","text":"<p>Human Readable Name: Menu - Event Logo</p> <p>List of logo overlays for events i.e Xenoblade Logo.</p> Column Type Description Handled by <code>old_file_name</code> <code>string</code> Unknown. Old effect file name. (maps to <code>eff\\ev\\ev</code>). <code>image_name</code> <code>string</code> Layer Logo image name (from <code>menu/image</code>). <code>game::MenuSeqEventLogoAction::getLayerLogoImageName</code> <code>wait</code> <code>uint16</code> Wait time (ms). Possibly unused. <code>event_name</code> <code>string</code> Used as key for searching."},{"location":"xc1de/tables/bdat_common/#mnu_event_telop","title":"MNU_event_telop","text":"<p>Human Readable Name: Menu - Event Captions</p> <p><code>MsTextId</code> linked to <code>MNU_event_telop_ms</code>.</p> <p>List of text overlays for events i.e \"One Month Ago\".</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized Name of the location. <code>game::MenuMnuDialog::getType</code> <code>old_file_name</code> <code>string</code> Unknown. Old effect file name. (maps to <code>eff\\ev\\ev</code>). <code>wait</code> <code>uint16</code> Wait time (ms). Possibly unused. <code>event_name</code> <code>string</code> Used as key for searching."},{"location":"xc1de/tables/bdat_common/#mnu_filter","title":"MNU_filter","text":"<p>Human Readable Name: Menu - Filter</p> <p><code>MsTextId</code> linked to <code>MNU_filter_ms</code>.</p> <p>Handles menu filtering (i.e gear). </p> Column Type Description Handled by <code>category</code> <code>uint8</code> Category type. <code>game::MenuFilterSortUtil::getListImpl</code> <code>name</code> <code>MsTextId</code> Localized Name of the filtering type. <code>game::MenuFilterSortUtil::getListImpl</code> <code>index</code> <code>uint8</code> Order index (?). <code>game::MenuFilterSortUtil::getListImpl</code> <code>conf_type</code> <code>uint8</code> Config Type. 1-5. <code>game::MenuFilterSortUtil::getListImpl</code> <code>conf_value</code> <code>uint16</code> Conf data depending on config type. <code>game::MenuFilterSortUtil::getListImpl</code> <code>filter_type</code> <code>uint8</code> Filter Type. 0-11. <code>game::MenuFilterSortUtil::getFilterType</code> <code>filter_value</code> <code>uint8</code> Filter data depending on type. <code>game::MenuFilterSortUtil::getFilterValue</code> category <ul> <li>0 = All</li> <li>1 = Clothes</li> <li>2 = Body Armor</li> <li>3 = Key Items</li> <li>4 = Arts</li> <li>5 = Gems</li> <li>7 = Collectibles</li> <li>9 = Quest List</li> <li>10 = Tutorial</li> <li>11 = Event Theater (?)</li> </ul> conf_type <ul> <li>1 = Equal to <code>conf_value</code>?</li> <li>2 = <code>conf_value</code> is map ID for <code>landmarklist</code></li> <li>3 = Unknown. May be related to playable character being in party as per <code>game::DataUtil::getPcJoin</code></li> <li>4 = Unknown. <code>game::DataUtil::isRevivePC08</code> - Fiora Revive</li> <li>5 = Different than <code>conf_value</code>?</li> </ul> filter_type <ul> <li>0 = Unknown</li> <li>1 = <code>game::MenuGameDataItem::getSlotSize</code> (<code>ITM_wpnlist</code>-&gt;jwl_slot)</li> <li>2 = <code>game::MenuGameDataItem::getSlotSize &amp;&amp; !game::MenuGameDataItem::getUniFlag</code> </li> <li>3 = <code>game::MenuGameDataItem::getUniFlag</code> (<code>ITM_wpnlist</code>-&gt;uni_flag)</li> <li>4 = filter_value == <code>game::MenuGameDataItem::getArmType</code> (<code>ITM_equiplist</code>-&gt;arm_type)</li> <li>5 = <code>game::MenuGameDataItem::getArmType - 4 &lt;= 9</code> (<code>ITM_equiplist</code>-&gt;arm_type)</li> <li>6 = <code>game::MenuGameDataItem::isQuestTarget || game::MenuGameDataItem::isVisionTarget</code></li> <li>7 = <code>!game::DataUtil::isUsedArtsBook</code></li> <li>8 = <code>game::DataUtil::isUsedArtsBook</code></li> <li>9 = <code>filter_value</code> compared against <code>BTL_skilllist</code>-&gt;attach - <code>game::MenuGameDataItem::getAttach</code></li> <li>10 = <code>filter_value</code> compared against <code>BTL_skilllist</code>-&gt;category - <code>game::MenuGameDataItem::getCategory</code></li> <li>11 = <code>filter_value</code> compared against <code>ITM_collectlist</code>-&gt;type - <code>game::MenuGameDataItem::getCollectType</code></li> </ul>"},{"location":"xc1de/tables/bdat_common/#mnu_game_option_item","title":"MNU_game_option_item","text":"<p>Human Readable Name: Menu - Game Option Items</p> <p><code>MsTextId</code> linked to <code>MNU_main_ms</code>.</p> <p>Links game setting item components to their localized texts.</p> Column Type Description Handled by <code>option_id</code> <code>uint16</code> Option ID. No more than 0x2A. <code>game::MenuGameDataOption::startup</code> <code>category</code> <code>uint16</code> Option Category ID. <code>game::MenuGameDataOption::startup</code> <code>priority</code> <code>uint16</code> Priority/Order. 0 is not shown. <code>game::MenuGameDataOptionCategoryEnumable::create</code> <code>show_type</code> <code>uint16</code> Unknown. 0-3. <code>game::MenuGameDataOptionEnumable::create</code> <code>parent_id</code> <code>uint16</code> Parent Item ID. If specified, will display as a subgroup. <code>game::MenuGameDataOption::getParentOptionId</code> <code>name</code> <code>MsTextId</code> Localized name. <code>help</code> <code>MsTextId</code> Localized caption. <code>type</code> <code>MsTextId</code> Type of option. <code>game::MenuGameDataOption::adjustData</code> <code>default_value</code> <code>uint16</code> Default value (if slider). <code>game::MenuGameDataOption::adjustData</code> <code>min_value</code> <code>uint16</code> Min value (if slider). <code>game::MenuGameDataOption::adjustData</code> <code>max_value</code> <code>uint16</code> Max value (if slider). <code>game::MenuGameDataOption::adjustData</code> <code>partition</code> <code>uint16</code> Increment value per de/increase. <code>game::MenuGameDataOption::adjustData</code> <code>select_value</code> <code>uint16[]</code> Value of each select option. <code>game::BdatMnuGameOptionItem::select_value</code> <code>select_name</code> <code>MsTextId[]</code> Localized name of each select option. <code>game::MenuGameDataOption::getSelectItemText</code> type <ul> <li>1 = Combo Box</li> <li>2 = Slider</li> <li>3 = Brightness Slider</li> </ul>"},{"location":"xc1de/tables/bdat_common/#mnu_header_info","title":"MNU_header_info","text":"<p>Human Readable Name: Menu - Header Info</p> <p><code>MsTextId</code> linked to <code>MNU_header_text_ms</code>.</p> <p>Unknown.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized header name. <code>game::MenuPartsHeaderTitle::setTitleInfo</code> <code>image_no</code> <code>uint8</code> Image Number. <code>game::MenuPartsHeaderTitle::setTitleInfo</code> <code>image_sub_no</code> <code>uint8</code> Sub Image Number. <code>game::MenuPartsHeaderTitle::setTitleInfo</code> <p><code>image_no</code> and <code>image_sub_no</code> are combined into a <code>%03d_%02d</code> layer action string, loaded from some <code>fonr_hi_mc</code> or <code>fonr_mc</code> layer.</p>"},{"location":"xc1de/tables/bdat_common/#mnu_header_text","title":"MNU_header_text","text":"<p>Human Readable Name: Menu - Header Text</p> <p><code>MsTextId</code> linked to <code>MNU_header_text_ms</code>.</p> <p>Unknown.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized header name. <code>game::MenuPartsHeaderTitle::setTitleInfo</code>"},{"location":"xc1de/tables/bdat_common/#mnu_kyeassign","title":"MNU_kyeassign","text":"<p>Human Readable Name: Menu - Key Assign</p> <p><code>MsTextId</code> linked to <code>MNU_kyeassign_ms</code>.</p> <p>Links key UI menu UI components to their localized texts.</p> <p>Many elements are naturally hardcoded to specific ids.</p> Column Type Description Handled by <code>fileID_1</code> <code>uint16</code> Appears unused. <code>fileID_2</code> <code>uint16</code> Appears unused. <code>help</code> <code>MsTextId</code> Localized caption. <code>game::MenuPartsHudGuideControl::applyGuideLayerItem</code>, <code>game::MenuPartsInfo::MenuPartsInfo</code>, <code>game::MenuPartsPlayAward::reloadList</code>, <code>game::MenuPartsTrialPartyInfo::MenuPartsTrialPartyInfo</code>"},{"location":"xc1de/tables/bdat_common/#mnu_name","title":"MNU_name","text":"<p>Human Readable Name: Menu - Name UI</p> <p><code>MsTextId</code> linked to <code>MNU_name_ms</code>.</p> <p>Possibly unused (no references found)</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> Localized name."},{"location":"xc1de/tables/bdat_common/#mnu_operation_guide","title":"MNU_operation_guide","text":"<p>Human Readable Name: Menu - Operation Guide UI</p> <p><code>MsTextId</code> linked to <code>MNU_operation_guide_ms</code>.</p> <p>Unused. Moved to <code>MNU_kyeassign</code></p> Column Type Description Handled by <code>guide_icon_1</code> <code>uint8</code> Guide Icon 1. <code>game::BdatMnuOperationGuide::guide_icon1</code> <code>guide_text_1</code> <code>uint8</code> Guide Text 1. <code>game::BdatMnuOperationGuide::guide_text1</code> <code>guide_icon_2</code> <code>uint8</code> Guide Icon 2. <code>game::BdatMnuOperationGuide::guide_icon2</code> <code>guide_text_2</code> <code>uint8</code> Guide Text 2. <code>game::BdatMnuOperationGuide::guide_text2</code> <code>guide_icon_3</code> <code>uint8</code> Guide Icon 3. <code>game::BdatMnuOperationGuide::guide_icon3</code> <code>guide_text_3</code> <code>uint8</code> Guide Text 3. <code>game::BdatMnuOperationGuide::guide_text3</code> <code>guide_icon_4</code> <code>uint8</code> Guide Icon 4. <code>game::BdatMnuOperationGuide::guide_icon4</code> <code>guide_text_4</code> <code>uint8</code> Guide Text 4. <code>game::BdatMnuOperationGuide::guide_text4</code> <code>guide_icon_5</code> <code>uint8</code> Guide Icon 5. <code>game::BdatMnuOperationGuide::guide_icon5</code> <code>guide_text_5</code> <code>uint8</code> Guide Text 5. <code>game::BdatMnuOperationGuide::guide_text5</code> <code>guide_icon_6</code> <code>uint8</code> Guide Icon 6. <code>game::BdatMnuOperationGuide::guide_icon6</code> <code>guide_text_6</code> <code>uint8</code> Guide Text 6. <code>game::BdatMnuOperationGuide::guide_text6</code> <code>guide_icon_7</code> <code>uint8</code> Guide Icon 7. <code>game::BdatMnuOperationGuide::guide_icon7</code> <code>guide_text_7</code> <code>uint8</code> Guide Text 7. <code>game::BdatMnuOperationGuide::guide_text7</code> <code>guide_icon_8</code> <code>uint8</code> Guide Icon 8. <code>game::BdatMnuOperationGuide::guide_icon8</code> <code>guide_text_8</code> <code>uint8</code> Guide Text 8. <code>game::BdatMnuOperationGuide::guide_text8</code> <code>ex_guide_icon_1</code> <code>uint8</code> Extra Guide Text 1. <code>game::BdatMnuOperationGuide::ex_guide_icon1</code> <code>ex_guide_text_1</code> <code>uint8</code> Extra Guide Icon 1. <code>game::BdatMnuOperationGuide::ex_guide_text1</code> <code>ex_guide_icon_2</code> <code>uint8</code> Extra Guide Text 2. <code>game::BdatMnuOperationGuide::ex_guide_icon2</code> <code>ex_guide_text_2</code> <code>uint8</code> Extra Guide Icon 2. <code>game::BdatMnuOperationGuide::ex_guide_text2</code>"},{"location":"xc1de/tables/bdat_common/#mnu_quest_task_message","title":"MNU_quest_task_message","text":"<p>Human Readable Name: Menu - Quest Popup UI</p> <p><code>MsTextId</code> linked to <code>MNU_quest_task_message_ms</code>.</p> <p>Handles text for branching quests.</p> Column Type Description Handled by <code>quest_id</code> <code>uint16</code> Quest ID. <code>prog_a</code> <code>MsTextId</code> Localized Quest Branch A Name <code>game::BdatMnuQuestTaskMessage::getProgMsText</code> <code>prog_b</code> <code>MsTextId</code> Localized Quest Branch B Name <code>game::BdatMnuQuestTaskMessage::getProgMsText</code> <code>prog_a_target</code> <code>uint16</code> Localized Branch A Target. <code>game::BdatMnuQuestTaskMessage::getProgTargetMsText</code> <code>prog_b_target</code> <code>uint16</code> Localized Branch B Target. <code>game::BdatMnuQuestTaskMessage::getProgTargetMsText</code> <code>prog_a_target_max</code> <code>uint8</code> Branch A Target Max. <code>game::BdatMnuQuestTaskMessage::getProgTargetMax</code> <code>prog_b_target_max</code> <code>uint8</code> Branch B Target Max. <code>game::BdatMnuQuestTaskMessage::getProgTargetMax</code>"},{"location":"xc1de/tables/bdat_common/#mnu_sort","title":"MNU_sort","text":"<p>TODO</p>"},{"location":"xc1de/tables/bdat_common/#mnu_colorlist","title":"MNU_ColorList","text":"<p>Human Readable Name: Menu - Color List</p> <p>Defines colors for use with the menu UI. Depends on MNU_EventTheater_kzn-&gt;col6_setting.</p> Column Type Description Handled by <code>name</code> <code>string</code> UI Component Name. <code>game::UIDataLibrary::setupColorList</code> <code>col_r</code> <code>uint8</code> Red Color. <code>game::UIDataLibrary::setupColorList</code> <code>col_g</code> <code>uint8</code> Green Color. <code>game::UIDataLibrary::setupColorList</code> <code>col_b</code> <code>uint8</code> Blue Color. <code>game::UIDataLibrary::setupColorList</code>"},{"location":"xc1de/tables/bdat_common/#mnu_eventtheater_col6","title":"MNU_EventTheater_col6","text":"<p>Human Readable Name: Menu - Event Theater - Colony 6</p> <p><code>MsTextId</code> linked to <code>pc_arts</code> (may be a mistake)</p> <p>Unknown. Possibly colony 6 parameters for when playing event theater?</p> Column Type Description Handled by <code>house</code> <code>uint8</code> Housing level. <code>game::MenuSeqEventTheater::playEvent</code> <code>business</code> <code>uint8</code> Commerce level. <code>game::MenuSeqEventTheater::playEvent</code> <code>industry</code> <code>uint8</code> Unknown. <code>game::MenuSeqEventTheater::playEvent</code> <code>military</code> <code>uint8</code> Unknown. <code>game::MenuSeqEventTheater::playEvent</code> <code>construct</code> <code>uint8</code> Unknown. <code>game::MenuSeqEventTheater::playEvent</code>"},{"location":"xc1de/tables/bdat_common/#mnu_eventtheater_equip_pc","title":"MNU_EventTheater_equip_pc","text":"<p>Human Readable Name: Menu - Event Theater - Equipment - Playable Character</p> <p>Equipment settings for playable characters during event theater.</p> <p><code>MNU_EventTheater_equip_pc%02d</code> where: * <code>%02d</code> - Character ID - 1 to 16</p> <p>Note</p> <p>Hardcoded to read from ID 1 to 16. Each file is checked if exists.</p> Column Type Description Handled by <code>ev_id</code> <code>uint16</code> Event ID <code>game::MenuSeqEventTheater::playEvent</code> <code>eq_head</code> <code>uint16</code> Equipped head Item ID. <code>game::MenuSeqEventTheater::playEvent</code> <code>eq_body</code> <code>uint16</code> Equipped body Item ID. <code>game::MenuSeqEventTheater::playEvent</code> <code>eq_arm</code> <code>uint16</code> Equipped arm Item ID. <code>game::MenuSeqEventTheater::playEvent</code> <code>eq_waist</code> <code>uint16</code> Equiped waist Item ID. <code>game::MenuSeqEventTheater::playEvent</code> <code>eq_legg</code> <code>uint16</code> Equipped leggings Item ID. <code>game::MenuSeqEventTheater::playEvent</code> <code>eq_wpn</code> <code>uint16</code> Equipped weapon Item ID. <code>game::MenuSeqEventTheater::playEvent</code>"},{"location":"xc1de/tables/bdat_common/#mnu_eventtheater_kzn","title":"MNU_EventTheater_kzn","text":"<p>Human Readable Name: Menu - Event Theater - Kizuna</p> <p><code>MsTextId</code> linked to <code>MNU_event_name_ms</code>.</p> <p>List of all the event theater cutscenes.</p> <p>Tip</p> <p>IDs will map to image files at <code>menu/image/evth_kzn_img%03d</code>.</p> Column Type Description Handled by <code>kzn_no</code> <code>uint16</code> JNL_Kizunalist ID <code>game::MenuSeqEventTheater::MenuSeqEventTheater</code> <code>thumbnail</code> <code>uint16</code> Appears unused. <code>sort_index</code> <code>uint16</code> Sorting index on the UI. <code>fixed_time</code> <code>uint8</code> Fixed time of day type. <code>game::MenuPartsEventTheaterSelect::setEvent</code> <code>fixed_weather</code> <code>uint16</code> Whether the weather does not change. <code>game::MenuPartsEventTheaterSelect::setEvent</code> <code>ev01_id</code> <code>uint16</code> Event ID <code>game::MenuSeqEventTheater::playEvent</code> <code>col6_setting</code> <code>uint16</code> Colony 6 Setup ID <code>game::MenuSeqEventTheater::playEvent</code> <code>pos_x</code> <code>float</code> Position X. <code>game::MenuSeqEventTheater::playEvent</code> <code>pos_y</code> <code>float</code> Position X. <code>game::MenuSeqEventTheater::playEvent</code> <code>pos_Z</code> <code>float</code> Position X. <code>game::MenuSeqEventTheater::playEvent</code>"},{"location":"xc1de/tables/bdat_common/#mnu_eventtheater_scn","title":"MNU_EventTheater_scn","text":"<p>Human Readable Name: Menu - Event Theater - Scene?</p> <p><code>MsTextId</code> linked to <code>MNU_event_name_ms</code>.</p> <p>List of all the event theater scenes (?)</p> <p>Tip</p> <p>IDs will map to image files at <code>menu/image/evth_scn_img%03d</code>.</p> Column Type Description Handled by <code>title</code> <code>MsTextId</code> Localized name. <code>game::MenuSeqEventTheater::updateEventIDList</code> <code>thumbnail</code> <code>uint16</code> Appears unused. <code>scn_no</code> <code>uint16</code> Scn Number. <code>game::MenuSeqEventTheater::updateEventIDList</code> <code>sort_index</code> <code>uint16</code> Sorting index on the UI. <code>fixed_time</code> <code>uint8</code> Fixed time of day type. <code>game::MenuPartsEventTheaterSelect::setEvent</code> <code>fixed_weather</code> <code>uint16</code> Whether the weather does not change. <code>game::MenuPartsEventTheaterSelect::setEvent</code> <code>ev01_id</code> <code>uint16</code> Event ID #1. <code>game::BDatMnuEventTheaterScn::getEventIDList</code> &amp; more <code>ev02_id</code> <code>uint16</code> Event ID #2. <code>game::BDatMnuEventTheaterScn::getEventIDList</code> &amp; more <code>ev03_id</code> <code>uint16</code> Event ID #3. <code>game::BDatMnuEventTheaterScn::getEventIDList</code> &amp; more <code>ev04_id</code> <code>uint16</code> Event ID #4. <code>game::BDatMnuEventTheaterScn::getEventIDList</code> &amp; more <code>ev05_id</code> <code>uint16</code> Event ID #5. <code>game::BDatMnuEventTheaterScn::getEventIDList</code> &amp; more <code>ev06_id</code> <code>uint16</code> Event ID #6. <code>game::BDatMnuEventTheaterScn::getEventIDList</code> &amp; more <code>ev07_id</code> <code>uint16</code> Event ID #7. <code>game::BDatMnuEventTheaterScn::getEventIDList</code> &amp; more <code>ev08_id</code> <code>uint16</code> Event ID #8. <code>game::BDatMnuEventTheaterScn::getEventIDList</code> &amp; more <code>ev09_id</code> <code>uint16</code> Event ID #9. <code>game::BDatMnuEventTheaterScn::getEventIDList</code> &amp; more"},{"location":"xc1de/tables/bdat_common/#mnu_facepatternlist","title":"MNU_FacePatternList","text":"<p>Human Readable Name: Menu - Face Pattern List</p> <p>Unknown. Appears unused in XC1DE.</p> <p>Tip</p> <p>IDs will map to image files at <code>menu/image/evth_scn_img%03d</code>.</p> Column Type Description Handled by <code>name</code> <code>string</code> Face Pattern Name. <code>game::UIFontManager::loadFontSet</code> <code>image_no</code> <code>uint8</code> ? <code>game::UIFontManager::loadFontSet</code>"},{"location":"xc1de/tables/bdat_common/#mnu_fontset01","title":"MNU_FontSet01","text":"<p>Human Readable Name: Menu - Font Set</p> <p>Font set to use per language.</p> <p>Tables per language:</p> <ul> <li>Global: <code>MNU_FontSet01</code></li> <li>Korean: <code>MNU_FontSet01_kr</code></li> <li>Chinese: <code>MNU_FontSet01_cn</code></li> <li>Taiwannese: <code>MNU_FontSet01_tw</code></li> </ul> Column Type Description Handled by <code>type</code> <code>uint8</code> See below <code>game::UIFontManager::loadFontSet</code> <code>resource</code> <code>uint32</code> Maps to MNU_ResFont. <code>game::UIFontManager::loadFontSet</code> <code>image_type</code> <code>uint32</code> Used when <code>type</code> is 6. Maps to <code>game::UIFontManager::loadFontSet</code> <p>Type</p> <p>Minimum 6. </p> <ul> <li>6 = MNU_ResourceCategory ID 4 or 5 depending on <code>image_type</code> being 1 or 2 = <code>menu/image/</code></li> <li>8 = MNU_ResourceCategory ID 1 = <code>menu/font/</code></li> <li>9 = MNU_ResourceCategory ID 2 = <code>menu/font/</code></li> <li>10 = MNU_ResourceCategory ID 10 = <code>menu/msproj/</code></li> </ul>"},{"location":"xc1de/tables/bdat_common/#mnu_hana_custom","title":"MNU_Hana_custom","text":"<p>Unknown. Appears unused in XC1DE.</p>"},{"location":"xc1de/tables/bdat_common/#mnu_input","title":"MNU_Input","text":"<p>Tables:</p> <ul> <li><code>MNU_InputAct</code></li> <li><code>MNU_InputPad</code></li> <li><code>MNU_InputPointer</code></li> <li><code>MNU_InputWheel</code></li> </ul> <p>Unknown. Appears unused in XC1DE.</p>"},{"location":"xc1de/tables/bdat_common/#mnu_layer","title":"MNU_Layer","text":"<p>Human Readable Name: Menu - Layer</p> <p>Unknown. Appears unused in XC1DE.</p> Column Type Description Handled by <code>group</code> <code>uint8</code> Layer group. <code>game::MenuLayerBuilderManager::setupFromBdat</code> <code>filename</code> <code>string</code> Path to the layer file. <code>game::MenuLayerBuilderManager::setupFromBdat</code> <code>prio</code> <code>uint8</code> Layer priority. Applied after group. <code>game::MenuLayerBuilderManager::setupFromBdat</code> <code>cache</code> <code>uint8</code> Face Pattern Name. <code>game::MenuLayerBuilderManager::setupFromBdat</code>"},{"location":"xc1de/tables/bdat_common/#mnu_resfont","title":"MNU_ResFont","text":"<p>Human Readable Name: Menu - Resource Font</p> <p>Files to be used when loading font resources. Referenced by MNU_ResFont01 to append to a specific folder  when <code>type</code> is 8.</p> Column Type Description Handled by <code>file</code> <code>string</code> File Name. <code>game::UIResourceManager::getResourceNameFromId</code>"},{"location":"xc1de/tables/bdat_common/#mnu_resfontstyle","title":"MNU_ResFontStyle","text":"<p>Human Readable Name: Menu - Resource Font Style</p> <p>Files to be used when loading font style resources. Referenced by MNU_ResFont01 to append to a specific folder when <code>type</code> is 9.</p> Column Type Description Handled by <code>file</code> <code>string</code> File Name."},{"location":"xc1de/tables/bdat_common/#mnu_resimage","title":"MNU_ResImage","text":"<p>Human Readable Name: Menu - Resource Image</p> <p>Files to be used when loading image resources. Referenced by MNU_ResFont01 to append to a specific folder when <code>type</code> is 6.</p> Column Type Description Handled by <code>file</code> <code>string</code> File Name."},{"location":"xc1de/tables/bdat_common/#mnu_reslayout","title":"MNU_ResLayout","text":"<p>Human Readable Name: Menu - Resource Layout</p> <p>Files to be used when loading layout resources. Possibly unused/unreferenced in XC1DE.</p> Column Type Description Handled by <code>file</code> <code>string</code> File Name."},{"location":"xc1de/tables/bdat_common/#mnu_resmsproj","title":"MNU_ResMSProj","text":"<p>Human Readable Name: Menu - Resource Monolith Soft Project</p> <p>Files to be used when loading monolith soft project resources. Referenced by MNU_ResFont01 to append to a specific folder when <code>type</code> is 10.</p> Column Type Description Handled by <code>file</code> <code>string</code> File Name. <p>MS Files</p> <p>Useful functions related to it:</p> <ul> <li><code>fw::ResMsprojData::buildResource</code></li> <li><code>ms::MsWrapper::regist</code></li> <li><code>LMS_InitProject</code></li> <li>Anything starting with <code>LMS</code></li> </ul>"},{"location":"xc1de/tables/bdat_common/#mnu_resmotion","title":"MNU_ResMotion","text":"<p>Human Readable Name: Menu - Resource Motion</p> <p>Files to be used when loading motion resources. Possibly unused/unreferenced in XC1DE.</p> Column Type Description Handled by <code>file</code> <code>string</code> File Name."},{"location":"xc1de/tables/bdat_common/#mnu_resuio","title":"MNU_ResUio","text":"<p>Human Readable Name: Menu - Resource Ui Object</p> <p>Files to be used when loading UI Object resources. Possibly unused/unreferenced in XC1DE.</p> Column Type Description Handled by <code>file</code> <code>string</code> File Name."},{"location":"xc1de/tables/bdat_common/#mnu_resourcecategory","title":"MNU_ResourceCategory","text":"<p>Human Readable Name: Menu - Resource Categories</p> <p>Maps resource IDs to their folder locations.</p> Column Type Description Handled by <code>path_prefix</code> <code>string</code> Folder location prefx for the resource category. <code>game::UIResourceManager::getPathPrefixFromCategory</code> <code>res_type</code> <code>uint32</code> Actual resource type, used when loading files. <code>game::UIResourceManager::loadResourceImplFromNormalizedPath</code> <p><code>res_type</code> file Handler</p> <ul> <li>1 = <code>fw::ResLayImg</code> - <code>.wilay</code></li> <li>2 = <code>fw::ResLayFont</code> - <code>.wifnt</code></li> <li>3 = <code>fw::ResLayStyle</code> - <code>.wisty</code></li> <li>4 = <code>fw::ResUIObject</code> - <code>.uio</code></li> <li>5 = <code>fw::ResUIParticle</code> - <code>.uip</code></li> <li>6 = <code>fw::ResUIMotion</code> - <code>.uim</code></li> <li>7 = <code>fw::ResMsprojData</code> - <code>.msbp</code></li> <li>8 = <code>fw::ResModel</code> - <code>.wimdo</code></li> <li>9 = <code>fw::ResBdat</code> - <code>.bdat</code></li> <li>10 = <code>Unused/Unsupported</code></li> </ul>"},{"location":"xc1de/tables/bdat_common/#mnu_resourcetype","title":"MNU_ResourceType","text":"<p>Human Readable Name: Menu - Resource Type</p> <p>Empty &amp; Unused/unreferenced in XC1DE.</p>"},{"location":"xc1de/tables/bdat_common/#mnu_streamannounce","title":"MNU_StreamAnnounce","text":"<p>Human Readable Name: Menu - Stream Announce</p> <p>Empty &amp; Unused/unreferenced in XC1DE.</p>"},{"location":"xc1de/tables/bdat_common/#mnu_streamhelp","title":"MNU_StreamHelp","text":"<p>Human Readable Name: Menu - Stream Help</p> <p>Empty &amp; Unused/unreferenced in XC1DE.</p>"},{"location":"xc1de/tables/bdat_common/#mnu_stream","title":"MNU_Stream","text":"<p>Human Readable Name: Menu - Stream</p> <p>Empty &amp; Unused/unreferenced in XC1DE.</p>"},{"location":"xc1de/tables/bdat_common/#mnu_stylearmorpc","title":"MNU_StyleArmorPc","text":"<p>Human Readable Name: Menu - Style Armor Playable Character</p> <p><code>MsTextId</code> linked to <code>ITM_fashionlist_ms</code>.</p> <p><code>MNU_StyleArmorPc%02d</code> where:</p> <ul> <li><code>%02d</code> - Playable character ID - uint16 </li> </ul> <p>Returns localized weapon style name if enabled for a specific body part. Depends on ITM_wpnlist.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> File Name. <code>game::MenuStyleEnumerable::create</code> <code>head</code> <code>uint8</code> Whether this style is enabled for head parts. <code>game::BDatMnuStyleArmor::isEnableParts</code> <code>body</code> <code>uint8</code> Whether this style is enabled for body parts. <code>game::BDatMnuStyleArmor::isEnableParts</code> <code>arm</code> <code>uint8</code> Whether this style is enabled for arm parts. <code>game::BDatMnuStyleArmor::isEnableParts</code> <code>waist</code> <code>uint8</code> Whether this style is enabled for waist parts. <code>game::BDatMnuStyleArmor::isEnableParts</code> <code>leg</code> <code>uint8</code> Whether this style is enabled for leg parts. <code>game::BDatMnuStyleArmor::isEnableParts</code> <code>index</code> <code>uint8</code> Order index (?) <code>game::BDatMnuStyleArmor::isEnableParts</code>"},{"location":"xc1de/tables/bdat_common/#mnu_styleweaponpc","title":"MNU_StyleWeaponPc","text":"<p>Human Readable Name: Menu - Style Armor Playable Character</p> <p><code>MsTextId</code> linked to <code>ITM_fashionlist_ms</code>.</p> <p><code>MNU_StyleWeaponPc%02d</code> where:</p> <ul> <li><code>%02d</code> - Playable character ID - uint16 </li> </ul> <p>Returns localized weapon style names. Depends on ITM_wpnlist.</p> Column Type Description Handled by <code>name</code> <code>MsTextId</code> File Name. <code>game::MenuStyleEnumerable::create</code> <code>index</code> <code>uint8</code> Order index (?)"},{"location":"xc1de/tables/bdat_common/#mnu_text_idlist","title":"MNU_Text_IdList","text":"<p>Human Readable Name: Menu - Text ID List</p> <p>Table that points IDs to a specific bdat localized entry. Possibly unused in XC1DE.</p> Column Type Description Handled by <code>text_file</code> <code>uint16</code> MNU_TextLink_MsTxt ID. <code>game::UIDataLibrary::getTextFromTextIdList</code> <code>text_id</code> <code>uint32</code> Row ID for the specified Ms Bdat. <code>game::UIDataLibrary::getTextFromTextIdList</code>"},{"location":"xc1de/tables/bdat_common/#mnu_textlink_mstxt","title":"MNU_TextLink_Mstxt","text":"<p>Human Readable Name: Menu - Text Link Table - Ms Text</p> <p>Used by MNU_Text_IdList to link to bdat files. Possibly unused in XC1DE.</p> Column Type Description Handled by <code>filename</code> <code>string</code> Localized Bdat File name. <code>game::UIDataLibrary::getTextFromTextIdList</code>"},{"location":"xc1de/tables/bdat_common/#journal-quests","title":"Journal / Quests","text":""},{"location":"xc1de/tables/bdat_common/#jnl_pclinelist","title":"JNL_PClinelist","text":"<p>Human Readable Name: Journal - Playable Character - Line list</p> <p>No code references - Appears unused in XC1:DE.</p>"},{"location":"xc1de/tables/bdat_common/#jnl_pcrelatelist","title":"JNL_PCrelatelist","text":"<p>Human Readable Name: Journal - Playable Character - Relation List</p> <p>No code references - Appears unused in XC1:DE.</p>"},{"location":"xc1de/tables/bdat_common/#jnl_playaward","title":"JNL_playaward","text":"<p>Human Readable Name: Journal - Play Awards/Achievements</p> <p><code>MsTextId</code> linked to <code>JNL_playaward_ms</code>.</p> <p>List of achievements/awards &amp; their rewards.</p> Column Type Description Handled by <code>title</code> <code>MsTextId</code> Localized award name. <code>game::MenuPartsInfo::open</code> <code>exp</code> <code>uint16</code> EXP on completion. <code>game::DataUtil::addExpApSpForPlayaward</code> <code>clearflg</code> <code>uint8</code> ?"},{"location":"xc1de/tables/bdat_common/#jnl_questxxyy","title":"JNL_questXXYY","text":"<p>Human Readable Name: Journal - Quests</p> <p><code>JNL_questlistXXYY</code> where:</p> <ul> <li><code>XX</code> - Chapter ID</li> <li><code>YY</code> - Location ID</li> </ul> <p><code>MsTextId</code> linked to <code>JNL_questXXYY_ms</code>.</p> <p>List of quests per area. Quests should also be present in bdat_qts.</p> Column Type Description Handled by <code>title</code> <code>MsTextId</code> Quest title. <code>game::MenuGameQuestAcc::getTitle</code>, <code>game::MenuGameQuestAcc::isDeepCheck</code> <code>qst_genre</code> <code>uint8</code> Quest Genre. 0-3. <code>game::MenuGameQuestAcc::getQuestType</code> &amp; more <code>non_auto</code> <code>uint8</code> Whether this is a non automatic completion quest. Too many. <code>reward_mes</code> <code>uint8</code> How the reward message is displayed. 0-3. <code>game::MenuGameQuestAcc::getRewardShowType</code> <code>npc_id</code> <code>uint16</code> NPC ID. <code>game::MenuGameQuestAcc::getNpcId</code> &amp; more <code>no_map</code> <code>uint8</code> Mapping number aka quest display sort index. <code>game::MenuGameQuestAcc::getMapSortKey</code> <code>force</code> <code>uint8</code> Whether the quest is forced, it cannot be discarded upon display. <code>game::MenuGameQuestAcc::isForce</code> <code>mes_accept</code> <code>uint8</code> Message when accepting. Appears unused <code>mes_refuse</code> <code>uint8</code> Message when refusing. Appears unused <code>flg_s</code> <code>uint16</code> Scenario flag for this quest. <code>game::GimmickMarker::checkJNLQuestCnd</code>, <code>game::QuestUtil::canAcceptOrder</code> <code>cnd_questID</code> <code>uint16</code> Required Quest ID completion for this quest. <code>game::QuestUtil::canAcceptOrder</code> <code>cnd_famous</code> <code>uint16</code> Required area reputation for this quest. <code>game::QuestUtil::canAcceptOrder</code> <code>npcmeetID1</code> <code>uint16</code> Required NPC #1 met for this quest. <code>game::QuestUtil::canAcceptOrder</code> <code>flg_relate</code> <code>uint16</code> Relation/Affinity JNL_relatelist ID. <code>game::QuestUtil::canAcceptOrder</code> <code>cnd_relate</code> <code>uint8</code> Required relation/affinity (based on provided ID). <code>game::QuestUtil::canAcceptOrder</code> <code>up_questID</code> <code>uint16</code> Mututally exclusive quest #1. <code>game::QuestManager::setupQuest</code> <code>up_questID2</code> <code>uint16</code> Mututally exclusive quest #2. <code>game::QuestManager::setupQuest</code> <code>no_report</code> <code>uint8</code> Unknown. Possibly no notification? <code>game::MenuGameQuestAcc::getTaskInfo</code> &amp; more <code>reward_A1</code> <code>uint16</code> Item ID Branch A - Reward #1 <code>game::MenuGameQuestAcc::getRewardItemId</code>, <code>game::MenuGameQuestAcc::getRewardItemName</code> <code>reward_A2</code> <code>uint16</code> Item ID Branch A - Reward #2 <code>game::MenuGameQuestAcc::getRewardItemId</code>, <code>game::MenuGameQuestAcc::getRewardItemName</code> <code>reward_A3</code> <code>uint16</code> Item ID Branch A - Reward #3 <code>game::MenuGameQuestAcc::getRewardItemId</code>, <code>game::MenuGameQuestAcc::getRewardItemName</code> <code>reward_B1</code> <code>uint16</code> Item ID Branch B - Reward #1 <code>game::MenuGameQuestAcc::getRewardItemId</code>, <code>game::MenuGameQuestAcc::getRewardItemName</code> <code>reward_B2</code> <code>uint16</code> Item ID Branch B - Reward #2 <code>game::MenuGameQuestAcc::getRewardItemId</code>, <code>game::MenuGameQuestAcc::getRewardItemName</code> <code>reward_B3</code> <code>uint16</code> Item ID Branch B - Reward #3 <code>game::MenuGameQuestAcc::getRewardItemId</code>, <code>game::MenuGameQuestAcc::getRewardItemName</code> <code>reward_exp</code> <code>uint16</code> EXP reward on completion. <code>game::MenuGameQuestAcc::getRewardExp</code> <code>reward_money</code> <code>uint16</code> Money reward on completion. <code>game::MenuGameQuestAcc::getRewardMoney</code> <code>order_succ_A</code> <code>uint16</code> Whether quest conditions have to be done in order (Branch A) <code>game::MenuGameQuestAcc::isOrderSucc</code> <code>type_succ_A1</code> <code>uint8</code> Quest Step #1 Type (Branch A) <code>cnd_succ_A1</code> <code>uint16</code> Quest Step #1 Value/Condition - Depends on type. (Branch A) <code>num_succ_A1</code> <code>uint8</code> Quest Step #1 Number Required (Branch A) <code>hnd_succ_A1</code> <code>uint8</code> Unused. <code>type_succ_A2</code> <code>uint8</code> Quest Step #2 Type (Branch A) <code>cnd_succ_A2</code> <code>uint16</code> Quest Step #2 Value/Condition - Depends on type. (Branch A) <code>num_succ_A2</code> <code>uint8</code> Quest Step #2 Number Required (Branch A) <code>hnd_succ_A2</code> <code>uint8</code> Unused. <code>type_succ_A3</code> <code>uint8</code> Quest Step #3 Type (Branch A) <code>cnd_succ_A3</code> <code>uint16</code> Quest Step #3 Value/Condition - Depends on type. (Branch A) <code>num_succ_A3</code> <code>uint8</code> Quest Step #3 Number Required (Branch A) <code>hnd_succ_A3</code> <code>uint8</code> Unused. <code>type_succ_A4</code> <code>uint8</code> Quest Step #4 Type (Branch A) <code>cnd_succ_A4</code> <code>uint16</code> Quest Step #4 Value/Condition - Depends on type. (Branch A) <code>num_succ_A4</code> <code>uint8</code> Quest Step #4 Number Required (Branch A) <code>hnd_succ_A4</code> <code>uint8</code> Unused. <code>type_succ_B1</code> <code>uint8</code> Quest Step #1 Type (Branch B) <code>cnd_succ_B1</code> <code>uint16</code> Quest Step #1 Value/Condition - Depends on type. (Branch B) <code>num_succ_B1</code> <code>uint8</code> Quest Step #1 Number Required (Branch B) <code>hnd_succ_B1</code> <code>uint8</code> Unused. <code>type_succ_B2</code> <code>uint8</code> Quest Step #2 Type (Branch B) <code>cnd_succ_B2</code> <code>uint16</code> Quest Step #2 Value/Condition - Depends on type. (Branch B) <code>num_succ_B2</code> <code>uint8</code> Quest Step #2 Number Required (Branch B) <code>hnd_succ_B2</code> <code>uint8</code> Unused. <code>type_succ_B3</code> <code>uint8</code> Quest Step #3 Type (Branch B) <code>cnd_succ_B3</code> <code>uint16</code> Quest Step #3 Value/Condition - Depends on type. (Branch B) <code>num_succ_B3</code> <code>uint8</code> Quest Step #3 Number Required (Branch B) <code>hnd_succ_B3</code> <code>uint8</code> Unused. <code>type_succ_B4</code> <code>uint8</code> Quest Step #4 Type (Branch B) <code>cnd_succ_B4</code> <code>uint16</code> Quest Step #4 Value/Condition - Depends on type. (Branch B) <code>num_succ_B4</code> <code>uint8</code> Quest Step #4 Number Required (Branch B) <code>hnd_succ_B4</code> <code>uint8</code> Unused. <code>up_famous_A1</code> <code>uint16</code> Area Reputation increase (Branch A). <code>game::MenuGameQuestAcc::getFamousInfo</code> <code>flg_relate_A1</code> <code>uint16</code> Relation/Affinity JNL_relatelist change #1 on completion. (Branch B) <code>up_relate_A1</code> <code>uint8</code> How much relation/affinity #1 increases by. (Branch B) <code>flg_relate_A2</code> <code>uint16</code> Relation/Affinity JNL_relatelist change #2 on completion. (Branch B) <code>up_relate_A2</code> <code>uint8</code> How much relation/affinity #2 increases by. (Branch B) <code>flg_relate_A3</code> <code>uint16</code> Relation/Affinity JNL_relatelist change #3 on completion. (Branch B) <code>up_relate_A3</code> <code>uint8</code> How much relation/affinity #3 increases by. (Branch B) <code>flg_relate_A4</code> <code>uint16</code> Relation/Affinity JNL_relatelist change #4 on completion. (Branch B) <code>up_relate_A4</code> <code>uint8</code> How much relation/affinity #4 increases by. (Branch B) <code>up_famous_B1</code> <code>uint16</code> Area Reputation increase (Branch B). <code>game::MenuGameQuestAcc::getFamousInfo</code> <code>flg_relate_B1</code> <code>uint16</code> Relation/Affinity JNL_relatelist change #1 on completion. (Branch B) <code>up_relate_B1</code> <code>uint8</code> How much relation/affinity #1 increases by. (Branch B) <code>flg_relate_B2</code> <code>uint16</code> Relation/Affinity JNL_relatelist change #2 on completion. (Branch B) <code>up_relate_B2</code> <code>uint8</code> How much relation/affinity #2 increases by. (Branch B) <code>flg_relate_B3</code> <code>uint16</code> Relation/Affinity JNL_relatelist change #3 on completion. (Branch B) <code>up_relate_B3</code> <code>uint8</code> How much relation/affinity #3 increases by. (Branch B) <code>flg_relate_B4</code> <code>uint16</code> Relation/Affinity JNL_relatelist change #4 on completion. (Branch B) <code>up_relate_B4</code> <code>uint8</code> How much relation/affinity #4 increases by. (Branch B) <p><code>qst_genre</code> / Quest Genre</p> <ul> <li>0 = Normal</li> <li>1 = Story</li> <li>2 = Unknown</li> <li>3 = Timed</li> </ul> <p>Quest Type</p> <ul> <li>1 = Defeat Enemy</li> <li>2 = Item required</li> <li>3 = Talk to NPC</li> <li>4 = Branching Quest, Quest IDs</li> <li>5 = Use gimmick/field object?</li> </ul> <p>Reputation Increase Area</p> <p>Depends on NPC ID and it's landmark location from landmarklist. <code>mapID</code> is then used.</p> <p>Then, the area is grabbed using the map ID using <code>game::MenuGameDataMapUtil::GetMapAreaIdFromMapId</code> - Hardcoded table.</p>"},{"location":"xc1de/tables/bdat_common/#jnl_relatelist","title":"JNL_relatelist","text":"<p>Human Readable Name: Journal - Relation/Affinity Link Listing</p> <p><code>MsTextId</code> linked to <code>JNL_relatelist_ms</code>.</p> <p>List of all the affinity links. Referenced through FLD_npclist-&gt;<code>rlt_face</code>.</p> Column Type Description Handled by <code>pain1</code> <code>string</code> Used for searching. Must be 6 chars for 2 NPCs. <code>game::MenuPartsKizunagramWorldView::setupBdat</code> <code>pain_txt1</code> <code>string</code> Possibly unused? <code>pain_txt2</code> <code>string</code> Possibly unused? <code>caption1</code> <code>uint16</code> Localized caption 1. <code>game::MenuPartsKizunagramWorldView::setActivationRelateMarker</code> <code>caption2</code> <code>uint16</code> Localized caption 2. <code>game::MenuPartsKizunagramWorldView::setActivationRelateMarker</code> <code>caption3</code> <code>uint16</code> Localized caption 3. <code>game::MenuPartsKizunagramWorldView::setActivationRelateMarker</code> <code>caption4</code> <code>uint16</code> Localized caption 4. <code>game::MenuPartsKizunagramWorldView::setActivationRelateMarker</code> <code>caption5</code> <code>uint16</code> Localized caption 5. <code>game::MenuPartsKizunagramWorldView::setActivationRelateMarker</code> <code>npc_id_1a</code> <code>uint16</code> NPC ID 1 A <code>game::MenuManager::onDataFlagChanged</code> <code>npc_id_1b</code> <code>uint16</code> NPC ID 1 B <code>game::MenuManager::onDataFlagChanged</code> <code>npc_id_1c</code> <code>uint16</code> NPC ID 1 C <code>game::MenuManager::onDataFlagChanged</code> <code>npc_id_2a</code> <code>uint16</code> NPC ID 2 A <code>game::MenuManager::onDataFlagChanged</code> <code>npc_id_2b</code> <code>uint16</code> NPC ID 2 B <code>game::MenuManager::onDataFlagChanged</code> <code>npc_id_2c</code> <code>uint16</code> NPC ID 2 C <code>game::MenuManager::onDataFlagChanged</code>"},{"location":"xc1de/tables/bdat_common/#jnl_relatepoint","title":"JNL_relatepoint","text":"<p>Human Readable Name: Journal - Relation/Heart-to-Heart Points</p> <p>List of all the Heart-to-Hearts.</p> Column Type Description Handled by <code>pain</code> <code>string</code> Used for searching. Must be 6 chars for 2 NPCs. <code>game::MenuPartsReviveColony6List::setupHintMode</code> <code>translate_x</code> <code>int16</code> X Translation <code>translate_y</code> <code>int16</code> Y Translation <code>rotate_z</code> <code>int16</code> Z Rotaton <code>scale_x</code> <code>int16</code> X Scale <code>scale_y</code> <code>int16</code> Y Scale <code>size_x</code> <code>int16</code> X Size <code>size_y</code> <code>int16</code> Y Size"},{"location":"xc1de/tables/bdat_common/#jnl_trustup","title":"JNL_trustup","text":"<p>Human Readable Name: Journal - Relation/Heart-to-Heart Points</p> <p>List of trust/affinity increases during NPC talks (referenced with the <code>[XENO:trust]</code> tag).</p> Column Type Description Handled by <code>trust_up</code> <code>int16</code> Affinity increase. <code>game::MenuSeqTalkBalloon::setTalkMessage</code>"},{"location":"xc1de/tables/bdat_common/#colony-6-restoration","title":"Colony 6 Restoration","text":""},{"location":"xc1de/tables/bdat_common/#cl6_hintlist","title":"CL6_hintlist","text":"<p>Human Readable Name: Conly 6 - Hint List</p> <p><code>MsTextId</code> linked to <code>CL6_hintlist</code>.</p> <p>List of Colony 6 restoration hints.</p> Column Type Description Handled by <code>title</code> <code>MsTextId</code> Localized hint name. <code>game::MenuPartsReviveColony6List::setupHintMode</code> <code>type</code> <code>uint8</code> Possibly unused? <code>flag</code> <code>uint8</code> Completion %. <code>game::MenuPartsReviveColony6List::setupHintMode</code> <code>UID</code> <code>uint8</code> Possibly unused?"},{"location":"xc1de/tables/bdat_common/#cl6_invitelist","title":"CL6_invitelist","text":"<p>Human Readable Name: Conly 6 - Invitable NPC List</p> <p>List of invitable npcs to Colony 6.</p> <p>TODO - Unknown where this is read</p>"},{"location":"xc1de/tables/bdat_common/#cl6_materiallist","title":"CL6_materiallist","text":"<p>Human Readable Name: Conly 6 - Material List</p> <p>Colony 6 restoration material requirements. </p> Column Type Description Handled by <code>money</code> <code>uint16</code> Required money. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>material1</code> <code>uint16</code> Item ID 1. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>number1</code> <code>uint16</code> Number of items 1. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>material2</code> <code>uint16</code> Item ID 2. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>number2</code> <code>uint16</code> Number of items 2. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>material3</code> <code>uint16</code> Item ID 3. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>number3</code> <code>uint16</code> Number of items 3. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>material4</code> <code>uint16</code> Item ID 4. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>number4</code> <code>uint16</code> Number of items 4. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>material5</code> <code>uint16</code> Item ID 5. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code> <code>number5</code> <code>uint16</code> Number of items 5. <code>game::MenuPartsReviveColony6Util::getRevivalNextLvRequireMaterial</code>"},{"location":"xc1de/tables/bdat_common/#cl6_revivallist","title":"CL6_revivallist","text":"<p>Human Readable Name: Colony 6 - Revival List</p> <p>Unknown where this is used/read - possibly unused.</p>"},{"location":"xc1de/tables/bdat_common/#cl6_rwdlist","title":"CL6_rwdlist","text":"<p>Human Readable Name: Conly 6 - Reward List</p> <p>Colony 6 restoration rewards. </p> Column Type Description Handled by <code>itemID</code> <code>uint16</code> Item ID. <code>game::MenuPartsReviveColony6Util::getRewardItemIdLevelComplete</code>"},{"location":"xc1de/tables/bdat_common/#cl6_uplist","title":"CL6_uplist","text":"<p>Human Readable Name: Colony 6 - Up List</p> <p>Colony 6 restoration upgrade parameters (camera, etc).</p> <p>TODO <code>game::MenuPartsReviveColony6PerformLevelUpAction::setupPerformance</code>/<code>game::MenuPartsReviveColony6Util::incrementRevivalLevel</code></p>"},{"location":"xc1de/tables/bdat_common/#system","title":"System","text":""},{"location":"xc1de/tables/bdat_common/#sys_filelist","title":"SYS_filelist","text":"<p>Human Readable Name: System - File List</p> <p>Table of files. Used by:</p> <ul> <li>FLD_npclist</li> <li>FLD_maplist</li> <li>MNU_minimap_list_fs</li> <li>MNU_minimap_list_hud</li> </ul> Column Type Description Handled by <code>filename</code> <code>string</code> File Name. <code>game::MenuGameDataMap::getMapCaptureImageFileName</code>, <code>game::MenuGameDataNpc::getFaceTextureFileName</code>, <code>game::MenuGameDataMap::getMapFloorImageName</code>"},{"location":"xc1de/tables/bdat_common/#sys_filelist_ex","title":"SYS_filelist_ex","text":"<p>Human Readable Name: System - File List Ex</p> <p>Table of extra files. Used by:</p> <ul> <li>ITM_itemlist-&gt;icon</li> <li>ITM_itemlist-&gt;icon_base</li> <li>pc_arts-&gt;icon</li> <li>pc_arts-&gt;icon_base</li> <li>nopon_arts-&gt;icon</li> <li>nopon_arts-&gt;icon_base</li> <li>BTL_enelist-&gt;mnu_vision_face</li> <li>BTL_bufflist-&gt;icon</li> </ul> <p>Some ids are hardcoded for use.</p> Column Type Description Handled by <code>file_id</code> <code>uint16</code> Appears unused. <code>res_image_idx</code> <code>uint16</code> Appears unused. <code>icon_idx</code> <code>uint8</code> Layer Icon Index. Too many."},{"location":"xc1de/tables/bdat_common/#sys_iconlist","title":"SYS_iconlist","text":"<p>Human Readable Name: System - Icon List</p> <p>Possibly Unused.</p> Column Type Description Handled by <code>filename1</code> <code>uint16</code> Appears unused. <code>filename2</code> <code>uint16</code> Appears unused."},{"location":"xc1de/tables/bdat_common/#sys_viblist","title":"SYS_viblist","text":"<p>Human Readable Name: System - Vibration List</p> <p>Handles vibration. Many IDs are hardcoded depending on the situation.</p> Column Type Description Handled by <code>vibid</code> <code>uint16</code> Vibration ID <code>game::GameVib::playVibration</code> <code>gainLow</code> <code>float</code> Low Gain <code>game::GameVib::playVibration</code> <code>pitchLow</code> <code>float</code> Low Pitch <code>game::GameVib::playVibration</code> <code>gainHigh</code> <code>float</code> Gain High <code>game::GameVib::playVibration</code> <code>pitchHigh</code> <code>float</code> Pitch High <code>game::GameVib::playVibration</code> <code>speed</code> <code>float</code> Speed <code>game::GameVib::playVibration</code>"}]}